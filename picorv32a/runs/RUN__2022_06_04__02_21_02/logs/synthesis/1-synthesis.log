
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.12+45 (git sha1 UNKNOWN, gcc 8.3.1 -fPIC -Os)

[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.

1. Executing Verilog-2005 frontend: /openlane/designs/current/src/picorv32a.v
Parsing SystemVerilog input from `/openlane/designs/current/src/picorv32a.v' to AST representation.
Generating RTLIL representation for module `\picorv32a'.
Generating RTLIL representation for module `\picorv32_regs'.
Generating RTLIL representation for module `\picorv32_pcpi_mul'.
Generating RTLIL representation for module `\picorv32_pcpi_fast_mul'.
Generating RTLIL representation for module `\picorv32_pcpi_div'.
Generating RTLIL representation for module `\picorv32_axi'.
Generating RTLIL representation for module `\picorv32_axi_adapter'.
Generating RTLIL representation for module `\picorv32_wb'.
Successfully finished Verilog frontend.

2. Generating Graphviz representation of design.
Writing dot description to `/openlane/designs/current/runs/RUN__2022_06_04__02_21_02/tmp/synthesis/hierarchy.dot'.
Dumping module picorv32a to page 1.

3. Executing HIERARCHY pass (managing design hierarchy).

3.1. Analyzing design hierarchy..
Top module:  \picorv32a
Used module:     \picorv32_pcpi_fast_mul

3.2. Analyzing design hierarchy..
Top module:  \picorv32a
Used module:     \picorv32_pcpi_fast_mul
Removing unused module `\picorv32_wb'.
Removing unused module `\picorv32_axi_adapter'.
Removing unused module `\picorv32_axi'.
Removing unused module `\picorv32_pcpi_div'.
Removing unused module `\picorv32_pcpi_mul'.
Removing unused module `\picorv32_regs'.
Removed 6 unused modules.

4. Executing TRIBUF pass.

5. Executing SYNTH pass.

5.1. Executing HIERARCHY pass (managing design hierarchy).

5.1.1. Analyzing design hierarchy..
Top module:  \picorv32a
Used module:     \picorv32_pcpi_fast_mul

5.1.2. Analyzing design hierarchy..
Top module:  \picorv32a
Used module:     \picorv32_pcpi_fast_mul
Removed 0 unused modules.

5.2. Executing PROC pass (convert processes to netlists).

5.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:0$685'.
Removing empty process `picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:0$685'.
Found and cleaned up 16 empty switches in `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
Found and cleaned up 1 empty switch in `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1301$490'.
Found and cleaned up 6 empty switches in `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:510$129'.
Removing empty process `picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:510$129'.
Cleaned up 24 empty switches.

5.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 3 switch rules as full_case in process $proc$/openlane/designs/current/src/picorv32a.v:2287$773 in module picorv32_pcpi_fast_mul.
Marked 2 switch rules as full_case in process $proc$/openlane/designs/current/src/picorv32a.v:2257$766 in module picorv32_pcpi_fast_mul.
Marked 36 switch rules as full_case in process $proc$/openlane/designs/current/src/picorv32a.v:1355$505 in module picorv32a.
Marked 1 switch rules as full_case in process $proc$/openlane/designs/current/src/picorv32a.v:1296$481 in module picorv32a.
Marked 2 switch rules as full_case in process $proc$/openlane/designs/current/src/picorv32a.v:1268$469 in module picorv32a.
Marked 2 switch rules as full_case in process $proc$/openlane/designs/current/src/picorv32a.v:1254$464 in module picorv32a.
Marked 8 switch rules as full_case in process $proc$/openlane/designs/current/src/picorv32a.v:1145$429 in module picorv32a.
Marked 3 switch rules as full_case in process $proc$/openlane/designs/current/src/picorv32a.v:820$169 in module picorv32a.
Marked 3 switch rules as full_case in process $proc$/openlane/designs/current/src/picorv32a.v:771$167 in module picorv32a.
Marked 2 switch rules as full_case in process $proc$/openlane/designs/current/src/picorv32a.v:740$163 in module picorv32a.
Marked 47 switch rules as full_case in process $proc$/openlane/designs/current/src/picorv32a.v:664$162 in module picorv32a.
Marked 4 switch rules as full_case in process $proc$/openlane/designs/current/src/picorv32a.v:529$138 in module picorv32a.
Marked 1 switch rules as full_case in process $proc$/openlane/designs/current/src/picorv32a.v:394$100 in module picorv32a.
Removed 2 dead cases from process $proc$/openlane/designs/current/src/picorv32a.v:365$97 in module picorv32a.
Marked 2 switch rules as full_case in process $proc$/openlane/designs/current/src/picorv32a.v:365$97 in module picorv32a.
Marked 1 switch rules as full_case in process $proc$/openlane/designs/current/src/picorv32a.v:354$92 in module picorv32a.
Marked 1 switch rules as full_case in process $proc$/openlane/designs/current/src/picorv32a.v:289$18 in module picorv32a.
Removed a total of 2 dead cases.

5.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 5 redundant assignments.
Promoted 64 assignments to connections.

5.2.4. Executing PROC_INIT pass (extract init attributes).

5.2.5. Executing PROC_ARST pass (detect async resets in processes).

5.2.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\picorv32_pcpi_fast_mul.$proc$/openlane/designs/current/src/picorv32a.v:2287$773'.
     1/4: $0\active[3:0] [3:1]
     2/4: $0\active[3:0] [0]
     3/4: $0\rs2[32:0]
     4/4: $0\rs1[32:0]
Creating decoders for process `\picorv32_pcpi_fast_mul.$proc$/openlane/designs/current/src/picorv32a.v:2273$768'.
     1/4: $0\rd_q[63:0]
     2/4: $0\rs2_q[32:0]
     3/4: $0\rs1_q[32:0]
     4/4: $0\rd[63:0]
Creating decoders for process `\picorv32_pcpi_fast_mul.$proc$/openlane/designs/current/src/picorv32a.v:2257$766'.
     1/8: $2\instr_mul[0:0]
     2/8: $2\instr_mulhu[0:0]
     3/8: $2\instr_mulhsu[0:0]
     4/8: $2\instr_mulh[0:0]
     5/8: $1\instr_mulhu[0:0]
     6/8: $1\instr_mulhsu[0:0]
     7/8: $1\instr_mulh[0:0]
     8/8: $1\instr_mul[0:0]
Creating decoders for process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
     1/79: $17\next_irq_pending[2:2]
     2/79: $16\next_irq_pending[2:2]
     3/79: $15\next_irq_pending[2:2]
     4/79: $14\next_irq_pending[2:2]
     5/79: $13\next_irq_pending[2:2]
     6/79: $12\next_irq_pending[2:2]
     7/79: $11\next_irq_pending[2:2]
     8/79: $5\next_irq_pending[31:0] [31:2]
     9/79: $3\set_mem_do_rdata[0:0]
    10/79: $5\next_irq_pending[31:0] [1]
    11/79: $3\set_mem_do_wdata[0:0]
    12/79: $5\next_irq_pending[31:0] [0]
    13/79: $4\set_mem_do_rinst[0:0]
    14/79: $3\set_mem_do_rinst[0:0]
    15/79: $4\set_mem_do_wdata[0:0]
    16/79: $9\next_irq_pending[1:1]
    17/79: $8\next_irq_pending[1:1]
    18/79: $7\next_irq_pending[1:1]
    19/79: $4\set_mem_do_rdata[0:0]
    20/79: $5\set_mem_do_rinst[0:0]
    21/79: $10\next_irq_pending[1:1]
    22/79: $6\next_irq_pending[31:0]
    23/79: $3\current_pc[31:0]
    24/79: $2\current_pc[31:0]
    25/79: $2\set_mem_do_wdata[0:0]
    26/79: $2\set_mem_do_rdata[0:0]
    27/79: $2\set_mem_do_rinst[0:0]
    28/79: $4\next_irq_pending[31:0]
    29/79: $1\current_pc[31:0]
    30/79: $1\set_mem_do_wdata[0:0]
    31/79: $1\set_mem_do_rdata[0:0]
    32/79: $1\set_mem_do_rinst[0:0]
    33/79: $0\trace_data[35:0]
    34/79: $3\next_irq_pending[31:0]
    35/79: $2\next_irq_pending[0:0]
    36/79: $1\next_irq_pending[0:0]
    37/79: $0\count_cycle[63:0]
    38/79: $0\pcpi_timeout[0:0]
    39/79: $0\trace_valid[0:0]
    40/79: $0\do_waitirq[0:0]
    41/79: $0\decoder_pseudo_trigger[0:0]
    42/79: $0\decoder_trigger[0:0]
    43/79: $0\alu_wait_2[0:0]
    44/79: $0\alu_wait[0:0]
    45/79: $0\reg_out[31:0]
    46/79: $0\reg_sh[4:0]
    47/79: $0\trap[0:0]
    48/79: $0\pcpi_timeout_counter[3:0]
    49/79: $0\latched_rd[4:0]
    50/79: $0\latched_is_lb[0:0]
    51/79: $0\latched_is_lh[0:0]
    52/79: $0\latched_is_lu[0:0]
    53/79: $0\latched_trace[0:0]
    54/79: $0\latched_compr[0:0]
    55/79: $0\latched_branch[0:0]
    56/79: $0\latched_stalu[0:0]
    57/79: $0\latched_store[0:0]
    58/79: $0\irq_state[1:0]
    59/79: $0\cpu_state[7:0]
    60/79: $0\dbg_rs2val_valid[0:0]
    61/79: $0\dbg_rs1val_valid[0:0]
    62/79: $0\dbg_rs2val[31:0]
    63/79: $0\dbg_rs1val[31:0]
    64/79: $0\mem_do_wdata[0:0]
    65/79: $0\mem_do_rdata[0:0]
    66/79: $0\mem_do_rinst[0:0]
    67/79: $0\mem_do_prefetch[0:0]
    68/79: $0\mem_wordsize[1:0]
    69/79: $0\timer[31:0]
    70/79: $0\irq_mask[31:0]
    71/79: $0\irq_active[0:0]
    72/79: $0\irq_delay[0:0]
    73/79: $0\reg_op2[31:0]
    74/79: $0\reg_op1[31:0]
    75/79: $0\reg_next_pc[31:0]
    76/79: $0\reg_pc[31:0]
    77/79: $0\count_instr[63:0]
    78/79: $0\eoi[31:0]
    79/79: $0\pcpi_valid[0:0]
Creating decoders for process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1301$490'.
Creating decoders for process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1296$481'.
     1/3: $1$memwr$\cpuregs$/openlane/designs/current/src/picorv32a.v:1298$17_EN[31:0]$489
     2/3: $1$memwr$\cpuregs$/openlane/designs/current/src/picorv32a.v:1298$17_DATA[31:0]$488
     3/3: $1$memwr$\cpuregs$/openlane/designs/current/src/picorv32a.v:1298$17_ADDR[4:0]$487
Creating decoders for process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1268$469'.
     1/4: $2\cpuregs_write[0:0]
     2/4: $2\cpuregs_wrdata[31:0]
     3/4: $1\cpuregs_wrdata[31:0]
     4/4: $1\cpuregs_write[0:0]
Creating decoders for process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1254$464'.
     1/2: $2\clear_prefetched_high_word[0:0]
     2/2: $1\clear_prefetched_high_word[0:0]
Creating decoders for process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1252$463'.
Creating decoders for process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1208$441'.
     1/2: $1\alu_out[31:0]
     2/2: $1\alu_out_0[0:0]
Creating decoders for process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1145$429'.
     1/8: $8\dbg_ascii_state[127:0]
     2/8: $7\dbg_ascii_state[127:0]
     3/8: $6\dbg_ascii_state[127:0]
     4/8: $5\dbg_ascii_state[127:0]
     5/8: $4\dbg_ascii_state[127:0]
     6/8: $3\dbg_ascii_state[127:0]
     7/8: $2\dbg_ascii_state[127:0]
     8/8: $1\dbg_ascii_state[127:0]
Creating decoders for process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
     1/76: $0\decoded_rs1[4:0] [4]
     2/76: $0\decoded_imm_uj[31:0] [10]
     3/76: $0\decoded_imm_uj[31:0] [7]
     4/76: $0\decoded_imm_uj[31:0] [6]
     5/76: $0\decoded_imm_uj[31:0] [3:1]
     6/76: $0\decoded_imm_uj[31:0] [5]
     7/76: $0\decoded_imm_uj[31:0] [9:8]
     8/76: $0\decoded_imm_uj[31:0] [31:20]
     9/76: $0\decoded_imm_uj[31:0] [4]
    10/76: $0\decoded_imm_uj[31:0] [11]
    11/76: $0\decoded_imm_uj[31:0] [0]
    12/76: $0\decoded_rs1[4:0] [3:0]
    13/76: $0\is_lui_auipc_jal_jalr_addi_add_sub[0:0]
    14/76: $0\is_alu_reg_reg[0:0]
    15/76: $0\is_alu_reg_imm[0:0]
    16/76: $0\is_beq_bne_blt_bge_bltu_bgeu[0:0]
    17/76: $0\is_sll_srl_sra[0:0]
    18/76: $0\is_sb_sh_sw[0:0]
    19/76: $0\is_jalr_addi_slti_sltiu_xori_ori_andi[0:0]
    20/76: $0\is_slli_srli_srai[0:0]
    21/76: $0\is_lb_lh_lw_lbu_lhu[0:0]
    22/76: $0\compressed_instr[0:0]
    23/76: $0\is_compare[0:0]
    24/76: $0\decoded_imm[31:0]
    25/76: $0\decoded_rs2[4:0]
    26/76: $0\decoded_imm_uj[31:0] [19:12]
    27/76: $0\decoded_rd[4:0]
    28/76: $0\instr_timer[0:0]
    29/76: $0\instr_waitirq[0:0]
    30/76: $0\instr_maskirq[0:0]
    31/76: $0\instr_retirq[0:0]
    32/76: $0\instr_setq[0:0]
    33/76: $0\instr_getq[0:0]
    34/76: $0\instr_ecall_ebreak[0:0]
    35/76: $0\instr_rdinstrh[0:0]
    36/76: $0\instr_rdinstr[0:0]
    37/76: $0\instr_rdcycleh[0:0]
    38/76: $0\instr_rdcycle[0:0]
    39/76: $0\instr_and[0:0]
    40/76: $0\instr_or[0:0]
    41/76: $0\instr_sra[0:0]
    42/76: $0\instr_srl[0:0]
    43/76: $0\instr_xor[0:0]
    44/76: $0\instr_sltu[0:0]
    45/76: $0\instr_slt[0:0]
    46/76: $0\instr_sll[0:0]
    47/76: $0\instr_sub[0:0]
    48/76: $0\instr_add[0:0]
    49/76: $0\instr_srai[0:0]
    50/76: $0\instr_srli[0:0]
    51/76: $0\instr_slli[0:0]
    52/76: $0\instr_andi[0:0]
    53/76: $0\instr_ori[0:0]
    54/76: $0\instr_xori[0:0]
    55/76: $0\instr_sltiu[0:0]
    56/76: $0\instr_slti[0:0]
    57/76: $0\instr_addi[0:0]
    58/76: $0\instr_sw[0:0]
    59/76: $0\instr_sh[0:0]
    60/76: $0\instr_sb[0:0]
    61/76: $0\instr_lhu[0:0]
    62/76: $0\instr_lbu[0:0]
    63/76: $0\instr_lw[0:0]
    64/76: $0\instr_lh[0:0]
    65/76: $0\instr_lb[0:0]
    66/76: $0\instr_bgeu[0:0]
    67/76: $0\instr_bltu[0:0]
    68/76: $0\instr_bge[0:0]
    69/76: $0\instr_blt[0:0]
    70/76: $0\instr_bne[0:0]
    71/76: $0\instr_beq[0:0]
    72/76: $0\instr_jalr[0:0]
    73/76: $0\instr_jal[0:0]
    74/76: $0\instr_auipc[0:0]
    75/76: $0\instr_lui[0:0]
    76/76: $0\pcpi_insn[31:0]
Creating decoders for process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:771$167'.
     1/13: $3\dbg_insn_opcode[31:0]
     2/13: $2\dbg_insn_rd[4:0]
     3/13: $2\dbg_insn_rs2[4:0]
     4/13: $2\dbg_insn_rs1[4:0]
     5/13: $2\dbg_insn_opcode[31:0]
     6/13: $2\dbg_insn_imm[31:0]
     7/13: $2\dbg_ascii_instr[63:0]
     8/13: $1\dbg_insn_rd[4:0]
     9/13: $1\dbg_insn_rs2[4:0]
    10/13: $1\dbg_insn_rs1[4:0]
    11/13: $1\dbg_insn_imm[31:0]
    12/13: $1\dbg_ascii_instr[63:0]
    13/13: $1\dbg_insn_opcode[31:0]
Creating decoders for process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:740$163'.
     1/8: $0\cached_insn_rd[4:0]
     2/8: $0\cached_insn_rs2[4:0]
     3/8: $0\cached_insn_rs1[4:0]
     4/8: $0\cached_insn_opcode[31:0]
     5/8: $0\cached_insn_imm[31:0]
     6/8: $0\cached_ascii_instr[63:0]
     7/8: $0\dbg_valid_insn[0:0]
     8/8: $0\dbg_insn_addr[31:0]
Creating decoders for process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:664$162'.
     1/47: $47\new_ascii_instr[63:0]
     2/47: $46\new_ascii_instr[63:0]
     3/47: $45\new_ascii_instr[63:0]
     4/47: $44\new_ascii_instr[63:0]
     5/47: $43\new_ascii_instr[63:0]
     6/47: $42\new_ascii_instr[63:0]
     7/47: $41\new_ascii_instr[63:0]
     8/47: $40\new_ascii_instr[63:0]
     9/47: $39\new_ascii_instr[63:0]
    10/47: $38\new_ascii_instr[63:0]
    11/47: $37\new_ascii_instr[63:0]
    12/47: $36\new_ascii_instr[63:0]
    13/47: $35\new_ascii_instr[63:0]
    14/47: $34\new_ascii_instr[63:0]
    15/47: $33\new_ascii_instr[63:0]
    16/47: $32\new_ascii_instr[63:0]
    17/47: $31\new_ascii_instr[63:0]
    18/47: $30\new_ascii_instr[63:0]
    19/47: $29\new_ascii_instr[63:0]
    20/47: $28\new_ascii_instr[63:0]
    21/47: $27\new_ascii_instr[63:0]
    22/47: $26\new_ascii_instr[63:0]
    23/47: $25\new_ascii_instr[63:0]
    24/47: $24\new_ascii_instr[63:0]
    25/47: $23\new_ascii_instr[63:0]
    26/47: $22\new_ascii_instr[63:0]
    27/47: $21\new_ascii_instr[63:0]
    28/47: $20\new_ascii_instr[63:0]
    29/47: $19\new_ascii_instr[63:0]
    30/47: $18\new_ascii_instr[63:0]
    31/47: $17\new_ascii_instr[63:0]
    32/47: $16\new_ascii_instr[63:0]
    33/47: $15\new_ascii_instr[63:0]
    34/47: $14\new_ascii_instr[63:0]
    35/47: $13\new_ascii_instr[63:0]
    36/47: $12\new_ascii_instr[63:0]
    37/47: $11\new_ascii_instr[63:0]
    38/47: $10\new_ascii_instr[63:0]
    39/47: $9\new_ascii_instr[63:0]
    40/47: $8\new_ascii_instr[63:0]
    41/47: $7\new_ascii_instr[63:0]
    42/47: $6\new_ascii_instr[63:0]
    43/47: $5\new_ascii_instr[63:0]
    44/47: $4\new_ascii_instr[63:0]
    45/47: $3\new_ascii_instr[63:0]
    46/47: $2\new_ascii_instr[63:0]
    47/47: $1\new_ascii_instr[63:0]
Creating decoders for process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:529$138'.
     1/9: $0\mem_16bit_buffer[15:0]
     2/9: $0\prefetched_high_word[0:0]
     3/9: $0\mem_la_secondword[0:0]
     4/9: $0\mem_state[1:0]
     5/9: $0\mem_wstrb[3:0]
     6/9: $0\mem_wdata[31:0]
     7/9: $0\mem_addr[31:0]
     8/9: $0\mem_instr[0:0]
     9/9: $0\mem_valid[0:0]
Creating decoders for process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1189$674'.
Creating decoders for process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:394$100'.
     1/9: $0\mem_rdata_q[31:0] [31]
     2/9: $0\mem_rdata_q[31:0] [7]
     3/9: $0\mem_rdata_q[31:0] [24:20]
     4/9: $0\mem_rdata_q[31:0] [19:15]
     5/9: $0\mem_rdata_q[31:0] [6:0]
     6/9: $0\mem_rdata_q[31:0] [14:12]
     7/9: $0\mem_rdata_q[31:0] [11:8]
     8/9: $0\mem_rdata_q[31:0] [30:25]
     9/9: $0\next_insn_opcode[31:0]
Creating decoders for process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:365$97'.
     1/5: $3\mem_rdata_word[31:0]
     2/5: $2\mem_rdata_word[31:0]
     3/5: $1\mem_rdata_word[31:0]
     4/5: $1\mem_la_wstrb[3:0]
     5/5: $1\mem_la_wdata[31:0]
Creating decoders for process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:354$92'.
     1/2: $0\last_mem_valid[0:0]
     2/2: $0\mem_la_firstword_reg[0:0]
Creating decoders for process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:289$18'.
     1/2: $1\pcpi_int_rd[31:0]
     2/2: $1\pcpi_int_wr[0:0]

5.2.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\picorv32_pcpi_fast_mul.\instr_mul' from process `\picorv32_pcpi_fast_mul.$proc$/openlane/designs/current/src/picorv32a.v:2257$766'.
No latch inferred for signal `\picorv32_pcpi_fast_mul.\instr_mulh' from process `\picorv32_pcpi_fast_mul.$proc$/openlane/designs/current/src/picorv32a.v:2257$766'.
No latch inferred for signal `\picorv32_pcpi_fast_mul.\instr_mulhsu' from process `\picorv32_pcpi_fast_mul.$proc$/openlane/designs/current/src/picorv32a.v:2257$766'.
No latch inferred for signal `\picorv32_pcpi_fast_mul.\instr_mulhu' from process `\picorv32_pcpi_fast_mul.$proc$/openlane/designs/current/src/picorv32a.v:2257$766'.
No latch inferred for signal `\picorv32a.\cpuregs_rs1' from process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1301$490'.
No latch inferred for signal `\picorv32a.\cpuregs_rs2' from process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1301$490'.
No latch inferred for signal `\picorv32a.\decoded_rs' from process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1301$490'.
No latch inferred for signal `\picorv32a.\cpuregs_write' from process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1268$469'.
No latch inferred for signal `\picorv32a.\cpuregs_wrdata' from process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1268$469'.
No latch inferred for signal `\picorv32a.\clear_prefetched_high_word' from process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1254$464'.
No latch inferred for signal `\picorv32a.\alu_out' from process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1208$441'.
No latch inferred for signal `\picorv32a.\alu_out_0' from process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1208$441'.
No latch inferred for signal `\picorv32a.\dbg_ascii_state' from process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1145$429'.
No latch inferred for signal `\picorv32a.\dbg_insn_opcode' from process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:771$167'.
No latch inferred for signal `\picorv32a.\dbg_ascii_instr' from process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:771$167'.
No latch inferred for signal `\picorv32a.\dbg_insn_imm' from process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:771$167'.
No latch inferred for signal `\picorv32a.\dbg_insn_rs1' from process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:771$167'.
No latch inferred for signal `\picorv32a.\dbg_insn_rs2' from process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:771$167'.
No latch inferred for signal `\picorv32a.\dbg_insn_rd' from process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:771$167'.
No latch inferred for signal `\picorv32a.\new_ascii_instr' from process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:664$162'.
No latch inferred for signal `\picorv32a.\mem_la_wdata' from process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:365$97'.
No latch inferred for signal `\picorv32a.\mem_la_wstrb' from process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:365$97'.
No latch inferred for signal `\picorv32a.\mem_rdata_word' from process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:365$97'.
No latch inferred for signal `\picorv32a.\pcpi_int_wr' from process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:289$18'.
No latch inferred for signal `\picorv32a.\pcpi_int_rd' from process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:289$18'.
No latch inferred for signal `\picorv32a.\pcpi_int_wait' from process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:289$18'.
No latch inferred for signal `\picorv32a.\pcpi_int_ready' from process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:289$18'.

5.2.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\picorv32_pcpi_fast_mul.\rs1' using process `\picorv32_pcpi_fast_mul.$proc$/openlane/designs/current/src/picorv32a.v:2287$773'.
  created $dff cell `$procdff$3478' with positive edge clock.
Creating register for signal `\picorv32_pcpi_fast_mul.\rs2' using process `\picorv32_pcpi_fast_mul.$proc$/openlane/designs/current/src/picorv32a.v:2287$773'.
  created $dff cell `$procdff$3479' with positive edge clock.
Creating register for signal `\picorv32_pcpi_fast_mul.\shift_out' using process `\picorv32_pcpi_fast_mul.$proc$/openlane/designs/current/src/picorv32a.v:2287$773'.
  created $dff cell `$procdff$3480' with positive edge clock.
Creating register for signal `\picorv32_pcpi_fast_mul.\active' using process `\picorv32_pcpi_fast_mul.$proc$/openlane/designs/current/src/picorv32a.v:2287$773'.
  created $dff cell `$procdff$3481' with positive edge clock.
Creating register for signal `\picorv32_pcpi_fast_mul.\rd' using process `\picorv32_pcpi_fast_mul.$proc$/openlane/designs/current/src/picorv32a.v:2273$768'.
  created $dff cell `$procdff$3482' with positive edge clock.
Creating register for signal `\picorv32_pcpi_fast_mul.\rs1_q' using process `\picorv32_pcpi_fast_mul.$proc$/openlane/designs/current/src/picorv32a.v:2273$768'.
  created $dff cell `$procdff$3483' with positive edge clock.
Creating register for signal `\picorv32_pcpi_fast_mul.\rs2_q' using process `\picorv32_pcpi_fast_mul.$proc$/openlane/designs/current/src/picorv32a.v:2273$768'.
  created $dff cell `$procdff$3484' with positive edge clock.
Creating register for signal `\picorv32_pcpi_fast_mul.\rd_q' using process `\picorv32_pcpi_fast_mul.$proc$/openlane/designs/current/src/picorv32a.v:2273$768'.
  created $dff cell `$procdff$3485' with positive edge clock.
Creating register for signal `\picorv32_pcpi_fast_mul.\pcpi_insn_valid_q' using process `\picorv32_pcpi_fast_mul.$proc$/openlane/designs/current/src/picorv32a.v:2273$768'.
  created $dff cell `$procdff$3486' with positive edge clock.
Creating register for signal `\picorv32a.\trap' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3487' with positive edge clock.
Creating register for signal `\picorv32a.\pcpi_valid' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3488' with positive edge clock.
Creating register for signal `\picorv32a.\eoi' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3489' with positive edge clock.
Creating register for signal `\picorv32a.\trace_valid' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3490' with positive edge clock.
Creating register for signal `\picorv32a.\trace_data' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3491' with positive edge clock.
Creating register for signal `\picorv32a.\count_cycle' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3492' with positive edge clock.
Creating register for signal `\picorv32a.\count_instr' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3493' with positive edge clock.
Creating register for signal `\picorv32a.\reg_pc' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3494' with positive edge clock.
Creating register for signal `\picorv32a.\reg_next_pc' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3495' with positive edge clock.
Creating register for signal `\picorv32a.\reg_op1' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3496' with positive edge clock.
Creating register for signal `\picorv32a.\reg_op2' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3497' with positive edge clock.
Creating register for signal `\picorv32a.\reg_out' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3498' with positive edge clock.
Creating register for signal `\picorv32a.\reg_sh' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3499' with positive edge clock.
Creating register for signal `\picorv32a.\irq_delay' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3500' with positive edge clock.
Creating register for signal `\picorv32a.\irq_active' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3501' with positive edge clock.
Creating register for signal `\picorv32a.\irq_mask' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3502' with positive edge clock.
Creating register for signal `\picorv32a.\irq_pending' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3503' with positive edge clock.
Creating register for signal `\picorv32a.\timer' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3504' with positive edge clock.
Creating register for signal `\picorv32a.\mem_wordsize' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3505' with positive edge clock.
Creating register for signal `\picorv32a.\mem_do_prefetch' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3506' with positive edge clock.
Creating register for signal `\picorv32a.\mem_do_rinst' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3507' with positive edge clock.
Creating register for signal `\picorv32a.\mem_do_rdata' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3508' with positive edge clock.
Creating register for signal `\picorv32a.\mem_do_wdata' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3509' with positive edge clock.
Creating register for signal `\picorv32a.\decoder_trigger' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3510' with positive edge clock.
Creating register for signal `\picorv32a.\decoder_trigger_q' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3511' with positive edge clock.
Creating register for signal `\picorv32a.\decoder_pseudo_trigger' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3512' with positive edge clock.
Creating register for signal `\picorv32a.\decoder_pseudo_trigger_q' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3513' with positive edge clock.
Creating register for signal `\picorv32a.\dbg_rs1val' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3514' with positive edge clock.
Creating register for signal `\picorv32a.\dbg_rs2val' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3515' with positive edge clock.
Creating register for signal `\picorv32a.\dbg_rs1val_valid' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3516' with positive edge clock.
Creating register for signal `\picorv32a.\dbg_rs2val_valid' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3517' with positive edge clock.
Creating register for signal `\picorv32a.\cpu_state' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3518' with positive edge clock.
Creating register for signal `\picorv32a.\irq_state' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3519' with positive edge clock.
Creating register for signal `\picorv32a.\set_mem_do_rinst' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3520' with positive edge clock.
Creating register for signal `\picorv32a.\set_mem_do_rdata' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3521' with positive edge clock.
Creating register for signal `\picorv32a.\set_mem_do_wdata' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3522' with positive edge clock.
Creating register for signal `\picorv32a.\latched_store' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3523' with positive edge clock.
Creating register for signal `\picorv32a.\latched_stalu' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3524' with positive edge clock.
Creating register for signal `\picorv32a.\latched_branch' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3525' with positive edge clock.
Creating register for signal `\picorv32a.\latched_compr' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3526' with positive edge clock.
Creating register for signal `\picorv32a.\latched_trace' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3527' with positive edge clock.
Creating register for signal `\picorv32a.\latched_is_lu' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3528' with positive edge clock.
Creating register for signal `\picorv32a.\latched_is_lh' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3529' with positive edge clock.
Creating register for signal `\picorv32a.\latched_is_lb' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3530' with positive edge clock.
Creating register for signal `\picorv32a.\latched_rd' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3531' with positive edge clock.
Creating register for signal `\picorv32a.\current_pc' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3532' with positive edge clock.
Creating register for signal `\picorv32a.\pcpi_timeout_counter' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3533' with positive edge clock.
Creating register for signal `\picorv32a.\pcpi_timeout' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3534' with positive edge clock.
Creating register for signal `\picorv32a.\next_irq_pending' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3535' with positive edge clock.
Creating register for signal `\picorv32a.\do_waitirq' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3536' with positive edge clock.
Creating register for signal `\picorv32a.\alu_out_q' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3537' with positive edge clock.
Creating register for signal `\picorv32a.\alu_out_0_q' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3538' with positive edge clock.
Creating register for signal `\picorv32a.\alu_wait' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3539' with positive edge clock.
Creating register for signal `\picorv32a.\alu_wait_2' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
  created $dff cell `$procdff$3540' with positive edge clock.
Creating register for signal `\picorv32a.$memwr$\cpuregs$/openlane/designs/current/src/picorv32a.v:1298$17_ADDR' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1296$481'.
  created $dff cell `$procdff$3541' with positive edge clock.
Creating register for signal `\picorv32a.$memwr$\cpuregs$/openlane/designs/current/src/picorv32a.v:1298$17_DATA' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1296$481'.
  created $dff cell `$procdff$3542' with positive edge clock.
Creating register for signal `\picorv32a.$memwr$\cpuregs$/openlane/designs/current/src/picorv32a.v:1298$17_EN' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1296$481'.
  created $dff cell `$procdff$3543' with positive edge clock.
Creating register for signal `\picorv32a.\clear_prefetched_high_word_q' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1252$463'.
  created $dff cell `$procdff$3544' with positive edge clock.
Creating register for signal `\picorv32a.\pcpi_insn' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3545' with positive edge clock.
Creating register for signal `\picorv32a.\instr_lui' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3546' with positive edge clock.
Creating register for signal `\picorv32a.\instr_auipc' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3547' with positive edge clock.
Creating register for signal `\picorv32a.\instr_jal' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3548' with positive edge clock.
Creating register for signal `\picorv32a.\instr_jalr' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3549' with positive edge clock.
Creating register for signal `\picorv32a.\instr_beq' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3550' with positive edge clock.
Creating register for signal `\picorv32a.\instr_bne' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3551' with positive edge clock.
Creating register for signal `\picorv32a.\instr_blt' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3552' with positive edge clock.
Creating register for signal `\picorv32a.\instr_bge' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3553' with positive edge clock.
Creating register for signal `\picorv32a.\instr_bltu' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3554' with positive edge clock.
Creating register for signal `\picorv32a.\instr_bgeu' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3555' with positive edge clock.
Creating register for signal `\picorv32a.\instr_lb' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3556' with positive edge clock.
Creating register for signal `\picorv32a.\instr_lh' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3557' with positive edge clock.
Creating register for signal `\picorv32a.\instr_lw' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3558' with positive edge clock.
Creating register for signal `\picorv32a.\instr_lbu' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3559' with positive edge clock.
Creating register for signal `\picorv32a.\instr_lhu' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3560' with positive edge clock.
Creating register for signal `\picorv32a.\instr_sb' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3561' with positive edge clock.
Creating register for signal `\picorv32a.\instr_sh' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3562' with positive edge clock.
Creating register for signal `\picorv32a.\instr_sw' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3563' with positive edge clock.
Creating register for signal `\picorv32a.\instr_addi' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3564' with positive edge clock.
Creating register for signal `\picorv32a.\instr_slti' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3565' with positive edge clock.
Creating register for signal `\picorv32a.\instr_sltiu' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3566' with positive edge clock.
Creating register for signal `\picorv32a.\instr_xori' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3567' with positive edge clock.
Creating register for signal `\picorv32a.\instr_ori' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3568' with positive edge clock.
Creating register for signal `\picorv32a.\instr_andi' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3569' with positive edge clock.
Creating register for signal `\picorv32a.\instr_slli' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3570' with positive edge clock.
Creating register for signal `\picorv32a.\instr_srli' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3571' with positive edge clock.
Creating register for signal `\picorv32a.\instr_srai' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3572' with positive edge clock.
Creating register for signal `\picorv32a.\instr_add' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3573' with positive edge clock.
Creating register for signal `\picorv32a.\instr_sub' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3574' with positive edge clock.
Creating register for signal `\picorv32a.\instr_sll' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3575' with positive edge clock.
Creating register for signal `\picorv32a.\instr_slt' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3576' with positive edge clock.
Creating register for signal `\picorv32a.\instr_sltu' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3577' with positive edge clock.
Creating register for signal `\picorv32a.\instr_xor' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3578' with positive edge clock.
Creating register for signal `\picorv32a.\instr_srl' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3579' with positive edge clock.
Creating register for signal `\picorv32a.\instr_sra' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3580' with positive edge clock.
Creating register for signal `\picorv32a.\instr_or' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3581' with positive edge clock.
Creating register for signal `\picorv32a.\instr_and' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3582' with positive edge clock.
Creating register for signal `\picorv32a.\instr_rdcycle' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3583' with positive edge clock.
Creating register for signal `\picorv32a.\instr_rdcycleh' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3584' with positive edge clock.
Creating register for signal `\picorv32a.\instr_rdinstr' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3585' with positive edge clock.
Creating register for signal `\picorv32a.\instr_rdinstrh' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3586' with positive edge clock.
Creating register for signal `\picorv32a.\instr_ecall_ebreak' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3587' with positive edge clock.
Creating register for signal `\picorv32a.\instr_getq' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3588' with positive edge clock.
Creating register for signal `\picorv32a.\instr_setq' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3589' with positive edge clock.
Creating register for signal `\picorv32a.\instr_retirq' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3590' with positive edge clock.
Creating register for signal `\picorv32a.\instr_maskirq' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3591' with positive edge clock.
Creating register for signal `\picorv32a.\instr_waitirq' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3592' with positive edge clock.
Creating register for signal `\picorv32a.\instr_timer' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3593' with positive edge clock.
Creating register for signal `\picorv32a.\decoded_rd' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3594' with positive edge clock.
Creating register for signal `\picorv32a.\decoded_rs1' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3595' with positive edge clock.
Creating register for signal `\picorv32a.\decoded_rs2' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3596' with positive edge clock.
Creating register for signal `\picorv32a.\decoded_imm' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3597' with positive edge clock.
Creating register for signal `\picorv32a.\decoded_imm_uj' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3598' with positive edge clock.
Creating register for signal `\picorv32a.\compressed_instr' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3599' with positive edge clock.
Creating register for signal `\picorv32a.\is_lui_auipc_jal' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3600' with positive edge clock.
Creating register for signal `\picorv32a.\is_lb_lh_lw_lbu_lhu' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3601' with positive edge clock.
Creating register for signal `\picorv32a.\is_slli_srli_srai' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3602' with positive edge clock.
Creating register for signal `\picorv32a.\is_jalr_addi_slti_sltiu_xori_ori_andi' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3603' with positive edge clock.
Creating register for signal `\picorv32a.\is_sb_sh_sw' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3604' with positive edge clock.
Creating register for signal `\picorv32a.\is_sll_srl_sra' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3605' with positive edge clock.
Creating register for signal `\picorv32a.\is_lui_auipc_jal_jalr_addi_add_sub' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3606' with positive edge clock.
Creating register for signal `\picorv32a.\is_slti_blt_slt' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3607' with positive edge clock.
Creating register for signal `\picorv32a.\is_sltiu_bltu_sltu' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3608' with positive edge clock.
Creating register for signal `\picorv32a.\is_beq_bne_blt_bge_bltu_bgeu' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3609' with positive edge clock.
Creating register for signal `\picorv32a.\is_lbu_lhu_lw' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3610' with positive edge clock.
Creating register for signal `\picorv32a.\is_alu_reg_imm' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3611' with positive edge clock.
Creating register for signal `\picorv32a.\is_alu_reg_reg' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3612' with positive edge clock.
Creating register for signal `\picorv32a.\is_compare' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
  created $dff cell `$procdff$3613' with positive edge clock.
Creating register for signal `\picorv32a.\dbg_insn_addr' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:740$163'.
  created $dff cell `$procdff$3614' with positive edge clock.
Creating register for signal `\picorv32a.\q_ascii_instr' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:740$163'.
  created $dff cell `$procdff$3615' with positive edge clock.
Creating register for signal `\picorv32a.\q_insn_imm' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:740$163'.
  created $dff cell `$procdff$3616' with positive edge clock.
Creating register for signal `\picorv32a.\q_insn_opcode' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:740$163'.
  created $dff cell `$procdff$3617' with positive edge clock.
Creating register for signal `\picorv32a.\q_insn_rs1' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:740$163'.
  created $dff cell `$procdff$3618' with positive edge clock.
Creating register for signal `\picorv32a.\q_insn_rs2' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:740$163'.
  created $dff cell `$procdff$3619' with positive edge clock.
Creating register for signal `\picorv32a.\q_insn_rd' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:740$163'.
  created $dff cell `$procdff$3620' with positive edge clock.
Creating register for signal `\picorv32a.\dbg_next' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:740$163'.
  created $dff cell `$procdff$3621' with positive edge clock.
Creating register for signal `\picorv32a.\dbg_valid_insn' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:740$163'.
  created $dff cell `$procdff$3622' with positive edge clock.
Creating register for signal `\picorv32a.\cached_ascii_instr' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:740$163'.
  created $dff cell `$procdff$3623' with positive edge clock.
Creating register for signal `\picorv32a.\cached_insn_imm' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:740$163'.
  created $dff cell `$procdff$3624' with positive edge clock.
Creating register for signal `\picorv32a.\cached_insn_opcode' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:740$163'.
  created $dff cell `$procdff$3625' with positive edge clock.
Creating register for signal `\picorv32a.\cached_insn_rs1' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:740$163'.
  created $dff cell `$procdff$3626' with positive edge clock.
Creating register for signal `\picorv32a.\cached_insn_rs2' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:740$163'.
  created $dff cell `$procdff$3627' with positive edge clock.
Creating register for signal `\picorv32a.\cached_insn_rd' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:740$163'.
  created $dff cell `$procdff$3628' with positive edge clock.
Creating register for signal `\picorv32a.\mem_valid' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:529$138'.
  created $dff cell `$procdff$3629' with positive edge clock.
Creating register for signal `\picorv32a.\mem_instr' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:529$138'.
  created $dff cell `$procdff$3630' with positive edge clock.
Creating register for signal `\picorv32a.\mem_addr' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:529$138'.
  created $dff cell `$procdff$3631' with positive edge clock.
Creating register for signal `\picorv32a.\mem_wdata' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:529$138'.
  created $dff cell `$procdff$3632' with positive edge clock.
Creating register for signal `\picorv32a.\mem_wstrb' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:529$138'.
  created $dff cell `$procdff$3633' with positive edge clock.
Creating register for signal `\picorv32a.\mem_state' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:529$138'.
  created $dff cell `$procdff$3634' with positive edge clock.
Creating register for signal `\picorv32a.\mem_la_secondword' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:529$138'.
  created $dff cell `$procdff$3635' with positive edge clock.
Creating register for signal `\picorv32a.\prefetched_high_word' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:529$138'.
  created $dff cell `$procdff$3636' with positive edge clock.
Creating register for signal `\picorv32a.\mem_16bit_buffer' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:529$138'.
  created $dff cell `$procdff$3637' with positive edge clock.
Creating register for signal `\picorv32a.\alu_add_sub' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1189$674'.
  created $dff cell `$procdff$3638' with positive edge clock.
Creating register for signal `\picorv32a.\alu_shl' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1189$674'.
  created $dff cell `$procdff$3639' with positive edge clock.
Creating register for signal `\picorv32a.\alu_shr' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1189$674'.
  created $dff cell `$procdff$3640' with positive edge clock.
Creating register for signal `\picorv32a.\alu_eq' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1189$674'.
  created $dff cell `$procdff$3641' with positive edge clock.
Creating register for signal `\picorv32a.\alu_ltu' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1189$674'.
  created $dff cell `$procdff$3642' with positive edge clock.
Creating register for signal `\picorv32a.\alu_lts' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1189$674'.
  created $dff cell `$procdff$3643' with positive edge clock.
Creating register for signal `\picorv32a.\next_insn_opcode' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:394$100'.
  created $dff cell `$procdff$3644' with positive edge clock.
Creating register for signal `\picorv32a.\mem_rdata_q' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:394$100'.
  created $dff cell `$procdff$3645' with positive edge clock.
Creating register for signal `\picorv32a.\mem_la_firstword_reg' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:354$92'.
  created $dff cell `$procdff$3646' with positive edge clock.
Creating register for signal `\picorv32a.\last_mem_valid' using process `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:354$92'.
  created $dff cell `$procdff$3647' with positive edge clock.

5.2.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

5.2.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 4 empty switches in `\picorv32_pcpi_fast_mul.$proc$/openlane/designs/current/src/picorv32a.v:2287$773'.
Removing empty process `picorv32_pcpi_fast_mul.$proc$/openlane/designs/current/src/picorv32a.v:2287$773'.
Found and cleaned up 3 empty switches in `\picorv32_pcpi_fast_mul.$proc$/openlane/designs/current/src/picorv32a.v:2273$768'.
Removing empty process `picorv32_pcpi_fast_mul.$proc$/openlane/designs/current/src/picorv32a.v:2273$768'.
Found and cleaned up 2 empty switches in `\picorv32_pcpi_fast_mul.$proc$/openlane/designs/current/src/picorv32a.v:2257$766'.
Removing empty process `picorv32_pcpi_fast_mul.$proc$/openlane/designs/current/src/picorv32a.v:2257$766'.
Found and cleaned up 55 empty switches in `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
Removing empty process `picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1355$505'.
Removing empty process `picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1301$490'.
Found and cleaned up 1 empty switch in `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1296$481'.
Removing empty process `picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1296$481'.
Found and cleaned up 2 empty switches in `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1268$469'.
Removing empty process `picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1268$469'.
Found and cleaned up 2 empty switches in `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1254$464'.
Removing empty process `picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1254$464'.
Removing empty process `picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1252$463'.
Found and cleaned up 2 empty switches in `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1208$441'.
Removing empty process `picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1208$441'.
Found and cleaned up 8 empty switches in `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1145$429'.
Removing empty process `picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1145$429'.
Found and cleaned up 22 empty switches in `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
Removing empty process `picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:820$169'.
Found and cleaned up 3 empty switches in `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:771$167'.
Removing empty process `picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:771$167'.
Found and cleaned up 5 empty switches in `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:740$163'.
Removing empty process `picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:740$163'.
Found and cleaned up 47 empty switches in `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:664$162'.
Removing empty process `picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:664$162'.
Found and cleaned up 16 empty switches in `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:529$138'.
Removing empty process `picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:529$138'.
Removing empty process `picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:1189$674'.
Found and cleaned up 19 empty switches in `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:394$100'.
Removing empty process `picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:394$100'.
Found and cleaned up 3 empty switches in `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:365$97'.
Removing empty process `picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:365$97'.
Found and cleaned up 2 empty switches in `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:354$92'.
Removing empty process `picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:354$92'.
Found and cleaned up 1 empty switch in `\picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:289$18'.
Removing empty process `picorv32a.$proc$/openlane/designs/current/src/picorv32a.v:289$18'.
Cleaned up 197 empty switches.

5.2.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32_pcpi_fast_mul.
<suppressed ~12 debug messages>
Optimizing module picorv32a.
<suppressed ~511 debug messages>

5.3. Executing FLATTEN pass (flatten design).
Deleting now unused module picorv32_pcpi_fast_mul.
<suppressed ~1 debug messages>

5.4. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.
<suppressed ~4 debug messages>

5.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 626 unused cells and 1936 unused wires.
<suppressed ~682 debug messages>

5.6. Executing CHECK pass (checking for obvious problems).
Checking module picorv32a...
Found and reported 0 problems.

5.7. Executing OPT pass (performing simple optimizations).

5.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.

5.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
<suppressed ~744 debug messages>
Removed a total of 248 cells.

5.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32a..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $procmux$3476: \genblk1.pcpi_mul.active [1] -> 1'1
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$1005.
    dead port 2/2 on $mux $procmux$1008.
    dead port 2/2 on $mux $procmux$1021.
    dead port 1/2 on $mux $procmux$1031.
    dead port 2/2 on $mux $procmux$1033.
    dead port 2/2 on $mux $procmux$1036.
    dead port 2/2 on $mux $procmux$1045.
    dead port 2/2 on $mux $procmux$1048.
    dead port 2/2 on $mux $procmux$1056.
    dead port 2/2 on $mux $procmux$1058.
    dead port 2/2 on $mux $procmux$1061.
    dead port 1/2 on $mux $procmux$1075.
    dead port 2/2 on $mux $procmux$1077.
    dead port 2/2 on $mux $procmux$1079.
    dead port 2/2 on $mux $procmux$1082.
    dead port 2/2 on $mux $procmux$1095.
    dead port 2/2 on $mux $procmux$1097.
    dead port 2/2 on $mux $procmux$1100.
    dead port 2/2 on $mux $procmux$1112.
    dead port 2/2 on $mux $procmux$1115.
    dead port 2/2 on $mux $procmux$1122.
    dead port 2/2 on $mux $procmux$1124.
    dead port 2/2 on $mux $procmux$1127.
    dead port 2/2 on $mux $procmux$1137.
    dead port 1/2 on $mux $procmux$1140.
    dead port 2/2 on $mux $procmux$1142.
    dead port 2/2 on $mux $procmux$1145.
    dead port 2/2 on $mux $procmux$1159.
    dead port 1/2 on $mux $procmux$1162.
    dead port 2/2 on $mux $procmux$1164.
    dead port 2/2 on $mux $procmux$1166.
    dead port 2/2 on $mux $procmux$1169.
    dead port 2/2 on $mux $procmux$1181.
    dead port 2/2 on $mux $procmux$1184.
    dead port 2/2 on $mux $procmux$1227.
    dead port 2/2 on $mux $procmux$1240.
    dead port 2/2 on $mux $procmux$1253.
    dead port 2/2 on $mux $procmux$1293.
    dead port 1/4 on $pmux $procmux$1391.
    dead port 1/4 on $pmux $procmux$1413.
    dead port 2/2 on $mux $flatten\genblk1.pcpi_mul.$procmux$888.
    dead port 2/2 on $mux $flatten\genblk1.pcpi_mul.$procmux$894.
    dead port 2/2 on $mux $flatten\genblk1.pcpi_mul.$procmux$901.
    dead port 2/2 on $mux $flatten\genblk1.pcpi_mul.$procmux$909.
    dead port 1/4 on $pmux $procmux$1760.
    dead port 2/11 on $pmux $procmux$1775.
    dead port 1/4 on $pmux $procmux$1923.
    dead port 2/2 on $mux $procmux$2282.
    dead port 2/2 on $mux $procmux$2291.
    dead port 2/2 on $mux $procmux$3437.
    dead port 2/2 on $mux $procmux$3444.
    dead port 2/3 on $pmux $procmux$3471.
    dead port 3/3 on $pmux $procmux$3471.
    dead port 2/2 on $mux $procmux$3476.
    dead port 2/2 on $mux $procmux$927.
    dead port 2/2 on $mux $procmux$937.
    dead port 2/2 on $mux $procmux$939.
    dead port 2/2 on $mux $procmux$945.
    dead port 2/2 on $mux $procmux$952.
    dead port 2/2 on $mux $procmux$954.
    dead port 2/2 on $mux $procmux$960.
    dead port 2/2 on $mux $procmux$976.
    dead port 2/2 on $mux $procmux$982.
    dead port 2/2 on $mux $procmux$985.
    dead port 2/2 on $mux $procmux$998.
Removed 65 multiplexer ports.
<suppressed ~168 debug messages>

5.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32a.
    New ctrl vector for $pmux cell $procmux$1011: { $eq$/openlane/designs/current/src/picorv32a.v:1272$470_Y $auto$opt_reduce.cc:134:opt_mux$3650 }
    New ctrl vector for $pmux cell $procmux$1217: { $procmux$1006_CMP $auto$opt_reduce.cc:134:opt_mux$3652 }
    New ctrl vector for $pmux cell $procmux$1230: { $auto$opt_reduce.cc:134:opt_mux$3654 $procmux$1012_CMP }
    New ctrl vector for $pmux cell $procmux$1243: { $procmux$1015_CMP $auto$opt_reduce.cc:134:opt_mux$3656 }
    New ctrl vector for $pmux cell $procmux$1391: { }
    New ctrl vector for $mux cell $procmux$1395: { }
    New ctrl vector for $mux cell $procmux$1398: { }
    New ctrl vector for $pmux cell $procmux$1413: $auto$opt_reduce.cc:134:opt_mux$3658
    New ctrl vector for $pmux cell $procmux$1419: $auto$opt_reduce.cc:134:opt_mux$3660
    New ctrl vector for $pmux cell $procmux$1457: { \is_rdcycle_rdcycleh_rdinstr_rdinstrh $auto$opt_reduce.cc:134:opt_mux$3662 \instr_retirq \instr_maskirq \instr_timer }
    New ctrl vector for $pmux cell $procmux$1493: { $eq$/openlane/designs/current/src/picorv32a.v:1312$491_Y $procmux$1014_CMP }
    New ctrl vector for $pmux cell $procmux$1673: { $eq$/openlane/designs/current/src/picorv32a.v:1272$470_Y $procmux$1017_CMP $eq$/openlane/designs/current/src/picorv32a.v:1312$491_Y $procmux$1015_CMP $auto$opt_reduce.cc:134:opt_mux$3664 }
    New ctrl vector for $pmux cell $procmux$1696: $auto$opt_reduce.cc:134:opt_mux$3666
    New ctrl vector for $pmux cell $procmux$1775: { $auto$opt_reduce.cc:134:opt_mux$3670 $logic_and$/openlane/designs/current/src/picorv32a.v:1655$588_Y $auto$opt_reduce.cc:134:opt_mux$3668 }
    New ctrl vector for $pmux cell $procmux$2152: { \is_lui_auipc_jal $auto$opt_reduce.cc:134:opt_mux$3672 }
    Consolidated identical input bits for $mux cell $procmux$2267:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\cpuregs$/openlane/designs/current/src/picorv32a.v:1298$17_EN[31:0]$484
      New ports: A=1'0, B=1'1, Y=$0$memwr$\cpuregs$/openlane/designs/current/src/picorv32a.v:1298$17_EN[31:0]$484 [0]
      New connections: $0$memwr$\cpuregs$/openlane/designs/current/src/picorv32a.v:1298$17_EN[31:0]$484 [31:1] = { $0$memwr$\cpuregs$/openlane/designs/current/src/picorv32a.v:1298$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$/openlane/designs/current/src/picorv32a.v:1298$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$/openlane/designs/current/src/picorv32a.v:1298$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$/openlane/designs/current/src/picorv32a.v:1298$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$/openlane/designs/current/src/picorv32a.v:1298$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$/openlane/designs/current/src/picorv32a.v:1298$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$/openlane/designs/current/src/picorv32a.v:1298$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$/openlane/designs/current/src/picorv32a.v:1298$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$/openlane/designs/current/src/picorv32a.v:1298$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$/openlane/designs/current/src/picorv32a.v:1298$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$/openlane/designs/current/src/picorv32a.v:1298$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$/openlane/designs/current/src/picorv32a.v:1298$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$/openlane/designs/current/src/picorv32a.v:1298$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$/openlane/designs/current/src/picorv32a.v:1298$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$/openlane/designs/current/src/picorv32a.v:1298$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$/openlane/designs/current/src/picorv32a.v:1298$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$/openlane/designs/current/src/picorv32a.v:1298$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$/openlane/designs/current/src/picorv32a.v:1298$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$/openlane/designs/current/src/picorv32a.v:1298$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$/openlane/designs/current/src/picorv32a.v:1298$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$/openlane/designs/current/src/picorv32a.v:1298$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$/openlane/designs/current/src/picorv32a.v:1298$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$/openlane/designs/current/src/picorv32a.v:1298$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$/openlane/designs/current/src/picorv32a.v:1298$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$/openlane/designs/current/src/picorv32a.v:1298$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$/openlane/designs/current/src/picorv32a.v:1298$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$/openlane/designs/current/src/picorv32a.v:1298$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$/openlane/designs/current/src/picorv32a.v:1298$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$/openlane/designs/current/src/picorv32a.v:1298$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$/openlane/designs/current/src/picorv32a.v:1298$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$/openlane/designs/current/src/picorv32a.v:1298$17_EN[31:0]$484 [0] }
    New ctrl vector for $pmux cell $procmux$2277: $auto$opt_reduce.cc:134:opt_mux$3674
    New ctrl vector for $pmux cell $procmux$966: { $eq$/openlane/designs/current/src/picorv32a.v:1272$470_Y $auto$opt_reduce.cc:134:opt_mux$3676 }
    New ctrl vector for $pmux cell $procmux$988: { $eq$/openlane/designs/current/src/picorv32a.v:1272$470_Y $eq$/openlane/designs/current/src/picorv32a.v:1312$491_Y $auto$opt_reduce.cc:134:opt_mux$3678 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$3659: { \is_jalr_addi_slti_sltiu_xori_ori_andi \is_slli_srli_srai \is_lui_auipc_jal }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$3665: { \instr_timer \instr_maskirq \instr_retirq \instr_setq \instr_getq \instr_rdinstrh \instr_rdinstr \instr_rdcycleh \instr_rdcycle }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$3667: { \is_jalr_addi_slti_sltiu_xori_ori_andi \is_slli_srli_srai \is_lui_auipc_jal }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$3669: { \instr_timer \instr_maskirq \instr_retirq \instr_setq \instr_getq \instr_rdinstrh \instr_rdinstr \instr_rdcycleh \instr_rdcycle }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$3671: { \instr_timer \instr_maskirq \instr_retirq \instr_setq \instr_getq \instr_rdinstrh \instr_rdinstr \instr_rdcycleh \instr_rdcycle }
  Optimizing cells in module \picorv32a.
Performed a total of 24 changes.

5.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
<suppressed ~48 debug messages>
Removed a total of 16 cells.

5.7.6. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 1-bit at position 0 on $procdff$3491 ($dff) from module picorv32a.
Setting constant 1-bit at position 1 on $procdff$3491 ($dff) from module picorv32a.
Setting constant 1-bit at position 2 on $procdff$3491 ($dff) from module picorv32a.
Setting constant 1-bit at position 3 on $procdff$3491 ($dff) from module picorv32a.
Setting constant 1-bit at position 4 on $procdff$3491 ($dff) from module picorv32a.
Setting constant 1-bit at position 5 on $procdff$3491 ($dff) from module picorv32a.
Setting constant 1-bit at position 6 on $procdff$3491 ($dff) from module picorv32a.
Setting constant 1-bit at position 7 on $procdff$3491 ($dff) from module picorv32a.
Setting constant 1-bit at position 8 on $procdff$3491 ($dff) from module picorv32a.
Setting constant 1-bit at position 9 on $procdff$3491 ($dff) from module picorv32a.
Setting constant 1-bit at position 10 on $procdff$3491 ($dff) from module picorv32a.
Setting constant 1-bit at position 11 on $procdff$3491 ($dff) from module picorv32a.
Setting constant 1-bit at position 12 on $procdff$3491 ($dff) from module picorv32a.
Setting constant 1-bit at position 13 on $procdff$3491 ($dff) from module picorv32a.
Setting constant 1-bit at position 14 on $procdff$3491 ($dff) from module picorv32a.
Setting constant 1-bit at position 15 on $procdff$3491 ($dff) from module picorv32a.
Setting constant 1-bit at position 16 on $procdff$3491 ($dff) from module picorv32a.
Setting constant 1-bit at position 17 on $procdff$3491 ($dff) from module picorv32a.
Setting constant 1-bit at position 18 on $procdff$3491 ($dff) from module picorv32a.
Setting constant 1-bit at position 19 on $procdff$3491 ($dff) from module picorv32a.
Setting constant 1-bit at position 20 on $procdff$3491 ($dff) from module picorv32a.
Setting constant 1-bit at position 21 on $procdff$3491 ($dff) from module picorv32a.
Setting constant 1-bit at position 22 on $procdff$3491 ($dff) from module picorv32a.
Setting constant 1-bit at position 23 on $procdff$3491 ($dff) from module picorv32a.
Setting constant 1-bit at position 24 on $procdff$3491 ($dff) from module picorv32a.
Setting constant 1-bit at position 25 on $procdff$3491 ($dff) from module picorv32a.
Setting constant 1-bit at position 26 on $procdff$3491 ($dff) from module picorv32a.
Setting constant 1-bit at position 27 on $procdff$3491 ($dff) from module picorv32a.
Setting constant 1-bit at position 28 on $procdff$3491 ($dff) from module picorv32a.
Setting constant 1-bit at position 29 on $procdff$3491 ($dff) from module picorv32a.
Setting constant 1-bit at position 30 on $procdff$3491 ($dff) from module picorv32a.
Setting constant 1-bit at position 31 on $procdff$3491 ($dff) from module picorv32a.
Setting constant 1-bit at position 32 on $procdff$3491 ($dff) from module picorv32a.
Setting constant 1-bit at position 33 on $procdff$3491 ($dff) from module picorv32a.
Setting constant 1-bit at position 34 on $procdff$3491 ($dff) from module picorv32a.
Setting constant 1-bit at position 35 on $procdff$3491 ($dff) from module picorv32a.
Setting constant 0-bit at position 0 on $procdff$3490 ($dff) from module picorv32a.

5.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 0 unused cells and 323 unused wires.
<suppressed ~1 debug messages>

5.7.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.
<suppressed ~4 debug messages>

5.7.9. Rerunning OPT passes. (Maybe there is more to do..)

5.7.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32a..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~167 debug messages>

5.7.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32a.
    New ctrl vector for $pmux cell $procmux$1344: $auto$opt_reduce.cc:134:opt_mux$3680
    New ctrl vector for $pmux cell $procmux$1361: { $procmux$1015_CMP $auto$opt_reduce.cc:134:opt_mux$3682 }
    New ctrl vector for $pmux cell $procmux$1407: { $procmux$1017_CMP $eq$/openlane/designs/current/src/picorv32a.v:1312$491_Y }
    New ctrl vector for $pmux cell $procmux$1738: { $eq$/openlane/designs/current/src/picorv32a.v:1272$470_Y $procmux$1017_CMP $eq$/openlane/designs/current/src/picorv32a.v:1312$491_Y $procmux$1015_CMP $procmux$1014_CMP $auto$opt_reduce.cc:134:opt_mux$3684 }
    New ctrl vector for $pmux cell $procmux$3196: { $logic_and$/openlane/designs/current/src/picorv32a.v:344$67_Y $auto$opt_reduce.cc:134:opt_mux$3686 }
  Optimizing cells in module \picorv32a.
Performed a total of 5 changes.

5.7.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

5.7.13. Executing OPT_DFF pass (perform DFF optimizations).

5.7.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

5.7.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.

5.7.16. Rerunning OPT passes. (Maybe there is more to do..)

5.7.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32a..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~167 debug messages>

5.7.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32a.
Performed a total of 0 changes.

5.7.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
Removed a total of 0 cells.

5.7.20. Executing OPT_DFF pass (perform DFF optimizations).

5.7.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..

5.7.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.

5.7.23. Finished OPT passes. (There is nothing left to do.)

5.8. Executing FSM pass (extract and optimize FSM).

5.8.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register picorv32a.cpu_state.
Not marking picorv32a.irq_state as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking picorv32a.mem_state as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register picorv32a.mem_wordsize.

5.8.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\cpu_state' from module `\picorv32a'.
  found $dff cell for state register: $procdff$3518
  root of input selection tree: $0\cpu_state[7:0]
  found ctrl input: $logic_and$/openlane/designs/current/src/picorv32a.v:1890$662_Y
  found ctrl input: $logic_and$/openlane/designs/current/src/picorv32a.v:1874$644_Y
  found ctrl input: \resetn
  found state code: 8'01000000
  found ctrl input: $auto$opt_reduce.cc:134:opt_mux$3680
  found ctrl input: $procmux$1014_CMP
  found ctrl input: $procmux$1015_CMP
  found ctrl input: $eq$/openlane/designs/current/src/picorv32a.v:1312$491_Y
  found ctrl input: $procmux$1017_CMP
  found ctrl input: $eq$/openlane/designs/current/src/picorv32a.v:1272$470_Y
  found ctrl input: $logic_or$/openlane/designs/current/src/picorv32a.v:1816$629_Y
  found ctrl input: $logic_and$/openlane/designs/current/src/picorv32a.v:1831$633_Y
  found ctrl input: $eq$/openlane/designs/current/src/picorv32a.v:1790$611_Y
  found ctrl input: \alu_wait
  found ctrl input: \is_beq_bne_blt_bge_bltu_bgeu
  found ctrl input: \mem_done
  found ctrl input: \is_sb_sh_sw
  found ctrl input: \instr_trap
  found state code: 8'00001000
  found state code: 8'00000010
  found ctrl input: \genblk1.pcpi_mul.active [1]
  found ctrl input: $logic_and$/openlane/designs/current/src/picorv32a.v:1736$596_Y
  found ctrl input: $logic_and$/openlane/designs/current/src/picorv32a.v:1739$600_Y
  found state code: 8'10000000
  found ctrl input: $auto$opt_reduce.cc:134:opt_mux$3660
  found ctrl input: $logic_and$/openlane/designs/current/src/picorv32a.v:1655$588_Y
  found ctrl input: $auto$opt_reduce.cc:134:opt_mux$3666
  found state code: 8'00010000
  found state code: 8'00000001
  found ctrl input: $logic_and$/openlane/designs/current/src/picorv32a.v:1497$555_Y
  found ctrl input: $logic_and$/openlane/designs/current/src/picorv32a.v:1507$563_Y
  found ctrl input: \decoder_trigger
  found ctrl input: \instr_jal
  found state code: 8'00100000
  found ctrl input: $logic_and$/openlane/designs/current/src/picorv32a.v:1882$654_Y
  found ctrl input: $logic_and$/openlane/designs/current/src/picorv32a.v:1875$647_Y
  found ctrl input: $logic_and$/openlane/designs/current/src/picorv32a.v:1877$651_Y
  found ctrl output: $eq$/openlane/designs/current/src/picorv32a.v:1272$470_Y
  found ctrl output: $eq$/openlane/designs/current/src/picorv32a.v:1312$491_Y
  found ctrl output: $procmux$1012_CMP
  found ctrl output: $procmux$1006_CMP
  found ctrl output: $procmux$1019_CMP
  found ctrl output: $procmux$1017_CMP
  found ctrl output: $procmux$1015_CMP
  found ctrl output: $procmux$1014_CMP
  ctrl inputs: { $auto$opt_reduce.cc:134:opt_mux$3666 \genblk1.pcpi_mul.active [1] $auto$opt_reduce.cc:134:opt_mux$3660 $logic_and$/openlane/designs/current/src/picorv32a.v:1890$662_Y $logic_and$/openlane/designs/current/src/picorv32a.v:1882$654_Y $logic_and$/openlane/designs/current/src/picorv32a.v:1877$651_Y $logic_and$/openlane/designs/current/src/picorv32a.v:1875$647_Y $logic_and$/openlane/designs/current/src/picorv32a.v:1874$644_Y $logic_and$/openlane/designs/current/src/picorv32a.v:1831$633_Y $logic_or$/openlane/designs/current/src/picorv32a.v:1816$629_Y $eq$/openlane/designs/current/src/picorv32a.v:1790$611_Y $auto$opt_reduce.cc:134:opt_mux$3680 $logic_and$/openlane/designs/current/src/picorv32a.v:1739$600_Y $logic_and$/openlane/designs/current/src/picorv32a.v:1736$596_Y $logic_and$/openlane/designs/current/src/picorv32a.v:1655$588_Y $logic_and$/openlane/designs/current/src/picorv32a.v:1507$563_Y $logic_and$/openlane/designs/current/src/picorv32a.v:1497$555_Y \alu_wait \is_beq_bne_blt_bge_bltu_bgeu \is_sb_sh_sw \decoder_trigger \instr_trap \instr_jal \mem_done \resetn }
  ctrl outputs: { $procmux$1015_CMP $procmux$1017_CMP $procmux$1019_CMP $procmux$1006_CMP $procmux$1014_CMP $procmux$1012_CMP $0\cpu_state[7:0] $eq$/openlane/designs/current/src/picorv32a.v:1312$491_Y $eq$/openlane/designs/current/src/picorv32a.v:1272$470_Y }
  transition: 8'10000000 25'---0---0----------------0 -> 8'01000000 16'0010000100000000
  transition: 8'10000000 25'---0---0----------------1 -> 8'10000000 16'0010001000000000
  transition: 8'10000000 25'---00-01----------------0 -> 8'01000000 16'0010000100000000
  transition: 8'10000000 25'---00-01----------------1 -> 8'10000000 16'0010001000000000
  transition: 8'10000000 25'---00011----------------- -> 8'10000000 16'0010001000000000
  transition: 8'10000000 25'---00111----------------0 -> 8'01000000 16'0010000100000000
  transition: 8'10000000 25'---00111----------------1 -> 8'10000000 16'0010001000000000
  transition: 8'10000000 25'---010-1----------------- -> 8'10000000 16'0010001000000000
  transition: 8'10000000 25'---01101----------------0 -> 8'01000000 16'0010000100000000
  transition: 8'10000000 25'---01101----------------1 -> 8'10000000 16'0010001000000000
  transition: 8'10000000 25'---01111----------------0 -> 8'01000000 16'0010000100000000
  transition: 8'10000000 25'---01111----------------1 -> 8'10000000 16'0010001000000000
  transition: 8'10000000 25'---1-0------------------- -> 8'10000000 16'0010001000000000
  transition: 8'10000000 25'---1-1-0----------------0 -> 8'01000000 16'0010000100000000
  transition: 8'10000000 25'---1-1-0----------------1 -> 8'10000000 16'0010001000000000
  transition: 8'10000000 25'---10101----------------0 -> 8'01000000 16'0010000100000000
  transition: 8'10000000 25'---10101----------------1 -> 8'10000000 16'0010001000000000
  transition: 8'10000000 25'---10111----------------0 -> 8'01000000 16'0010000100000000
  transition: 8'10000000 25'---10111----------------1 -> 8'10000000 16'0010001000000000
  transition: 8'10000000 25'---11101----------------0 -> 8'01000000 16'0010000100000000
  transition: 8'10000000 25'---11101----------------1 -> 8'10000000 16'0010001000000000
  transition: 8'10000000 25'---11111----------------0 -> 8'01000000 16'0010000100000000
  transition: 8'10000000 25'---11111----------------1 -> 8'10000000 16'0010001000000000
  transition: 8'01000000 25'---0---0----------------0 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---0---0-------00---0---1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---0---0-------00---1-0-1 -> 8'00100000 16'0000000010000001
  transition: 8'01000000 25'---0---0-------00---1-1-1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---0---0-------10-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---0---0--------1-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---00-01----------------0 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---00-01-------00---0---1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---00-01-------00---1-0-1 -> 8'00100000 16'0000000010000001
  transition: 8'01000000 25'---00-01-------00---1-1-1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---00-01-------10-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---00-01--------1-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---00011----------------- -> 8'10000000 16'0000001000000001
  transition: 8'01000000 25'---00111----------------0 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---00111-------00---0---1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---00111-------00---1-0-1 -> 8'00100000 16'0000000010000001
  transition: 8'01000000 25'---00111-------00---1-1-1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---00111-------10-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---00111--------1-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---010-1----------------- -> 8'10000000 16'0000001000000001
  transition: 8'01000000 25'---01101----------------0 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---01101-------00---0---1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---01101-------00---1-0-1 -> 8'00100000 16'0000000010000001
  transition: 8'01000000 25'---01101-------00---1-1-1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---01101-------10-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---01101--------1-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---01111----------------0 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---01111-------00---0---1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---01111-------00---1-0-1 -> 8'00100000 16'0000000010000001
  transition: 8'01000000 25'---01111-------00---1-1-1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---01111-------10-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---01111--------1-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---1-0------------------- -> 8'10000000 16'0000001000000001
  transition: 8'01000000 25'---1-1-0----------------0 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---1-1-0-------00---0---1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---1-1-0-------00---1-0-1 -> 8'00100000 16'0000000010000001
  transition: 8'01000000 25'---1-1-0-------00---1-1-1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---1-1-0-------10-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---1-1-0--------1-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---10101----------------0 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---10101-------00---0---1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---10101-------00---1-0-1 -> 8'00100000 16'0000000010000001
  transition: 8'01000000 25'---10101-------00---1-1-1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---10101-------10-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---10101--------1-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---10111----------------0 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---10111-------00---0---1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---10111-------00---1-0-1 -> 8'00100000 16'0000000010000001
  transition: 8'01000000 25'---10111-------00---1-1-1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---10111-------10-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---10111--------1-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---11101----------------0 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---11101-------00---0---1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---11101-------00---1-0-1 -> 8'00100000 16'0000000010000001
  transition: 8'01000000 25'---11101-------00---1-1-1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---11101-------10-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---11101--------1-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---11111----------------0 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---11111-------00---0---1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---11111-------00---1-0-1 -> 8'00100000 16'0000000010000001
  transition: 8'01000000 25'---11111-------00---1-1-1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---11111-------10-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---11111--------1-------1 -> 8'01000000 16'0000000100000001
  transition: 8'00100000 25'---0---0----------------0 -> 8'01000000 16'0100000100000000
  transition: 8'00100000 25'0-00---0------0---------1 -> 8'00010000 16'0100000001000000
  transition: 8'00100000 25'1--0---0----------------1 -> 8'01000000 16'0100000100000000
  transition: 8'00100000 25'---0---0------1---------1 -> 8'00000001 16'0100000000000100
  transition: 8'00100000 25'--10---0----------------1 -> 8'00001000 16'0100000000100000
  transition: 8'00100000 25'---00-01----------------0 -> 8'01000000 16'0100000100000000
  transition: 8'00100000 25'0-000-01------0---------1 -> 8'00010000 16'0100000001000000
  transition: 8'00100000 25'1--00-01----------------1 -> 8'01000000 16'0100000100000000
  transition: 8'00100000 25'---00-01------1---------1 -> 8'00000001 16'0100000000000100
  transition: 8'00100000 25'--100-01----------------1 -> 8'00001000 16'0100000000100000
  transition: 8'00100000 25'---00011----------------- -> 8'10000000 16'0100001000000000
  transition: 8'00100000 25'---00111----------------0 -> 8'01000000 16'0100000100000000
  transition: 8'00100000 25'0-000111------0---------1 -> 8'00010000 16'0100000001000000
  transition: 8'00100000 25'1--00111----------------1 -> 8'01000000 16'0100000100000000
  transition: 8'00100000 25'---00111------1---------1 -> 8'00000001 16'0100000000000100
  transition: 8'00100000 25'--100111----------------1 -> 8'00001000 16'0100000000100000
  transition: 8'00100000 25'---010-1----------------- -> 8'10000000 16'0100001000000000
  transition: 8'00100000 25'---01101----------------0 -> 8'01000000 16'0100000100000000
  transition: 8'00100000 25'0-001101------0---------1 -> 8'00010000 16'0100000001000000
  transition: 8'00100000 25'1--01101----------------1 -> 8'01000000 16'0100000100000000
  transition: 8'00100000 25'---01101------1---------1 -> 8'00000001 16'0100000000000100
  transition: 8'00100000 25'--101101----------------1 -> 8'00001000 16'0100000000100000
  transition: 8'00100000 25'---01111----------------0 -> 8'01000000 16'0100000100000000
  transition: 8'00100000 25'0-001111------0---------1 -> 8'00010000 16'0100000001000000
  transition: 8'00100000 25'1--01111----------------1 -> 8'01000000 16'0100000100000000
  transition: 8'00100000 25'---01111------1---------1 -> 8'00000001 16'0100000000000100
  transition: 8'00100000 25'--101111----------------1 -> 8'00001000 16'0100000000100000
  transition: 8'00100000 25'---1-0------------------- -> 8'10000000 16'0100001000000000
  transition: 8'00100000 25'---1-1-0----------------0 -> 8'01000000 16'0100000100000000
  transition: 8'00100000 25'0-01-1-0------0---------1 -> 8'00010000 16'0100000001000000
  transition: 8'00100000 25'1--1-1-0----------------1 -> 8'01000000 16'0100000100000000
  transition: 8'00100000 25'---1-1-0------1---------1 -> 8'00000001 16'0100000000000100
  transition: 8'00100000 25'--11-1-0----------------1 -> 8'00001000 16'0100000000100000
  transition: 8'00100000 25'---10101----------------0 -> 8'01000000 16'0100000100000000
  transition: 8'00100000 25'0-010101------0---------1 -> 8'00010000 16'0100000001000000
  transition: 8'00100000 25'1--10101----------------1 -> 8'01000000 16'0100000100000000
  transition: 8'00100000 25'---10101------1---------1 -> 8'00000001 16'0100000000000100
  transition: 8'00100000 25'--110101----------------1 -> 8'00001000 16'0100000000100000
  transition: 8'00100000 25'---10111----------------0 -> 8'01000000 16'0100000100000000
  transition: 8'00100000 25'0-010111------0---------1 -> 8'00010000 16'0100000001000000
  transition: 8'00100000 25'1--10111----------------1 -> 8'01000000 16'0100000100000000
  transition: 8'00100000 25'---10111------1---------1 -> 8'00000001 16'0100000000000100
  transition: 8'00100000 25'--110111----------------1 -> 8'00001000 16'0100000000100000
  transition: 8'00100000 25'---11101----------------0 -> 8'01000000 16'0100000100000000
  transition: 8'00100000 25'0-011101------0---------1 -> 8'00010000 16'0100000001000000
  transition: 8'00100000 25'1--11101----------------1 -> 8'01000000 16'0100000100000000
  transition: 8'00100000 25'---11101------1---------1 -> 8'00000001 16'0100000000000100
  transition: 8'00100000 25'--111101----------------1 -> 8'00001000 16'0100000000100000
  transition: 8'00100000 25'---11111----------------0 -> 8'01000000 16'0100000100000000
  transition: 8'00100000 25'0-011111------0---------1 -> 8'00010000 16'0100000001000000
  transition: 8'00100000 25'1--11111----------------1 -> 8'01000000 16'0100000100000000
  transition: 8'00100000 25'---11111------1---------1 -> 8'00000001 16'0100000000000100
  transition: 8'00100000 25'--111111----------------1 -> 8'00001000 16'0100000000100000
  transition: 8'00010000 25'---0---0----------------0 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---0---0-----------0-0--1 -> 8'00001000 16'0000000000100010
  transition: 8'00010000 25'-0-0---0-----0-------1--1 -> 8'00010000 16'0000000001000010
  transition: 8'00010000 25'-0-0---0----01-------1--1 -> 8'10000000 16'0000001000000010
  transition: 8'00010000 25'-0-0---0----11-------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'-1-0---0-------------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---0---0-----------1----1 -> 8'00000010 16'0000000000001010
  transition: 8'00010000 25'---00-01----------------0 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---00-01-----------0-0--1 -> 8'00001000 16'0000000000100010
  transition: 8'00010000 25'-0-00-01-----0-------1--1 -> 8'00010000 16'0000000001000010
  transition: 8'00010000 25'-0-00-01----01-------1--1 -> 8'10000000 16'0000001000000010
  transition: 8'00010000 25'-0-00-01----11-------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'-1-00-01-------------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---00-01-----------1----1 -> 8'00000010 16'0000000000001010
  transition: 8'00010000 25'---00011----------------- -> 8'10000000 16'0000001000000010
  transition: 8'00010000 25'---00111----------------0 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---00111-----------0-0--1 -> 8'00001000 16'0000000000100010
  transition: 8'00010000 25'-0-00111-----0-------1--1 -> 8'00010000 16'0000000001000010
  transition: 8'00010000 25'-0-00111----01-------1--1 -> 8'10000000 16'0000001000000010
  transition: 8'00010000 25'-0-00111----11-------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'-1-00111-------------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---00111-----------1----1 -> 8'00000010 16'0000000000001010
  transition: 8'00010000 25'---010-1----------------- -> 8'10000000 16'0000001000000010
  transition: 8'00010000 25'---01101----------------0 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---01101-----------0-0--1 -> 8'00001000 16'0000000000100010
  transition: 8'00010000 25'-0-01101-----0-------1--1 -> 8'00010000 16'0000000001000010
  transition: 8'00010000 25'-0-01101----01-------1--1 -> 8'10000000 16'0000001000000010
  transition: 8'00010000 25'-0-01101----11-------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'-1-01101-------------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---01101-----------1----1 -> 8'00000010 16'0000000000001010
  transition: 8'00010000 25'---01111----------------0 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---01111-----------0-0--1 -> 8'00001000 16'0000000000100010
  transition: 8'00010000 25'-0-01111-----0-------1--1 -> 8'00010000 16'0000000001000010
  transition: 8'00010000 25'-0-01111----01-------1--1 -> 8'10000000 16'0000001000000010
  transition: 8'00010000 25'-0-01111----11-------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'-1-01111-------------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---01111-----------1----1 -> 8'00000010 16'0000000000001010
  transition: 8'00010000 25'---1-0------------------- -> 8'10000000 16'0000001000000010
  transition: 8'00010000 25'---1-1-0----------------0 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---1-1-0-----------0-0--1 -> 8'00001000 16'0000000000100010
  transition: 8'00010000 25'-0-1-1-0-----0-------1--1 -> 8'00010000 16'0000000001000010
  transition: 8'00010000 25'-0-1-1-0----01-------1--1 -> 8'10000000 16'0000001000000010
  transition: 8'00010000 25'-0-1-1-0----11-------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'-1-1-1-0-------------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---1-1-0-----------1----1 -> 8'00000010 16'0000000000001010
  transition: 8'00010000 25'---10101----------------0 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---10101-----------0-0--1 -> 8'00001000 16'0000000000100010
  transition: 8'00010000 25'-0-10101-----0-------1--1 -> 8'00010000 16'0000000001000010
  transition: 8'00010000 25'-0-10101----01-------1--1 -> 8'10000000 16'0000001000000010
  transition: 8'00010000 25'-0-10101----11-------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'-1-10101-------------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---10101-----------1----1 -> 8'00000010 16'0000000000001010
  transition: 8'00010000 25'---10111----------------0 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---10111-----------0-0--1 -> 8'00001000 16'0000000000100010
  transition: 8'00010000 25'-0-10111-----0-------1--1 -> 8'00010000 16'0000000001000010
  transition: 8'00010000 25'-0-10111----01-------1--1 -> 8'10000000 16'0000001000000010
  transition: 8'00010000 25'-0-10111----11-------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'-1-10111-------------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---10111-----------1----1 -> 8'00000010 16'0000000000001010
  transition: 8'00010000 25'---11101----------------0 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---11101-----------0-0--1 -> 8'00001000 16'0000000000100010
  transition: 8'00010000 25'-0-11101-----0-------1--1 -> 8'00010000 16'0000000001000010
  transition: 8'00010000 25'-0-11101----01-------1--1 -> 8'10000000 16'0000001000000010
  transition: 8'00010000 25'-0-11101----11-------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'-1-11101-------------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---11101-----------1----1 -> 8'00000010 16'0000000000001010
  transition: 8'00010000 25'---11111----------------0 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---11111-----------0-0--1 -> 8'00001000 16'0000000000100010
  transition: 8'00010000 25'-0-11111-----0-------1--1 -> 8'00010000 16'0000000001000010
  transition: 8'00010000 25'-0-11111----01-------1--1 -> 8'10000000 16'0000001000000010
  transition: 8'00010000 25'-0-11111----11-------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'-1-11111-------------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---11111-----------1----1 -> 8'00000010 16'0000000000001010
  transition: 8'00001000 25'---0---0----------------0 -> 8'01000000 16'1000000100000000
  transition: 8'00001000 25'---0---0---------00-----1 -> 8'01000000 16'1000000100000000
  transition: 8'00001000 25'---0---0---------01----01 -> 8'00001000 16'1000000000100000
  transition: 8'00001000 25'---0---0---------01----11 -> 8'01000000 16'1000000100000000
  transition: 8'00001000 25'---0---0---------1------1 -> 8'00001000 16'1000000000100000
  transition: 8'00001000 25'---00-01----------------0 -> 8'01000000 16'1000000100000000
  transition: 8'00001000 25'---00-01---------00-----1 -> 8'01000000 16'1000000100000000
  transition: 8'00001000 25'---00-01---------01----01 -> 8'00001000 16'1000000000100000
  transition: 8'00001000 25'---00-01---------01----11 -> 8'01000000 16'1000000100000000
  transition: 8'00001000 25'---00-01---------1------1 -> 8'00001000 16'1000000000100000
  transition: 8'00001000 25'---00011----------------- -> 8'10000000 16'1000001000000000
  transition: 8'00001000 25'---00111----------------0 -> 8'01000000 16'1000000100000000
  transition: 8'00001000 25'---00111---------00-----1 -> 8'01000000 16'1000000100000000
  transition: 8'00001000 25'---00111---------01----01 -> 8'00001000 16'1000000000100000
  transition: 8'00001000 25'---00111---------01----11 -> 8'01000000 16'1000000100000000
  transition: 8'00001000 25'---00111---------1------1 -> 8'00001000 16'1000000000100000
  transition: 8'00001000 25'---010-1----------------- -> 8'10000000 16'1000001000000000
  transition: 8'00001000 25'---01101----------------0 -> 8'01000000 16'1000000100000000
  transition: 8'00001000 25'---01101---------00-----1 -> 8'01000000 16'1000000100000000
  transition: 8'00001000 25'---01101---------01----01 -> 8'00001000 16'1000000000100000
  transition: 8'00001000 25'---01101---------01----11 -> 8'01000000 16'1000000100000000
  transition: 8'00001000 25'---01101---------1------1 -> 8'00001000 16'1000000000100000
  transition: 8'00001000 25'---01111----------------0 -> 8'01000000 16'1000000100000000
  transition: 8'00001000 25'---01111---------00-----1 -> 8'01000000 16'1000000100000000
  transition: 8'00001000 25'---01111---------01----01 -> 8'00001000 16'1000000000100000
  transition: 8'00001000 25'---01111---------01----11 -> 8'01000000 16'1000000100000000
  transition: 8'00001000 25'---01111---------1------1 -> 8'00001000 16'1000000000100000
  transition: 8'00001000 25'---1-0------------------- -> 8'10000000 16'1000001000000000
  transition: 8'00001000 25'---1-1-0----------------0 -> 8'01000000 16'1000000100000000
  transition: 8'00001000 25'---1-1-0---------00-----1 -> 8'01000000 16'1000000100000000
  transition: 8'00001000 25'---1-1-0---------01----01 -> 8'00001000 16'1000000000100000
  transition: 8'00001000 25'---1-1-0---------01----11 -> 8'01000000 16'1000000100000000
  transition: 8'00001000 25'---1-1-0---------1------1 -> 8'00001000 16'1000000000100000
  transition: 8'00001000 25'---10101----------------0 -> 8'01000000 16'1000000100000000
  transition: 8'00001000 25'---10101---------00-----1 -> 8'01000000 16'1000000100000000
  transition: 8'00001000 25'---10101---------01----01 -> 8'00001000 16'1000000000100000
  transition: 8'00001000 25'---10101---------01----11 -> 8'01000000 16'1000000100000000
  transition: 8'00001000 25'---10101---------1------1 -> 8'00001000 16'1000000000100000
  transition: 8'00001000 25'---10111----------------0 -> 8'01000000 16'1000000100000000
  transition: 8'00001000 25'---10111---------00-----1 -> 8'01000000 16'1000000100000000
  transition: 8'00001000 25'---10111---------01----01 -> 8'00001000 16'1000000000100000
  transition: 8'00001000 25'---10111---------01----11 -> 8'01000000 16'1000000100000000
  transition: 8'00001000 25'---10111---------1------1 -> 8'00001000 16'1000000000100000
  transition: 8'00001000 25'---11101----------------0 -> 8'01000000 16'1000000100000000
  transition: 8'00001000 25'---11101---------00-----1 -> 8'01000000 16'1000000100000000
  transition: 8'00001000 25'---11101---------01----01 -> 8'00001000 16'1000000000100000
  transition: 8'00001000 25'---11101---------01----11 -> 8'01000000 16'1000000100000000
  transition: 8'00001000 25'---11101---------1------1 -> 8'00001000 16'1000000000100000
  transition: 8'00001000 25'---11111----------------0 -> 8'01000000 16'1000000100000000
  transition: 8'00001000 25'---11111---------00-----1 -> 8'01000000 16'1000000100000000
  transition: 8'00001000 25'---11111---------01----01 -> 8'00001000 16'1000000000100000
  transition: 8'00001000 25'---11111---------01----11 -> 8'01000000 16'1000000100000000
  transition: 8'00001000 25'---11111---------1------1 -> 8'00001000 16'1000000000100000
  transition: 8'00000010 25'---0---0----------------0 -> 8'01000000 16'0001000100000000
  transition: 8'00000010 25'---0---0-0--------------1 -> 8'00000010 16'0001000000001000
  transition: 8'00000010 25'---0---001--------------1 -> 8'00000010 16'0001000000001000
  transition: 8'00000010 25'---0---011--------------1 -> 8'01000000 16'0001000100000000
  transition: 8'00000010 25'---00-01----------------0 -> 8'01000000 16'0001000100000000
  transition: 8'00000010 25'---00-01-0--------------1 -> 8'00000010 16'0001000000001000
  transition: 8'00000010 25'---00-0101--------------1 -> 8'00000010 16'0001000000001000
  transition: 8'00000010 25'---00-0111--------------1 -> 8'01000000 16'0001000100000000
  transition: 8'00000010 25'---00011----------------- -> 8'10000000 16'0001001000000000
  transition: 8'00000010 25'---00111----------------0 -> 8'01000000 16'0001000100000000
  transition: 8'00000010 25'---00111-0--------------1 -> 8'00000010 16'0001000000001000
  transition: 8'00000010 25'---0011101--------------1 -> 8'00000010 16'0001000000001000
  transition: 8'00000010 25'---0011111--------------1 -> 8'01000000 16'0001000100000000
  transition: 8'00000010 25'---010-1----------------- -> 8'10000000 16'0001001000000000
  transition: 8'00000010 25'---01101----------------0 -> 8'01000000 16'0001000100000000
  transition: 8'00000010 25'---01101-0--------------1 -> 8'00000010 16'0001000000001000
  transition: 8'00000010 25'---0110101--------------1 -> 8'00000010 16'0001000000001000
  transition: 8'00000010 25'---0110111--------------1 -> 8'01000000 16'0001000100000000
  transition: 8'00000010 25'---01111----------------0 -> 8'01000000 16'0001000100000000
  transition: 8'00000010 25'---01111-0--------------1 -> 8'00000010 16'0001000000001000
  transition: 8'00000010 25'---0111101--------------1 -> 8'00000010 16'0001000000001000
  transition: 8'00000010 25'---0111111--------------1 -> 8'01000000 16'0001000100000000
  transition: 8'00000010 25'---1-0------------------- -> 8'10000000 16'0001001000000000
  transition: 8'00000010 25'---1-1-0----------------0 -> 8'01000000 16'0001000100000000
  transition: 8'00000010 25'---1-1-0-0--------------1 -> 8'00000010 16'0001000000001000
  transition: 8'00000010 25'---1-1-001--------------1 -> 8'00000010 16'0001000000001000
  transition: 8'00000010 25'---1-1-011--------------1 -> 8'01000000 16'0001000100000000
  transition: 8'00000010 25'---10101----------------0 -> 8'01000000 16'0001000100000000
  transition: 8'00000010 25'---10101-0--------------1 -> 8'00000010 16'0001000000001000
  transition: 8'00000010 25'---1010101--------------1 -> 8'00000010 16'0001000000001000
  transition: 8'00000010 25'---1010111--------------1 -> 8'01000000 16'0001000100000000
  transition: 8'00000010 25'---10111----------------0 -> 8'01000000 16'0001000100000000
  transition: 8'00000010 25'---10111-0--------------1 -> 8'00000010 16'0001000000001000
  transition: 8'00000010 25'---1011101--------------1 -> 8'00000010 16'0001000000001000
  transition: 8'00000010 25'---1011111--------------1 -> 8'01000000 16'0001000100000000
  transition: 8'00000010 25'---11101----------------0 -> 8'01000000 16'0001000100000000
  transition: 8'00000010 25'---11101-0--------------1 -> 8'00000010 16'0001000000001000
  transition: 8'00000010 25'---1110101--------------1 -> 8'00000010 16'0001000000001000
  transition: 8'00000010 25'---1110111--------------1 -> 8'01000000 16'0001000100000000
  transition: 8'00000010 25'---11111----------------0 -> 8'01000000 16'0001000100000000
  transition: 8'00000010 25'---11111-0--------------1 -> 8'00000010 16'0001000000001000
  transition: 8'00000010 25'---1111101--------------1 -> 8'00000010 16'0001000000001000
  transition: 8'00000010 25'---1111111--------------1 -> 8'01000000 16'0001000100000000
  transition: 8'00000001 25'---0---0----------------0 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---0---0-0--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---0---001--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---0---011--------------1 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---00-01----------------0 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---00-01-0--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---00-0101--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---00-0111--------------1 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---00011----------------- -> 8'10000000 16'0000011000000000
  transition: 8'00000001 25'---00111----------------0 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---00111-0--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---0011101--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---0011111--------------1 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---010-1----------------- -> 8'10000000 16'0000011000000000
  transition: 8'00000001 25'---01101----------------0 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---01101-0--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---0110101--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---0110111--------------1 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---01111----------------0 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---01111-0--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---0111101--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---0111111--------------1 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---1-0------------------- -> 8'10000000 16'0000011000000000
  transition: 8'00000001 25'---1-1-0----------------0 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---1-1-0-0--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---1-1-001--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---1-1-011--------------1 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---10101----------------0 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---10101-0--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---1010101--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---1010111--------------1 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---10111----------------0 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---10111-0--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---1011101--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---1011111--------------1 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---11101----------------0 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---11101-0--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---1110101--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---1110111--------------1 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---11111----------------0 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---11111-0--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---1111101--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---1111111--------------1 -> 8'01000000 16'0000010100000000
Extracting FSM `\mem_wordsize' from module `\picorv32a'.
  found $dff cell for state register: $procdff$3505
  root of input selection tree: $0\mem_wordsize[1:0]
  found ctrl input: \resetn
  found ctrl input: $procmux$1012_CMP
  found ctrl input: $procmux$1006_CMP
  found ctrl input: $eq$/openlane/designs/current/src/picorv32a.v:1272$470_Y
  found ctrl input: $logic_or$/openlane/designs/current/src/picorv32a.v:1816$629_Y
  found ctrl input: \mem_do_rdata
  found ctrl input: \instr_lw
  found ctrl input: $logic_or$/openlane/designs/current/src/picorv32a.v:1846$638_Y
  found ctrl input: $logic_or$/openlane/designs/current/src/picorv32a.v:1845$637_Y
  found state code: 2'00
  found state code: 2'01
  found state code: 2'10
  found ctrl input: \mem_do_wdata
  found ctrl input: \instr_sw
  found ctrl input: \instr_sh
  found ctrl input: \instr_sb
  found ctrl output: $eq$/openlane/designs/current/src/picorv32a.v:1875$645_Y
  found ctrl output: $eq$/openlane/designs/current/src/picorv32a.v:1882$652_Y
  found ctrl output: $procmux$3438_CMP
  ctrl inputs: { $procmux$1006_CMP $procmux$1012_CMP $logic_or$/openlane/designs/current/src/picorv32a.v:1846$638_Y $logic_or$/openlane/designs/current/src/picorv32a.v:1845$637_Y $logic_or$/openlane/designs/current/src/picorv32a.v:1816$629_Y $eq$/openlane/designs/current/src/picorv32a.v:1272$470_Y \instr_sw \instr_sh \instr_sb \instr_lw \mem_do_wdata \mem_do_rdata \resetn }
  ctrl outputs: { $procmux$3438_CMP $eq$/openlane/designs/current/src/picorv32a.v:1882$652_Y $eq$/openlane/designs/current/src/picorv32a.v:1875$645_Y $0\mem_wordsize[1:0] }
  transition:       2'00 13'------------0 ->       2'00 5'00100
  transition:       2'00 13'00---0------1 ->       2'00 5'00100
  transition:       2'00 13'-----1------1 ->       2'00 5'00100
  transition:       2'00 13'1---0-------1 ->       2'00 5'00100
  transition:       2'00 13'1---1-000-0-1 ->       2'00 5'00100
  transition:       2'00 13'1---1---1-0-1 ->       2'10 5'00110
  transition:       2'00 13'1---1--1--0-1 ->       2'01 5'00101
  transition:       2'00 13'1---1-1---0-1 ->       2'00 5'00100
  transition:       2'00 13'1---1-----1-1 ->       2'00 5'00100
  transition:       2'00 13'-1--0-------1 ->       2'00 5'00100
  transition:       2'00 13'-1001----0-01 ->       2'00 5'00100
  transition:       2'00 13'-1-11------01 ->       2'10 5'00110
  transition:       2'00 13'-11-1------01 ->       2'01 5'00101
  transition:       2'00 13'-1--1----1-01 ->       2'00 5'00100
  transition:       2'00 13'-1--1------11 ->       2'00 5'00100
  transition:       2'10 13'------------0 ->       2'10 5'10010
  transition:       2'10 13'00---0------1 ->       2'10 5'10010
  transition:       2'10 13'-----1------1 ->       2'00 5'10000
  transition:       2'10 13'1---0-------1 ->       2'10 5'10010
  transition:       2'10 13'1---1-000-0-1 ->       2'10 5'10010
  transition:       2'10 13'1---1---1-0-1 ->       2'10 5'10010
  transition:       2'10 13'1---1--1--0-1 ->       2'01 5'10001
  transition:       2'10 13'1---1-1---0-1 ->       2'00 5'10000
  transition:       2'10 13'1---1-----1-1 ->       2'10 5'10010
  transition:       2'10 13'-1--0-------1 ->       2'10 5'10010
  transition:       2'10 13'-1001----0-01 ->       2'10 5'10010
  transition:       2'10 13'-1-11------01 ->       2'10 5'10010
  transition:       2'10 13'-11-1------01 ->       2'01 5'10001
  transition:       2'10 13'-1--1----1-01 ->       2'00 5'10000
  transition:       2'10 13'-1--1------11 ->       2'10 5'10010
  transition:       2'01 13'------------0 ->       2'01 5'01001
  transition:       2'01 13'00---0------1 ->       2'01 5'01001
  transition:       2'01 13'-----1------1 ->       2'00 5'01000
  transition:       2'01 13'1---0-------1 ->       2'01 5'01001
  transition:       2'01 13'1---1-000-0-1 ->       2'01 5'01001
  transition:       2'01 13'1---1---1-0-1 ->       2'10 5'01010
  transition:       2'01 13'1---1--1--0-1 ->       2'01 5'01001
  transition:       2'01 13'1---1-1---0-1 ->       2'00 5'01000
  transition:       2'01 13'1---1-----1-1 ->       2'01 5'01001
  transition:       2'01 13'-1--0-------1 ->       2'01 5'01001
  transition:       2'01 13'-1001----0-01 ->       2'01 5'01001
  transition:       2'01 13'-1-11------01 ->       2'10 5'01010
  transition:       2'01 13'-11-1------01 ->       2'01 5'01001
  transition:       2'01 13'-1--1----1-01 ->       2'00 5'01000
  transition:       2'01 13'-1--1------11 ->       2'01 5'01001

5.8.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\mem_wordsize$3697' from module `\picorv32a'.
Optimizing FSM `$fsm$\cpu_state$3687' from module `\picorv32a'.
  Merging pattern 25'---10101----------------1 and 25'---10111----------------1 from group (0 0 16'0010001000000000).
  Merging pattern 25'---01101----------------1 and 25'---01111----------------1 from group (0 0 16'0010001000000000).
  Merging pattern 25'---11101----------------1 and 25'---11111----------------1 from group (0 0 16'0010001000000000).
  Merging pattern 25'---10111----------------1 and 25'---10101----------------1 from group (0 0 16'0010001000000000).
  Merging pattern 25'---01111----------------1 and 25'---01101----------------1 from group (0 0 16'0010001000000000).
  Merging pattern 25'---11111----------------1 and 25'---11101----------------1 from group (0 0 16'0010001000000000).
  Merging pattern 25'---101-1----------------1 and 25'---111-1----------------1 from group (0 0 16'0010001000000000).
  Merging pattern 25'---111-1----------------1 and 25'---101-1----------------1 from group (0 0 16'0010001000000000).
  Merging pattern 25'---1-1-0----------------1 and 25'---1-1-1----------------1 from group (0 0 16'0010001000000000).
  Merging pattern 25'---1-1-1----------------1 and 25'---1-1-0----------------1 from group (0 0 16'0010001000000000).
  Merging pattern 25'---10101----------------0 and 25'---10111----------------0 from group (0 1 16'0010000100000000).
  Merging pattern 25'---01101----------------0 and 25'---01111----------------0 from group (0 1 16'0010000100000000).
  Merging pattern 25'---11101----------------0 and 25'---11111----------------0 from group (0 1 16'0010000100000000).
  Merging pattern 25'---10111----------------0 and 25'---10101----------------0 from group (0 1 16'0010000100000000).
  Merging pattern 25'---01111----------------0 and 25'---01101----------------0 from group (0 1 16'0010000100000000).
  Merging pattern 25'---11111----------------0 and 25'---11101----------------0 from group (0 1 16'0010000100000000).
  Merging pattern 25'---101-1----------------0 and 25'---111-1----------------0 from group (0 1 16'0010000100000000).
  Merging pattern 25'---111-1----------------0 and 25'---101-1----------------0 from group (0 1 16'0010000100000000).
  Merging pattern 25'---1-1-0----------------0 and 25'---1-1-1----------------0 from group (0 1 16'0010000100000000).
  Merging pattern 25'---1-1-1----------------0 and 25'---1-1-0----------------0 from group (0 1 16'0010000100000000).
  Merging pattern 25'---10101----------------0 and 25'---10111----------------0 from group (1 1 16'0000000100000001).
  Merging pattern 25'---01101----------------0 and 25'---01111----------------0 from group (1 1 16'0000000100000001).
  Merging pattern 25'---11101----------------0 and 25'---11111----------------0 from group (1 1 16'0000000100000001).
  Merging pattern 25'---10111----------------0 and 25'---10101----------------0 from group (1 1 16'0000000100000001).
  Merging pattern 25'---01111----------------0 and 25'---01101----------------0 from group (1 1 16'0000000100000001).
  Merging pattern 25'---11111----------------0 and 25'---11101----------------0 from group (1 1 16'0000000100000001).
  Merging pattern 25'---10101-------00---1-1-1 and 25'---10111-------00---1-1-1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---01101-------00---1-1-1 and 25'---01111-------00---1-1-1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---11101-------00---1-1-1 and 25'---11111-------00---1-1-1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---10111-------00---1-1-1 and 25'---10101-------00---1-1-1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---01111-------00---1-1-1 and 25'---01101-------00---1-1-1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---11111-------00---1-1-1 and 25'---11101-------00---1-1-1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---10101-------00---0---1 and 25'---10111-------00---0---1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---01101-------00---0---1 and 25'---01111-------00---0---1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---11101-------00---0---1 and 25'---11111-------00---0---1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---10111-------00---0---1 and 25'---10101-------00---0---1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---01111-------00---0---1 and 25'---01101-------00---0---1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---11111-------00---0---1 and 25'---11101-------00---0---1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---10101-------10-------1 and 25'---10111-------10-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---01101-------10-------1 and 25'---01111-------10-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---11101-------10-------1 and 25'---11111-------10-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---10111-------10-------1 and 25'---10101-------10-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---01111-------10-------1 and 25'---01101-------10-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---11111-------10-------1 and 25'---11101-------10-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---10101--------1-------1 and 25'---10111--------1-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---01101--------1-------1 and 25'---01111--------1-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---11101--------1-------1 and 25'---11111--------1-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---10111--------1-------1 and 25'---10101--------1-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---01111--------1-------1 and 25'---01101--------1-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---11111--------1-------1 and 25'---11101--------1-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---101-1----------------0 and 25'---111-1----------------0 from group (1 1 16'0000000100000001).
  Merging pattern 25'---111-1----------------0 and 25'---101-1----------------0 from group (1 1 16'0000000100000001).
  Merging pattern 25'---101-1-------00---1-1-1 and 25'---111-1-------00---1-1-1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---111-1-------00---1-1-1 and 25'---101-1-------00---1-1-1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---101-1-------00---0---1 and 25'---111-1-------00---0---1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---111-1-------00---0---1 and 25'---101-1-------00---0---1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---101-1-------10-------1 and 25'---111-1-------10-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---111-1-------10-------1 and 25'---101-1-------10-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---101-1--------1-------1 and 25'---111-1--------1-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---111-1--------1-------1 and 25'---101-1--------1-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---1-1-0----------------0 and 25'---1-1-1----------------0 from group (1 1 16'0000000100000001).
  Merging pattern 25'---1-1-1----------------0 and 25'---1-1-0----------------0 from group (1 1 16'0000000100000001).
  Merging pattern 25'---1-1-0-------00---1-1-1 and 25'---1-1-1-------00---1-1-1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---1-1-1-------00---1-1-1 and 25'---1-1-0-------00---1-1-1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---1-1-0-------00---0---1 and 25'---1-1-1-------00---0---1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---1-1-1-------00---0---1 and 25'---1-1-0-------00---0---1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---1-1-0-------10-------1 and 25'---1-1-1-------10-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---1-1-1-------10-------1 and 25'---1-1-0-------10-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---1-1-0--------1-------1 and 25'---1-1-1--------1-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---1-1-1--------1-------1 and 25'---1-1-0--------1-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---10101-------00---1-0-1 and 25'---10111-------00---1-0-1 from group (1 2 16'0000000010000001).
  Merging pattern 25'---01101-------00---1-0-1 and 25'---01111-------00---1-0-1 from group (1 2 16'0000000010000001).
  Merging pattern 25'---11101-------00---1-0-1 and 25'---11111-------00---1-0-1 from group (1 2 16'0000000010000001).
  Merging pattern 25'---10111-------00---1-0-1 and 25'---10101-------00---1-0-1 from group (1 2 16'0000000010000001).
  Merging pattern 25'---01111-------00---1-0-1 and 25'---01101-------00---1-0-1 from group (1 2 16'0000000010000001).
  Merging pattern 25'---11111-------00---1-0-1 and 25'---11101-------00---1-0-1 from group (1 2 16'0000000010000001).
  Merging pattern 25'---101-1-------00---1-0-1 and 25'---111-1-------00---1-0-1 from group (1 2 16'0000000010000001).
  Merging pattern 25'---111-1-------00---1-0-1 and 25'---101-1-------00---1-0-1 from group (1 2 16'0000000010000001).
  Merging pattern 25'---1-1-0-------00---1-0-1 and 25'---1-1-1-------00---1-0-1 from group (1 2 16'0000000010000001).
  Merging pattern 25'---1-1-1-------00---1-0-1 and 25'---1-1-0-------00---1-0-1 from group (1 2 16'0000000010000001).
  Merging pattern 25'---10101----------------0 and 25'---10111----------------0 from group (2 1 16'0100000100000000).
  Merging pattern 25'---01101----------------0 and 25'---01111----------------0 from group (2 1 16'0100000100000000).
  Merging pattern 25'---11101----------------0 and 25'---11111----------------0 from group (2 1 16'0100000100000000).
  Merging pattern 25'---10111----------------0 and 25'---10101----------------0 from group (2 1 16'0100000100000000).
  Merging pattern 25'---01111----------------0 and 25'---01101----------------0 from group (2 1 16'0100000100000000).
  Merging pattern 25'---11111----------------0 and 25'---11101----------------0 from group (2 1 16'0100000100000000).
  Merging pattern 25'1--10101----------------1 and 25'1--10111----------------1 from group (2 1 16'0100000100000000).
  Merging pattern 25'1--01101----------------1 and 25'1--01111----------------1 from group (2 1 16'0100000100000000).
  Merging pattern 25'1--11101----------------1 and 25'1--11111----------------1 from group (2 1 16'0100000100000000).
  Merging pattern 25'1--10111----------------1 and 25'1--10101----------------1 from group (2 1 16'0100000100000000).
  Merging pattern 25'1--01111----------------1 and 25'1--01101----------------1 from group (2 1 16'0100000100000000).
  Merging pattern 25'1--11111----------------1 and 25'1--11101----------------1 from group (2 1 16'0100000100000000).
  Merging pattern 25'---101-1----------------0 and 25'---111-1----------------0 from group (2 1 16'0100000100000000).
  Merging pattern 25'---111-1----------------0 and 25'---101-1----------------0 from group (2 1 16'0100000100000000).
  Merging pattern 25'1--101-1----------------1 and 25'1--111-1----------------1 from group (2 1 16'0100000100000000).
  Merging pattern 25'1--111-1----------------1 and 25'1--101-1----------------1 from group (2 1 16'0100000100000000).
  Merging pattern 25'---1-1-0----------------0 and 25'---1-1-1----------------0 from group (2 1 16'0100000100000000).
  Merging pattern 25'---1-1-1----------------0 and 25'---1-1-0----------------0 from group (2 1 16'0100000100000000).
  Merging pattern 25'1--1-1-0----------------1 and 25'1--1-1-1----------------1 from group (2 1 16'0100000100000000).
  Merging pattern 25'1--1-1-1----------------1 and 25'1--1-1-0----------------1 from group (2 1 16'0100000100000000).
  Merging pattern 25'0-010101------0---------1 and 25'0-010111------0---------1 from group (2 3 16'0100000001000000).
  Merging pattern 25'0-001101------0---------1 and 25'0-001111------0---------1 from group (2 3 16'0100000001000000).
  Merging pattern 25'0-011101------0---------1 and 25'0-011111------0---------1 from group (2 3 16'0100000001000000).
  Merging pattern 25'0-010111------0---------1 and 25'0-010101------0---------1 from group (2 3 16'0100000001000000).
  Merging pattern 25'0-001111------0---------1 and 25'0-001101------0---------1 from group (2 3 16'0100000001000000).
  Merging pattern 25'0-011111------0---------1 and 25'0-011101------0---------1 from group (2 3 16'0100000001000000).
  Merging pattern 25'0-0101-1------0---------1 and 25'0-0111-1------0---------1 from group (2 3 16'0100000001000000).
  Merging pattern 25'0-0111-1------0---------1 and 25'0-0101-1------0---------1 from group (2 3 16'0100000001000000).
  Merging pattern 25'0-01-1-0------0---------1 and 25'0-01-1-1------0---------1 from group (2 3 16'0100000001000000).
  Merging pattern 25'0-01-1-1------0---------1 and 25'0-01-1-0------0---------1 from group (2 3 16'0100000001000000).
  Merging pattern 25'--110101----------------1 and 25'--110111----------------1 from group (2 4 16'0100000000100000).
  Merging pattern 25'--101101----------------1 and 25'--101111----------------1 from group (2 4 16'0100000000100000).
  Merging pattern 25'--111101----------------1 and 25'--111111----------------1 from group (2 4 16'0100000000100000).
  Merging pattern 25'--110111----------------1 and 25'--110101----------------1 from group (2 4 16'0100000000100000).
  Merging pattern 25'--101111----------------1 and 25'--101101----------------1 from group (2 4 16'0100000000100000).
  Merging pattern 25'--111111----------------1 and 25'--111101----------------1 from group (2 4 16'0100000000100000).
  Merging pattern 25'--1101-1----------------1 and 25'--1111-1----------------1 from group (2 4 16'0100000000100000).
  Merging pattern 25'--1111-1----------------1 and 25'--1101-1----------------1 from group (2 4 16'0100000000100000).
  Merging pattern 25'--11-1-0----------------1 and 25'--11-1-1----------------1 from group (2 4 16'0100000000100000).
  Merging pattern 25'--11-1-1----------------1 and 25'--11-1-0----------------1 from group (2 4 16'0100000000100000).
  Merging pattern 25'---10101------1---------1 and 25'---10111------1---------1 from group (2 6 16'0100000000000100).
  Merging pattern 25'---01101------1---------1 and 25'---01111------1---------1 from group (2 6 16'0100000000000100).
  Merging pattern 25'---11101------1---------1 and 25'---11111------1---------1 from group (2 6 16'0100000000000100).
  Merging pattern 25'---10111------1---------1 and 25'---10101------1---------1 from group (2 6 16'0100000000000100).
  Merging pattern 25'---01111------1---------1 and 25'---01101------1---------1 from group (2 6 16'0100000000000100).
  Merging pattern 25'---11111------1---------1 and 25'---11101------1---------1 from group (2 6 16'0100000000000100).
  Merging pattern 25'---101-1------1---------1 and 25'---111-1------1---------1 from group (2 6 16'0100000000000100).
  Merging pattern 25'---111-1------1---------1 and 25'---101-1------1---------1 from group (2 6 16'0100000000000100).
  Merging pattern 25'---1-1-0------1---------1 and 25'---1-1-1------1---------1 from group (2 6 16'0100000000000100).
  Merging pattern 25'---1-1-1------1---------1 and 25'---1-1-0------1---------1 from group (2 6 16'0100000000000100).
  Merging pattern 25'-0-10101----01-------1--1 and 25'-0-10111----01-------1--1 from group (3 0 16'0000001000000010).
  Merging pattern 25'-0-01101----01-------1--1 and 25'-0-01111----01-------1--1 from group (3 0 16'0000001000000010).
  Merging pattern 25'-0-11101----01-------1--1 and 25'-0-11111----01-------1--1 from group (3 0 16'0000001000000010).
  Merging pattern 25'-0-10111----01-------1--1 and 25'-0-10101----01-------1--1 from group (3 0 16'0000001000000010).
  Merging pattern 25'-0-01111----01-------1--1 and 25'-0-01101----01-------1--1 from group (3 0 16'0000001000000010).
  Merging pattern 25'-0-11111----01-------1--1 and 25'-0-11101----01-------1--1 from group (3 0 16'0000001000000010).
  Merging pattern 25'-0-101-1----01-------1--1 and 25'-0-111-1----01-------1--1 from group (3 0 16'0000001000000010).
  Merging pattern 25'-0-111-1----01-------1--1 and 25'-0-101-1----01-------1--1 from group (3 0 16'0000001000000010).
  Merging pattern 25'-0-1-1-0----01-------1--1 and 25'-0-1-1-1----01-------1--1 from group (3 0 16'0000001000000010).
  Merging pattern 25'-0-1-1-1----01-------1--1 and 25'-0-1-1-0----01-------1--1 from group (3 0 16'0000001000000010).
  Merging pattern 25'---10101----------------0 and 25'---10111----------------0 from group (3 1 16'0000000100000010).
  Merging pattern 25'---01101----------------0 and 25'---01111----------------0 from group (3 1 16'0000000100000010).
  Merging pattern 25'---11101----------------0 and 25'---11111----------------0 from group (3 1 16'0000000100000010).
  Merging pattern 25'---10111----------------0 and 25'---10101----------------0 from group (3 1 16'0000000100000010).
  Merging pattern 25'---01111----------------0 and 25'---01101----------------0 from group (3 1 16'0000000100000010).
  Merging pattern 25'---11111----------------0 and 25'---11101----------------0 from group (3 1 16'0000000100000010).
  Merging pattern 25'-0-10101----11-------1--1 and 25'-0-10111----11-------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'-0-01101----11-------1--1 and 25'-0-01111----11-------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'-0-11101----11-------1--1 and 25'-0-11111----11-------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'-0-10111----11-------1--1 and 25'-0-10101----11-------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'-0-01111----11-------1--1 and 25'-0-01101----11-------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'-0-11111----11-------1--1 and 25'-0-11101----11-------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'-1-10101-------------1--1 and 25'-1-10111-------------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'-1-01101-------------1--1 and 25'-1-01111-------------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'-1-11101-------------1--1 and 25'-1-11111-------------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'-1-10111-------------1--1 and 25'-1-10101-------------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'-1-01111-------------1--1 and 25'-1-01101-------------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'-1-11111-------------1--1 and 25'-1-11101-------------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'---101-1----------------0 and 25'---111-1----------------0 from group (3 1 16'0000000100000010).
  Merging pattern 25'---111-1----------------0 and 25'---101-1----------------0 from group (3 1 16'0000000100000010).
  Merging pattern 25'-0-101-1----11-------1--1 and 25'-0-111-1----11-------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'-0-111-1----11-------1--1 and 25'-0-101-1----11-------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'-1-101-1-------------1--1 and 25'-1-111-1-------------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'-1-111-1-------------1--1 and 25'-1-101-1-------------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'---1-1-0----------------0 and 25'---1-1-1----------------0 from group (3 1 16'0000000100000010).
  Merging pattern 25'---1-1-1----------------0 and 25'---1-1-0----------------0 from group (3 1 16'0000000100000010).
  Merging pattern 25'-0-1-1-0----11-------1--1 and 25'-0-1-1-1----11-------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'-0-1-1-1----11-------1--1 and 25'-0-1-1-0----11-------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'-1-1-1-0-------------1--1 and 25'-1-1-1-1-------------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'-1-1-1-1-------------1--1 and 25'-1-1-1-0-------------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'-0-10101-----0-------1--1 and 25'-0-10111-----0-------1--1 from group (3 3 16'0000000001000010).
  Merging pattern 25'-0-01101-----0-------1--1 and 25'-0-01111-----0-------1--1 from group (3 3 16'0000000001000010).
  Merging pattern 25'-0-11101-----0-------1--1 and 25'-0-11111-----0-------1--1 from group (3 3 16'0000000001000010).
  Merging pattern 25'-0-10111-----0-------1--1 and 25'-0-10101-----0-------1--1 from group (3 3 16'0000000001000010).
  Merging pattern 25'-0-01111-----0-------1--1 and 25'-0-01101-----0-------1--1 from group (3 3 16'0000000001000010).
  Merging pattern 25'-0-11111-----0-------1--1 and 25'-0-11101-----0-------1--1 from group (3 3 16'0000000001000010).
  Merging pattern 25'-0-101-1-----0-------1--1 and 25'-0-111-1-----0-------1--1 from group (3 3 16'0000000001000010).
  Merging pattern 25'-0-111-1-----0-------1--1 and 25'-0-101-1-----0-------1--1 from group (3 3 16'0000000001000010).
  Merging pattern 25'-0-1-1-0-----0-------1--1 and 25'-0-1-1-1-----0-------1--1 from group (3 3 16'0000000001000010).
  Merging pattern 25'-0-1-1-1-----0-------1--1 and 25'-0-1-1-0-----0-------1--1 from group (3 3 16'0000000001000010).
  Merging pattern 25'---10101-----------0-0--1 and 25'---10111-----------0-0--1 from group (3 4 16'0000000000100010).
  Merging pattern 25'---01101-----------0-0--1 and 25'---01111-----------0-0--1 from group (3 4 16'0000000000100010).
  Merging pattern 25'---11101-----------0-0--1 and 25'---11111-----------0-0--1 from group (3 4 16'0000000000100010).
  Merging pattern 25'---10111-----------0-0--1 and 25'---10101-----------0-0--1 from group (3 4 16'0000000000100010).
  Merging pattern 25'---01111-----------0-0--1 and 25'---01101-----------0-0--1 from group (3 4 16'0000000000100010).
  Merging pattern 25'---11111-----------0-0--1 and 25'---11101-----------0-0--1 from group (3 4 16'0000000000100010).
  Merging pattern 25'---101-1-----------0-0--1 and 25'---111-1-----------0-0--1 from group (3 4 16'0000000000100010).
  Merging pattern 25'---111-1-----------0-0--1 and 25'---101-1-----------0-0--1 from group (3 4 16'0000000000100010).
  Merging pattern 25'---1-1-0-----------0-0--1 and 25'---1-1-1-----------0-0--1 from group (3 4 16'0000000000100010).
  Merging pattern 25'---1-1-1-----------0-0--1 and 25'---1-1-0-----------0-0--1 from group (3 4 16'0000000000100010).
  Merging pattern 25'---10101-----------1----1 and 25'---10111-----------1----1 from group (3 5 16'0000000000001010).
  Merging pattern 25'---01101-----------1----1 and 25'---01111-----------1----1 from group (3 5 16'0000000000001010).
  Merging pattern 25'---11101-----------1----1 and 25'---11111-----------1----1 from group (3 5 16'0000000000001010).
  Merging pattern 25'---10111-----------1----1 and 25'---10101-----------1----1 from group (3 5 16'0000000000001010).
  Merging pattern 25'---01111-----------1----1 and 25'---01101-----------1----1 from group (3 5 16'0000000000001010).
  Merging pattern 25'---11111-----------1----1 and 25'---11101-----------1----1 from group (3 5 16'0000000000001010).
  Merging pattern 25'---101-1-----------1----1 and 25'---111-1-----------1----1 from group (3 5 16'0000000000001010).
  Merging pattern 25'---111-1-----------1----1 and 25'---101-1-----------1----1 from group (3 5 16'0000000000001010).
  Merging pattern 25'---1-1-0-----------1----1 and 25'---1-1-1-----------1----1 from group (3 5 16'0000000000001010).
  Merging pattern 25'---1-1-1-----------1----1 and 25'---1-1-0-----------1----1 from group (3 5 16'0000000000001010).
  Merging pattern 25'---10101----------------0 and 25'---10111----------------0 from group (4 1 16'1000000100000000).
  Merging pattern 25'---01101----------------0 and 25'---01111----------------0 from group (4 1 16'1000000100000000).
  Merging pattern 25'---11101----------------0 and 25'---11111----------------0 from group (4 1 16'1000000100000000).
  Merging pattern 25'---10111----------------0 and 25'---10101----------------0 from group (4 1 16'1000000100000000).
  Merging pattern 25'---01111----------------0 and 25'---01101----------------0 from group (4 1 16'1000000100000000).
  Merging pattern 25'---11111----------------0 and 25'---11101----------------0 from group (4 1 16'1000000100000000).
  Merging pattern 25'---10101---------01----11 and 25'---10111---------01----11 from group (4 1 16'1000000100000000).
  Merging pattern 25'---01101---------01----11 and 25'---01111---------01----11 from group (4 1 16'1000000100000000).
  Merging pattern 25'---11101---------01----11 and 25'---11111---------01----11 from group (4 1 16'1000000100000000).
  Merging pattern 25'---10111---------01----11 and 25'---10101---------01----11 from group (4 1 16'1000000100000000).
  Merging pattern 25'---01111---------01----11 and 25'---01101---------01----11 from group (4 1 16'1000000100000000).
  Merging pattern 25'---11111---------01----11 and 25'---11101---------01----11 from group (4 1 16'1000000100000000).
  Merging pattern 25'---10101---------00-----1 and 25'---10111---------00-----1 from group (4 1 16'1000000100000000).
  Merging pattern 25'---01101---------00-----1 and 25'---01111---------00-----1 from group (4 1 16'1000000100000000).
  Merging pattern 25'---11101---------00-----1 and 25'---11111---------00-----1 from group (4 1 16'1000000100000000).
  Merging pattern 25'---10111---------00-----1 and 25'---10101---------00-----1 from group (4 1 16'1000000100000000).
  Merging pattern 25'---01111---------00-----1 and 25'---01101---------00-----1 from group (4 1 16'1000000100000000).
  Merging pattern 25'---11111---------00-----1 and 25'---11101---------00-----1 from group (4 1 16'1000000100000000).
  Merging pattern 25'---101-1----------------0 and 25'---111-1----------------0 from group (4 1 16'1000000100000000).
  Merging pattern 25'---111-1----------------0 and 25'---101-1----------------0 from group (4 1 16'1000000100000000).
  Merging pattern 25'---101-1---------01----11 and 25'---111-1---------01----11 from group (4 1 16'1000000100000000).
  Merging pattern 25'---111-1---------01----11 and 25'---101-1---------01----11 from group (4 1 16'1000000100000000).
  Merging pattern 25'---101-1---------00-----1 and 25'---111-1---------00-----1 from group (4 1 16'1000000100000000).
  Merging pattern 25'---111-1---------00-----1 and 25'---101-1---------00-----1 from group (4 1 16'1000000100000000).
  Merging pattern 25'---1-1-0----------------0 and 25'---1-1-1----------------0 from group (4 1 16'1000000100000000).
  Merging pattern 25'---1-1-1----------------0 and 25'---1-1-0----------------0 from group (4 1 16'1000000100000000).
  Merging pattern 25'---1-1-0---------01----11 and 25'---1-1-1---------01----11 from group (4 1 16'1000000100000000).
  Merging pattern 25'---1-1-1---------01----11 and 25'---1-1-0---------01----11 from group (4 1 16'1000000100000000).
  Merging pattern 25'---1-1-0---------00-----1 and 25'---1-1-1---------00-----1 from group (4 1 16'1000000100000000).
  Merging pattern 25'---1-1-1---------00-----1 and 25'---1-1-0---------00-----1 from group (4 1 16'1000000100000000).
  Merging pattern 25'---10101---------01----01 and 25'---10111---------01----01 from group (4 4 16'1000000000100000).
  Merging pattern 25'---01101---------01----01 and 25'---01111---------01----01 from group (4 4 16'1000000000100000).
  Merging pattern 25'---11101---------01----01 and 25'---11111---------01----01 from group (4 4 16'1000000000100000).
  Merging pattern 25'---10111---------01----01 and 25'---10101---------01----01 from group (4 4 16'1000000000100000).
  Merging pattern 25'---01111---------01----01 and 25'---01101---------01----01 from group (4 4 16'1000000000100000).
  Merging pattern 25'---11111---------01----01 and 25'---11101---------01----01 from group (4 4 16'1000000000100000).
  Merging pattern 25'---10101---------1------1 and 25'---10111---------1------1 from group (4 4 16'1000000000100000).
  Merging pattern 25'---01101---------1------1 and 25'---01111---------1------1 from group (4 4 16'1000000000100000).
  Merging pattern 25'---11101---------1------1 and 25'---11111---------1------1 from group (4 4 16'1000000000100000).
  Merging pattern 25'---10111---------1------1 and 25'---10101---------1------1 from group (4 4 16'1000000000100000).
  Merging pattern 25'---01111---------1------1 and 25'---01101---------1------1 from group (4 4 16'1000000000100000).
  Merging pattern 25'---11111---------1------1 and 25'---11101---------1------1 from group (4 4 16'1000000000100000).
  Merging pattern 25'---101-1---------01----01 and 25'---111-1---------01----01 from group (4 4 16'1000000000100000).
  Merging pattern 25'---111-1---------01----01 and 25'---101-1---------01----01 from group (4 4 16'1000000000100000).
  Merging pattern 25'---101-1---------1------1 and 25'---111-1---------1------1 from group (4 4 16'1000000000100000).
  Merging pattern 25'---111-1---------1------1 and 25'---101-1---------1------1 from group (4 4 16'1000000000100000).
  Merging pattern 25'---1-1-0---------01----01 and 25'---1-1-1---------01----01 from group (4 4 16'1000000000100000).
  Merging pattern 25'---1-1-1---------01----01 and 25'---1-1-0---------01----01 from group (4 4 16'1000000000100000).
  Merging pattern 25'---1-1-0---------1------1 and 25'---1-1-1---------1------1 from group (4 4 16'1000000000100000).
  Merging pattern 25'---1-1-1---------1------1 and 25'---1-1-0---------1------1 from group (4 4 16'1000000000100000).
  Merging pattern 25'---10101----------------0 and 25'---10111----------------0 from group (5 1 16'0001000100000000).
  Merging pattern 25'---01101----------------0 and 25'---01111----------------0 from group (5 1 16'0001000100000000).
  Merging pattern 25'---11101----------------0 and 25'---11111----------------0 from group (5 1 16'0001000100000000).
  Merging pattern 25'---10111----------------0 and 25'---10101----------------0 from group (5 1 16'0001000100000000).
  Merging pattern 25'---01111----------------0 and 25'---01101----------------0 from group (5 1 16'0001000100000000).
  Merging pattern 25'---11111----------------0 and 25'---11101----------------0 from group (5 1 16'0001000100000000).
  Merging pattern 25'---1010111--------------1 and 25'---1011111--------------1 from group (5 1 16'0001000100000000).
  Merging pattern 25'---0110111--------------1 and 25'---0111111--------------1 from group (5 1 16'0001000100000000).
  Merging pattern 25'---1110111--------------1 and 25'---1111111--------------1 from group (5 1 16'0001000100000000).
  Merging pattern 25'---1011111--------------1 and 25'---1010111--------------1 from group (5 1 16'0001000100000000).
  Merging pattern 25'---0111111--------------1 and 25'---0110111--------------1 from group (5 1 16'0001000100000000).
  Merging pattern 25'---1111111--------------1 and 25'---1110111--------------1 from group (5 1 16'0001000100000000).
  Merging pattern 25'---101-1----------------0 and 25'---111-1----------------0 from group (5 1 16'0001000100000000).
  Merging pattern 25'---111-1----------------0 and 25'---101-1----------------0 from group (5 1 16'0001000100000000).
  Merging pattern 25'---101-111--------------1 and 25'---111-111--------------1 from group (5 1 16'0001000100000000).
  Merging pattern 25'---111-111--------------1 and 25'---101-111--------------1 from group (5 1 16'0001000100000000).
  Merging pattern 25'---1-1-0----------------0 and 25'---1-1-1----------------0 from group (5 1 16'0001000100000000).
  Merging pattern 25'---1-1-1----------------0 and 25'---1-1-0----------------0 from group (5 1 16'0001000100000000).
  Merging pattern 25'---1-1-011--------------1 and 25'---1-1-111--------------1 from group (5 1 16'0001000100000000).
  Merging pattern 25'---1-1-111--------------1 and 25'---1-1-011--------------1 from group (5 1 16'0001000100000000).
  Merging pattern 25'---10101-0--------------1 and 25'---10111-0--------------1 from group (5 5 16'0001000000001000).
  Merging pattern 25'---01101-0--------------1 and 25'---01111-0--------------1 from group (5 5 16'0001000000001000).
  Merging pattern 25'---11101-0--------------1 and 25'---11111-0--------------1 from group (5 5 16'0001000000001000).
  Merging pattern 25'---10111-0--------------1 and 25'---10101-0--------------1 from group (5 5 16'0001000000001000).
  Merging pattern 25'---01111-0--------------1 and 25'---01101-0--------------1 from group (5 5 16'0001000000001000).
  Merging pattern 25'---11111-0--------------1 and 25'---11101-0--------------1 from group (5 5 16'0001000000001000).
  Merging pattern 25'---1010101--------------1 and 25'---1011101--------------1 from group (5 5 16'0001000000001000).
  Merging pattern 25'---0110101--------------1 and 25'---0111101--------------1 from group (5 5 16'0001000000001000).
  Merging pattern 25'---1110101--------------1 and 25'---1111101--------------1 from group (5 5 16'0001000000001000).
  Merging pattern 25'---1011101--------------1 and 25'---1010101--------------1 from group (5 5 16'0001000000001000).
  Merging pattern 25'---0111101--------------1 and 25'---0110101--------------1 from group (5 5 16'0001000000001000).
  Merging pattern 25'---1111101--------------1 and 25'---1110101--------------1 from group (5 5 16'0001000000001000).
  Merging pattern 25'---101-1-0--------------1 and 25'---111-1-0--------------1 from group (5 5 16'0001000000001000).
  Merging pattern 25'---111-1-0--------------1 and 25'---101-1-0--------------1 from group (5 5 16'0001000000001000).
  Merging pattern 25'---101-101--------------1 and 25'---111-101--------------1 from group (5 5 16'0001000000001000).
  Merging pattern 25'---111-101--------------1 and 25'---101-101--------------1 from group (5 5 16'0001000000001000).
  Merging pattern 25'---1-1-0-0--------------1 and 25'---1-1-1-0--------------1 from group (5 5 16'0001000000001000).
  Merging pattern 25'---1-1-1-0--------------1 and 25'---1-1-0-0--------------1 from group (5 5 16'0001000000001000).
  Merging pattern 25'---1-1-001--------------1 and 25'---1-1-101--------------1 from group (5 5 16'0001000000001000).
  Merging pattern 25'---1-1-101--------------1 and 25'---1-1-001--------------1 from group (5 5 16'0001000000001000).
  Merging pattern 25'---10101----------------0 and 25'---10111----------------0 from group (6 1 16'0000010100000000).
  Merging pattern 25'---01101----------------0 and 25'---01111----------------0 from group (6 1 16'0000010100000000).
  Merging pattern 25'---11101----------------0 and 25'---11111----------------0 from group (6 1 16'0000010100000000).
  Merging pattern 25'---10111----------------0 and 25'---10101----------------0 from group (6 1 16'0000010100000000).
  Merging pattern 25'---01111----------------0 and 25'---01101----------------0 from group (6 1 16'0000010100000000).
  Merging pattern 25'---11111----------------0 and 25'---11101----------------0 from group (6 1 16'0000010100000000).
  Merging pattern 25'---1010111--------------1 and 25'---1011111--------------1 from group (6 1 16'0000010100000000).
  Merging pattern 25'---0110111--------------1 and 25'---0111111--------------1 from group (6 1 16'0000010100000000).
  Merging pattern 25'---1110111--------------1 and 25'---1111111--------------1 from group (6 1 16'0000010100000000).
  Merging pattern 25'---1011111--------------1 and 25'---1010111--------------1 from group (6 1 16'0000010100000000).
  Merging pattern 25'---0111111--------------1 and 25'---0110111--------------1 from group (6 1 16'0000010100000000).
  Merging pattern 25'---1111111--------------1 and 25'---1110111--------------1 from group (6 1 16'0000010100000000).
  Merging pattern 25'---101-1----------------0 and 25'---111-1----------------0 from group (6 1 16'0000010100000000).
  Merging pattern 25'---111-1----------------0 and 25'---101-1----------------0 from group (6 1 16'0000010100000000).
  Merging pattern 25'---101-111--------------1 and 25'---111-111--------------1 from group (6 1 16'0000010100000000).
  Merging pattern 25'---111-111--------------1 and 25'---101-111--------------1 from group (6 1 16'0000010100000000).
  Merging pattern 25'---1-1-0----------------0 and 25'---1-1-1----------------0 from group (6 1 16'0000010100000000).
  Merging pattern 25'---1-1-1----------------0 and 25'---1-1-0----------------0 from group (6 1 16'0000010100000000).
  Merging pattern 25'---1-1-011--------------1 and 25'---1-1-111--------------1 from group (6 1 16'0000010100000000).
  Merging pattern 25'---1-1-111--------------1 and 25'---1-1-011--------------1 from group (6 1 16'0000010100000000).
  Merging pattern 25'---10101-0--------------1 and 25'---10111-0--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---01101-0--------------1 and 25'---01111-0--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---11101-0--------------1 and 25'---11111-0--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---10111-0--------------1 and 25'---10101-0--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---01111-0--------------1 and 25'---01101-0--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---11111-0--------------1 and 25'---11101-0--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---1010101--------------1 and 25'---1011101--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---0110101--------------1 and 25'---0111101--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---1110101--------------1 and 25'---1111101--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---1011101--------------1 and 25'---1010101--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---0111101--------------1 and 25'---0110101--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---1111101--------------1 and 25'---1110101--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---101-1-0--------------1 and 25'---111-1-0--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---111-1-0--------------1 and 25'---101-1-0--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---101-101--------------1 and 25'---111-101--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---111-101--------------1 and 25'---101-101--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---1-1-0-0--------------1 and 25'---1-1-1-0--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---1-1-1-0--------------1 and 25'---1-1-0-0--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---1-1-001--------------1 and 25'---1-1-101--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---1-1-101--------------1 and 25'---1-1-001--------------1 from group (6 6 16'0000010000000100).
  Removing unused input signal $eq$/openlane/designs/current/src/picorv32a.v:1790$611_Y.
  Removing unused input signal $auto$opt_reduce.cc:134:opt_mux$3680.

5.8.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 45 unused cells and 45 unused wires.
<suppressed ~46 debug messages>

5.8.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\cpu_state$3687' from module `\picorv32a'.
  Removing unused output signal $0\cpu_state[7:0] [0].
  Removing unused output signal $0\cpu_state[7:0] [1].
  Removing unused output signal $0\cpu_state[7:0] [2].
  Removing unused output signal $0\cpu_state[7:0] [3].
  Removing unused output signal $0\cpu_state[7:0] [4].
  Removing unused output signal $0\cpu_state[7:0] [5].
  Removing unused output signal $0\cpu_state[7:0] [6].
  Removing unused output signal $0\cpu_state[7:0] [7].
Optimizing FSM `$fsm$\mem_wordsize$3697' from module `\picorv32a'.
  Removing unused output signal $0\mem_wordsize[1:0] [0].
  Removing unused output signal $0\mem_wordsize[1:0] [1].

5.8.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\cpu_state$3687' from module `\picorv32a' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  10000000 -> ------1
  01000000 -> -----1-
  00100000 -> ----1--
  00010000 -> ---1---
  00001000 -> --1----
  00000010 -> -1-----
  00000001 -> 1------
Recoding FSM `$fsm$\mem_wordsize$3697' from module `\picorv32a' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> --1
  10 -> -1-
  01 -> 1--

5.8.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\cpu_state$3687' from module `picorv32a':
-------------------------------------

  Information on FSM $fsm$\cpu_state$3687 (\cpu_state):

  Number of input signals:   23
  Number of output signals:   8
  Number of state bits:       7

  Input signals:
    0: \resetn
    1: \mem_done
    2: \instr_jal
    3: \instr_trap
    4: \decoder_trigger
    5: \is_sb_sh_sw
    6: \is_beq_bne_blt_bge_bltu_bgeu
    7: \alu_wait
    8: $logic_and$/openlane/designs/current/src/picorv32a.v:1497$555_Y
    9: $logic_and$/openlane/designs/current/src/picorv32a.v:1507$563_Y
   10: $logic_and$/openlane/designs/current/src/picorv32a.v:1655$588_Y
   11: $logic_and$/openlane/designs/current/src/picorv32a.v:1736$596_Y
   12: $logic_and$/openlane/designs/current/src/picorv32a.v:1739$600_Y
   13: $logic_or$/openlane/designs/current/src/picorv32a.v:1816$629_Y
   14: $logic_and$/openlane/designs/current/src/picorv32a.v:1831$633_Y
   15: $logic_and$/openlane/designs/current/src/picorv32a.v:1874$644_Y
   16: $logic_and$/openlane/designs/current/src/picorv32a.v:1875$647_Y
   17: $logic_and$/openlane/designs/current/src/picorv32a.v:1877$651_Y
   18: $logic_and$/openlane/designs/current/src/picorv32a.v:1882$654_Y
   19: $logic_and$/openlane/designs/current/src/picorv32a.v:1890$662_Y
   20: $auto$opt_reduce.cc:134:opt_mux$3660
   21: \genblk1.pcpi_mul.active [1]
   22: $auto$opt_reduce.cc:134:opt_mux$3666

  Output signals:
    0: $eq$/openlane/designs/current/src/picorv32a.v:1272$470_Y
    1: $eq$/openlane/designs/current/src/picorv32a.v:1312$491_Y
    2: $procmux$1012_CMP
    3: $procmux$1014_CMP
    4: $procmux$1006_CMP
    5: $procmux$1019_CMP
    6: $procmux$1017_CMP
    7: $procmux$1015_CMP

  State encoding:
    0:  7'------1
    1:  7'-----1-
    2:  7'----1--
    3:  7'---1---
    4:  7'--1----
    5:  7'-1-----
    6:  7'1------

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 23'---0---0--------------1   ->     0 8'00100000
      1:     0 23'---00-01--------------1   ->     0 8'00100000
      2:     0 23'---00111--------------1   ->     0 8'00100000
      3:     0 23'---011-1--------------1   ->     0 8'00100000
      4:     0 23'---1-1----------------1   ->     0 8'00100000
      5:     0 23'---00011---------------   ->     0 8'00100000
      6:     0 23'---010-1---------------   ->     0 8'00100000
      7:     0 23'---1-0-----------------   ->     0 8'00100000
      8:     0 23'---0---0--------------0   ->     1 8'00100000
      9:     0 23'---00-01--------------0   ->     1 8'00100000
     10:     0 23'---00111--------------0   ->     1 8'00100000
     11:     0 23'---011-1--------------0   ->     1 8'00100000
     12:     0 23'---1-1----------------0   ->     1 8'00100000
     13:     1 23'---00011---------------   ->     0 8'00000001
     14:     1 23'---010-1---------------   ->     0 8'00000001
     15:     1 23'---1-0-----------------   ->     0 8'00000001
     16:     1 23'---0---0--------------0   ->     1 8'00000001
     17:     1 23'---00-01--------------0   ->     1 8'00000001
     18:     1 23'---00111--------------0   ->     1 8'00000001
     19:     1 23'---011-1--------------0   ->     1 8'00000001
     20:     1 23'---1-1----------------0   ->     1 8'00000001
     21:     1 23'---0---0-----00---1-1-1   ->     1 8'00000001
     22:     1 23'---00-01-----00---1-1-1   ->     1 8'00000001
     23:     1 23'---00111-----00---1-1-1   ->     1 8'00000001
     24:     1 23'---011-1-----00---1-1-1   ->     1 8'00000001
     25:     1 23'---1-1-------00---1-1-1   ->     1 8'00000001
     26:     1 23'---0---0-----00---0---1   ->     1 8'00000001
     27:     1 23'---00-01-----00---0---1   ->     1 8'00000001
     28:     1 23'---00111-----00---0---1   ->     1 8'00000001
     29:     1 23'---011-1-----00---0---1   ->     1 8'00000001
     30:     1 23'---1-1-------00---0---1   ->     1 8'00000001
     31:     1 23'---0---0-----10-------1   ->     1 8'00000001
     32:     1 23'---00-01-----10-------1   ->     1 8'00000001
     33:     1 23'---00111-----10-------1   ->     1 8'00000001
     34:     1 23'---011-1-----10-------1   ->     1 8'00000001
     35:     1 23'---1-1-------10-------1   ->     1 8'00000001
     36:     1 23'---0---0------1-------1   ->     1 8'00000001
     37:     1 23'---00-01------1-------1   ->     1 8'00000001
     38:     1 23'---00111------1-------1   ->     1 8'00000001
     39:     1 23'---011-1------1-------1   ->     1 8'00000001
     40:     1 23'---1-1--------1-------1   ->     1 8'00000001
     41:     1 23'---0---0-----00---1-0-1   ->     2 8'00000001
     42:     1 23'---00-01-----00---1-0-1   ->     2 8'00000001
     43:     1 23'---00111-----00---1-0-1   ->     2 8'00000001
     44:     1 23'---011-1-----00---1-0-1   ->     2 8'00000001
     45:     1 23'---1-1-------00---1-0-1   ->     2 8'00000001
     46:     2 23'---00011---------------   ->     0 8'01000000
     47:     2 23'---010-1---------------   ->     0 8'01000000
     48:     2 23'---1-0-----------------   ->     0 8'01000000
     49:     2 23'---0---0--------------0   ->     1 8'01000000
     50:     2 23'---00-01--------------0   ->     1 8'01000000
     51:     2 23'---00111--------------0   ->     1 8'01000000
     52:     2 23'---011-1--------------0   ->     1 8'01000000
     53:     2 23'---1-1----------------0   ->     1 8'01000000
     54:     2 23'1--0---0--------------1   ->     1 8'01000000
     55:     2 23'1--00-01--------------1   ->     1 8'01000000
     56:     2 23'1--00111--------------1   ->     1 8'01000000
     57:     2 23'1--011-1--------------1   ->     1 8'01000000
     58:     2 23'1--1-1----------------1   ->     1 8'01000000
     59:     2 23'0-00---0----0---------1   ->     3 8'01000000
     60:     2 23'0-000-01----0---------1   ->     3 8'01000000
     61:     2 23'0-000111----0---------1   ->     3 8'01000000
     62:     2 23'0-0011-1----0---------1   ->     3 8'01000000
     63:     2 23'0-01-1------0---------1   ->     3 8'01000000
     64:     2 23'--10---0--------------1   ->     4 8'01000000
     65:     2 23'--100-01--------------1   ->     4 8'01000000
     66:     2 23'--100111--------------1   ->     4 8'01000000
     67:     2 23'--1011-1--------------1   ->     4 8'01000000
     68:     2 23'--11-1----------------1   ->     4 8'01000000
     69:     2 23'---0---0----1---------1   ->     6 8'01000000
     70:     2 23'---00-01----1---------1   ->     6 8'01000000
     71:     2 23'---00111----1---------1   ->     6 8'01000000
     72:     2 23'---011-1----1---------1   ->     6 8'01000000
     73:     2 23'---1-1------1---------1   ->     6 8'01000000
     74:     3 23'-0-0---0--01-------1--1   ->     0 8'00000010
     75:     3 23'-0-00-01--01-------1--1   ->     0 8'00000010
     76:     3 23'-0-00111--01-------1--1   ->     0 8'00000010
     77:     3 23'-0-011-1--01-------1--1   ->     0 8'00000010
     78:     3 23'-0-1-1----01-------1--1   ->     0 8'00000010
     79:     3 23'---00011---------------   ->     0 8'00000010
     80:     3 23'---010-1---------------   ->     0 8'00000010
     81:     3 23'---1-0-----------------   ->     0 8'00000010
     82:     3 23'---0---0--------------0   ->     1 8'00000010
     83:     3 23'---00-01--------------0   ->     1 8'00000010
     84:     3 23'---00111--------------0   ->     1 8'00000010
     85:     3 23'---011-1--------------0   ->     1 8'00000010
     86:     3 23'---1-1----------------0   ->     1 8'00000010
     87:     3 23'-0-0---0--11-------1--1   ->     1 8'00000010
     88:     3 23'-0-00-01--11-------1--1   ->     1 8'00000010
     89:     3 23'-0-00111--11-------1--1   ->     1 8'00000010
     90:     3 23'-0-011-1--11-------1--1   ->     1 8'00000010
     91:     3 23'-0-1-1----11-------1--1   ->     1 8'00000010
     92:     3 23'-1-0---0-----------1--1   ->     1 8'00000010
     93:     3 23'-1-00-01-----------1--1   ->     1 8'00000010
     94:     3 23'-1-00111-----------1--1   ->     1 8'00000010
     95:     3 23'-1-011-1-----------1--1   ->     1 8'00000010
     96:     3 23'-1-1-1-------------1--1   ->     1 8'00000010
     97:     3 23'-0-0---0---0-------1--1   ->     3 8'00000010
     98:     3 23'-0-00-01---0-------1--1   ->     3 8'00000010
     99:     3 23'-0-00111---0-------1--1   ->     3 8'00000010
    100:     3 23'-0-011-1---0-------1--1   ->     3 8'00000010
    101:     3 23'-0-1-1-----0-------1--1   ->     3 8'00000010
    102:     3 23'---0---0---------0-0--1   ->     4 8'00000010
    103:     3 23'---00-01---------0-0--1   ->     4 8'00000010
    104:     3 23'---00111---------0-0--1   ->     4 8'00000010
    105:     3 23'---011-1---------0-0--1   ->     4 8'00000010
    106:     3 23'---1-1-----------0-0--1   ->     4 8'00000010
    107:     3 23'---0---0---------1----1   ->     5 8'00000010
    108:     3 23'---00-01---------1----1   ->     5 8'00000010
    109:     3 23'---00111---------1----1   ->     5 8'00000010
    110:     3 23'---011-1---------1----1   ->     5 8'00000010
    111:     3 23'---1-1-----------1----1   ->     5 8'00000010
    112:     4 23'---00011---------------   ->     0 8'10000000
    113:     4 23'---010-1---------------   ->     0 8'10000000
    114:     4 23'---1-0-----------------   ->     0 8'10000000
    115:     4 23'---0---0--------------0   ->     1 8'10000000
    116:     4 23'---00-01--------------0   ->     1 8'10000000
    117:     4 23'---00111--------------0   ->     1 8'10000000
    118:     4 23'---011-1--------------0   ->     1 8'10000000
    119:     4 23'---1-1----------------0   ->     1 8'10000000
    120:     4 23'---0---0-------01----11   ->     1 8'10000000
    121:     4 23'---00-01-------01----11   ->     1 8'10000000
    122:     4 23'---00111-------01----11   ->     1 8'10000000
    123:     4 23'---011-1-------01----11   ->     1 8'10000000
    124:     4 23'---1-1---------01----11   ->     1 8'10000000
    125:     4 23'---0---0-------00-----1   ->     1 8'10000000
    126:     4 23'---00-01-------00-----1   ->     1 8'10000000
    127:     4 23'---00111-------00-----1   ->     1 8'10000000
    128:     4 23'---011-1-------00-----1   ->     1 8'10000000
    129:     4 23'---1-1---------00-----1   ->     1 8'10000000
    130:     4 23'---0---0-------01----01   ->     4 8'10000000
    131:     4 23'---00-01-------01----01   ->     4 8'10000000
    132:     4 23'---00111-------01----01   ->     4 8'10000000
    133:     4 23'---011-1-------01----01   ->     4 8'10000000
    134:     4 23'---1-1---------01----01   ->     4 8'10000000
    135:     4 23'---0---0-------1------1   ->     4 8'10000000
    136:     4 23'---00-01-------1------1   ->     4 8'10000000
    137:     4 23'---00111-------1------1   ->     4 8'10000000
    138:     4 23'---011-1-------1------1   ->     4 8'10000000
    139:     4 23'---1-1---------1------1   ->     4 8'10000000
    140:     5 23'---00011---------------   ->     0 8'00010000
    141:     5 23'---010-1---------------   ->     0 8'00010000
    142:     5 23'---1-0-----------------   ->     0 8'00010000
    143:     5 23'---0---0--------------0   ->     1 8'00010000
    144:     5 23'---00-01--------------0   ->     1 8'00010000
    145:     5 23'---00111--------------0   ->     1 8'00010000
    146:     5 23'---011-1--------------0   ->     1 8'00010000
    147:     5 23'---1-1----------------0   ->     1 8'00010000
    148:     5 23'---0---011------------1   ->     1 8'00010000
    149:     5 23'---00-0111------------1   ->     1 8'00010000
    150:     5 23'---0011111------------1   ->     1 8'00010000
    151:     5 23'---011-111------------1   ->     1 8'00010000
    152:     5 23'---1-1--11------------1   ->     1 8'00010000
    153:     5 23'---0---0-0------------1   ->     5 8'00010000
    154:     5 23'---00-01-0------------1   ->     5 8'00010000
    155:     5 23'---00111-0------------1   ->     5 8'00010000
    156:     5 23'---011-1-0------------1   ->     5 8'00010000
    157:     5 23'---1-1---0------------1   ->     5 8'00010000
    158:     5 23'---0---001------------1   ->     5 8'00010000
    159:     5 23'---00-0101------------1   ->     5 8'00010000
    160:     5 23'---0011101------------1   ->     5 8'00010000
    161:     5 23'---011-101------------1   ->     5 8'00010000
    162:     5 23'---1-1--01------------1   ->     5 8'00010000
    163:     6 23'---00011---------------   ->     0 8'00000100
    164:     6 23'---010-1---------------   ->     0 8'00000100
    165:     6 23'---1-0-----------------   ->     0 8'00000100
    166:     6 23'---0---0--------------0   ->     1 8'00000100
    167:     6 23'---00-01--------------0   ->     1 8'00000100
    168:     6 23'---00111--------------0   ->     1 8'00000100
    169:     6 23'---011-1--------------0   ->     1 8'00000100
    170:     6 23'---1-1----------------0   ->     1 8'00000100
    171:     6 23'---0---011------------1   ->     1 8'00000100
    172:     6 23'---00-0111------------1   ->     1 8'00000100
    173:     6 23'---0011111------------1   ->     1 8'00000100
    174:     6 23'---011-111------------1   ->     1 8'00000100
    175:     6 23'---1-1--11------------1   ->     1 8'00000100
    176:     6 23'---0---0-0------------1   ->     6 8'00000100
    177:     6 23'---00-01-0------------1   ->     6 8'00000100
    178:     6 23'---00111-0------------1   ->     6 8'00000100
    179:     6 23'---011-1-0------------1   ->     6 8'00000100
    180:     6 23'---1-1---0------------1   ->     6 8'00000100
    181:     6 23'---0---001------------1   ->     6 8'00000100
    182:     6 23'---00-0101------------1   ->     6 8'00000100
    183:     6 23'---0011101------------1   ->     6 8'00000100
    184:     6 23'---011-101------------1   ->     6 8'00000100
    185:     6 23'---1-1--01------------1   ->     6 8'00000100

-------------------------------------

FSM `$fsm$\mem_wordsize$3697' from module `picorv32a':
-------------------------------------

  Information on FSM $fsm$\mem_wordsize$3697 (\mem_wordsize):

  Number of input signals:   13
  Number of output signals:   3
  Number of state bits:       3

  Input signals:
    0: \resetn
    1: \mem_do_rdata
    2: \mem_do_wdata
    3: \instr_lw
    4: \instr_sb
    5: \instr_sh
    6: \instr_sw
    7: $eq$/openlane/designs/current/src/picorv32a.v:1272$470_Y
    8: $logic_or$/openlane/designs/current/src/picorv32a.v:1816$629_Y
    9: $logic_or$/openlane/designs/current/src/picorv32a.v:1845$637_Y
   10: $logic_or$/openlane/designs/current/src/picorv32a.v:1846$638_Y
   11: $procmux$1012_CMP
   12: $procmux$1006_CMP

  Output signals:
    0: $eq$/openlane/designs/current/src/picorv32a.v:1875$645_Y
    1: $eq$/openlane/designs/current/src/picorv32a.v:1882$652_Y
    2: $procmux$3438_CMP

  State encoding:
    0:      3'--1
    1:      3'-1-
    2:      3'1--

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 13'------------0   ->     0 3'001
      1:     0 13'-1001----0-01   ->     0 3'001
      2:     0 13'-1--1----1-01   ->     0 3'001
      3:     0 13'-1--1------11   ->     0 3'001
      4:     0 13'1---1-000-0-1   ->     0 3'001
      5:     0 13'1---1-1---0-1   ->     0 3'001
      6:     0 13'1---1-----1-1   ->     0 3'001
      7:     0 13'00---0------1   ->     0 3'001
      8:     0 13'-----1------1   ->     0 3'001
      9:     0 13'-1--0-------1   ->     0 3'001
     10:     0 13'1---0-------1   ->     0 3'001
     11:     0 13'-1-11------01   ->     1 3'001
     12:     0 13'1---1---1-0-1   ->     1 3'001
     13:     0 13'-11-1------01   ->     2 3'001
     14:     0 13'1---1--1--0-1   ->     2 3'001
     15:     1 13'-1--1----1-01   ->     0 3'100
     16:     1 13'1---1-1---0-1   ->     0 3'100
     17:     1 13'-----1------1   ->     0 3'100
     18:     1 13'------------0   ->     1 3'100
     19:     1 13'-1001----0-01   ->     1 3'100
     20:     1 13'-1-11------01   ->     1 3'100
     21:     1 13'-1--1------11   ->     1 3'100
     22:     1 13'1---1-000-0-1   ->     1 3'100
     23:     1 13'1---1---1-0-1   ->     1 3'100
     24:     1 13'1---1-----1-1   ->     1 3'100
     25:     1 13'00---0------1   ->     1 3'100
     26:     1 13'-1--0-------1   ->     1 3'100
     27:     1 13'1---0-------1   ->     1 3'100
     28:     1 13'-11-1------01   ->     2 3'100
     29:     1 13'1---1--1--0-1   ->     2 3'100
     30:     2 13'-1--1----1-01   ->     0 3'010
     31:     2 13'1---1-1---0-1   ->     0 3'010
     32:     2 13'-----1------1   ->     0 3'010
     33:     2 13'-1-11------01   ->     1 3'010
     34:     2 13'1---1---1-0-1   ->     1 3'010
     35:     2 13'------------0   ->     2 3'010
     36:     2 13'-1001----0-01   ->     2 3'010
     37:     2 13'-11-1------01   ->     2 3'010
     38:     2 13'-1--1------11   ->     2 3'010
     39:     2 13'1---1-000-0-1   ->     2 3'010
     40:     2 13'1---1--1--0-1   ->     2 3'010
     41:     2 13'1---1-----1-1   ->     2 3'010
     42:     2 13'00---0------1   ->     2 3'010
     43:     2 13'-1--0-------1   ->     2 3'010
     44:     2 13'1---0-------1   ->     2 3'010

-------------------------------------

5.8.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\cpu_state$3687' from module `\picorv32a'.
Mapping FSM `$fsm$\mem_wordsize$3697' from module `\picorv32a'.

5.9. Executing OPT pass (performing simple optimizations).

5.9.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.
<suppressed ~5 debug messages>

5.9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
<suppressed ~93 debug messages>
Removed a total of 31 cells.

5.9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32a..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/7 on $pmux $procmux$1437.
    dead port 1/2 on $mux $procmux$1440.
    dead port 2/2 on $mux $procmux$1440.
    dead port 1/2 on $mux $procmux$1488.
    dead port 2/2 on $mux $procmux$1488.
    dead port 1/2 on $mux $procmux$1491.
    dead port 2/2 on $mux $procmux$1491.
    dead port 1/3 on $pmux $procmux$1493.
    dead port 1/2 on $mux $procmux$1911.
    dead port 2/2 on $mux $procmux$1911.
    dead port 1/6 on $pmux $procmux$1913.
    dead port 3/5 on $pmux $procmux$2122.
    dead port 1/4 on $pmux $procmux$2132.
    dead port 2/4 on $pmux $procmux$2132.
    dead port 3/4 on $pmux $procmux$2132.
    dead port 4/4 on $pmux $procmux$2132.
    dead port 1/4 on $pmux $procmux$2138.
    dead port 2/4 on $pmux $procmux$2138.
    dead port 3/4 on $pmux $procmux$2138.
    dead port 4/4 on $pmux $procmux$2138.
    dead port 1/2 on $mux $procmux$2142.
    dead port 2/2 on $mux $procmux$2142.
    dead port 1/2 on $mux $procmux$2145.
    dead port 2/2 on $mux $procmux$2145.
Removed 24 multiplexer ports.
<suppressed ~162 debug messages>

5.9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32a.
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$3677: { \cpu_state [6:4] \cpu_state [2] \cpu_state [0] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$3675: { \cpu_state [6:2] \cpu_state [0] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$3655: { \cpu_state [6:5] \cpu_state [3:0] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$3653: \cpu_state [5:0]
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$3651: { \cpu_state [6] \cpu_state [4:0] }
  Optimizing cells in module \picorv32a.
Performed a total of 5 changes.

5.9.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
Removed a total of 0 cells.

5.9.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$3645 ($dff) from module picorv32a (D = \mem_rdata, Q = \mem_rdata_q).
Adding EN signal on $procdff$3634 ($dff) from module picorv32a (D = $0\mem_state[1:0], Q = \mem_state).
Adding EN signal on $procdff$3633 ($dff) from module picorv32a (D = $procmux$3166_Y, Q = \mem_wstrb).
Adding EN signal on $procdff$3632 ($dff) from module picorv32a (D = \mem_la_wdata, Q = \mem_wdata).
Adding EN signal on $procdff$3631 ($dff) from module picorv32a (D = \mem_la_addr, Q = \mem_addr).
Adding EN signal on $procdff$3630 ($dff) from module picorv32a (D = $procmux$3186_Y, Q = \mem_instr).
Adding SRST signal on $auto$ff.cc:262:slice$4383 ($dffe) from module picorv32a (D = $procmux$3184_Y, Q = \mem_instr, rval = 1'0).
Adding EN signal on $procdff$3629 ($dff) from module picorv32a (D = $0\mem_valid[0:0], Q = \mem_valid).
Adding SRST signal on $procdff$3613 ($dff) from module picorv32a (D = $reduce_or$/openlane/designs/current/src/picorv32a.v:826$175_Y, Q = \is_compare, rval = 1'0).
Adding EN signal on $procdff$3612 ($dff) from module picorv32a (D = $eq$/openlane/designs/current/src/picorv32a.v:840$195_Y, Q = \is_alu_reg_reg).
Adding EN signal on $procdff$3611 ($dff) from module picorv32a (D = $eq$/openlane/designs/current/src/picorv32a.v:839$194_Y, Q = \is_alu_reg_imm).
Adding SRST signal on $procdff$3609 ($dff) from module picorv32a (D = $procmux$2547_Y, Q = \is_beq_bne_blt_bge_bltu_bgeu, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4409 ($sdff) from module picorv32a (D = $eq$/openlane/designs/current/src/picorv32a.v:836$191_Y, Q = \is_beq_bne_blt_bge_bltu_bgeu).
Adding SRST signal on $procdff$3606 ($dff) from module picorv32a (D = $reduce_or$/openlane/designs/current/src/picorv32a.v:822$171_Y, Q = \is_lui_auipc_jal_jalr_addi_add_sub, rval = 1'0).
Adding EN signal on $procdff$3604 ($dff) from module picorv32a (D = $eq$/openlane/designs/current/src/picorv32a.v:838$193_Y, Q = \is_sb_sh_sw).
Adding EN signal on $procdff$3603 ($dff) from module picorv32a (D = $logic_or$/openlane/designs/current/src/picorv32a.v:1062$413_Y, Q = \is_jalr_addi_slti_sltiu_xori_ori_andi).
Adding EN signal on $procdff$3602 ($dff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:1056$404_Y, Q = \is_slli_srli_srai).
Adding EN signal on $procdff$3601 ($dff) from module picorv32a (D = $eq$/openlane/designs/current/src/picorv32a.v:837$192_Y, Q = \is_lb_lh_lw_lbu_lhu).
Adding EN signal on $procdff$3599 ($dff) from module picorv32a (D = 1'0, Q = \compressed_instr).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4416 ($dffe) from module picorv32a.
Adding EN signal on $procdff$3598 ($dff) from module picorv32a (D = { \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [19:12] \mem_rdata_latched [20] \mem_rdata_latched [30:21] 1'0 }, Q = \decoded_imm_uj).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4417 ($dffe) from module picorv32a.
Adding EN signal on $procdff$3597 ($dff) from module picorv32a (D = $procmux$2593_Y, Q = \decoded_imm).
Adding EN signal on $procdff$3596 ($dff) from module picorv32a (D = \mem_rdata_latched [24:20], Q = \decoded_rs2).
Adding EN signal on $procdff$3595 ($dff) from module picorv32a (D = { $procmux$2348_Y $procmux$2432_Y }, Q = \decoded_rs1).
Adding SRST signal on $auto$ff.cc:262:slice$4421 ($dffe) from module picorv32a (D = \mem_rdata_latched [18:15], Q = \decoded_rs1 [3:0], rval = 4'0000).
Adding SRST signal on $auto$ff.cc:262:slice$4421 ($dffe) from module picorv32a (D = \mem_rdata_latched [19], Q = \decoded_rs1 [4], rval = 1'1).
Adding EN signal on $procdff$3594 ($dff) from module picorv32a (D = \mem_rdata_latched [11:7], Q = \decoded_rd).
Adding EN signal on $procdff$3593 ($dff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:1054$391_Y, Q = \instr_timer).
Adding EN signal on $procdff$3592 ($dff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:834$189_Y, Q = \instr_waitirq).
Adding EN signal on $procdff$3591 ($dff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:1053$387_Y, Q = \instr_maskirq).
Adding EN signal on $procdff$3590 ($dff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:833$185_Y, Q = \instr_retirq).
Adding EN signal on $procdff$3589 ($dff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:1052$382_Y, Q = \instr_setq).
Adding EN signal on $procdff$3588 ($dff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:1051$377_Y, Q = \instr_getq).
Adding EN signal on $procdff$3587 ($dff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:1048$371_Y, Q = \instr_ecall_ebreak).
Adding EN signal on $procdff$3586 ($dff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:1046$364_Y, Q = \instr_rdinstrh).
Adding EN signal on $procdff$3585 ($dff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:1045$360_Y, Q = \instr_rdinstr).
Adding EN signal on $procdff$3584 ($dff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:1043$356_Y, Q = \instr_rdcycleh).
Adding EN signal on $procdff$3583 ($dff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:1041$348_Y, Q = \instr_rdcycle).
Adding SRST signal on $procdff$3582 ($dff) from module picorv32a (D = $procmux$2703_Y, Q = \instr_and, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4438 ($sdff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:1039$340_Y, Q = \instr_and).
Adding SRST signal on $procdff$3581 ($dff) from module picorv32a (D = $procmux$2707_Y, Q = \instr_or, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4440 ($sdff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:1038$336_Y, Q = \instr_or).
Adding SRST signal on $procdff$3580 ($dff) from module picorv32a (D = $procmux$2711_Y, Q = \instr_sra, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4442 ($sdff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:1037$332_Y, Q = \instr_sra).
Adding SRST signal on $procdff$3579 ($dff) from module picorv32a (D = $procmux$2715_Y, Q = \instr_srl, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4444 ($sdff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:1036$328_Y, Q = \instr_srl).
Adding SRST signal on $procdff$3578 ($dff) from module picorv32a (D = $procmux$2719_Y, Q = \instr_xor, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4446 ($sdff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:1035$324_Y, Q = \instr_xor).
Adding SRST signal on $procdff$3577 ($dff) from module picorv32a (D = $procmux$2723_Y, Q = \instr_sltu, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4448 ($sdff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:1034$320_Y, Q = \instr_sltu).
Adding SRST signal on $procdff$3576 ($dff) from module picorv32a (D = $procmux$2727_Y, Q = \instr_slt, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4450 ($sdff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:1033$316_Y, Q = \instr_slt).
Adding SRST signal on $procdff$3575 ($dff) from module picorv32a (D = $procmux$2731_Y, Q = \instr_sll, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4452 ($sdff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:1032$312_Y, Q = \instr_sll).
Adding SRST signal on $procdff$3574 ($dff) from module picorv32a (D = $procmux$2735_Y, Q = \instr_sub, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4454 ($sdff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:1031$308_Y, Q = \instr_sub).
Adding SRST signal on $procdff$3573 ($dff) from module picorv32a (D = $procmux$2739_Y, Q = \instr_add, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4456 ($sdff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:1030$304_Y, Q = \instr_add).
Adding EN signal on $procdff$3572 ($dff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:1028$300_Y, Q = \instr_srai).
Adding EN signal on $procdff$3571 ($dff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:1027$296_Y, Q = \instr_srli).
Adding EN signal on $procdff$3570 ($dff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:1026$292_Y, Q = \instr_slli).
Adding SRST signal on $procdff$3569 ($dff) from module picorv32a (D = $procmux$2749_Y, Q = \instr_andi, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4461 ($sdff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:1024$288_Y, Q = \instr_andi).
Adding SRST signal on $procdff$3568 ($dff) from module picorv32a (D = $procmux$2753_Y, Q = \instr_ori, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4463 ($sdff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:1023$286_Y, Q = \instr_ori).
Adding SRST signal on $procdff$3567 ($dff) from module picorv32a (D = $procmux$2757_Y, Q = \instr_xori, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4465 ($sdff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:1022$284_Y, Q = \instr_xori).
Adding SRST signal on $procdff$3566 ($dff) from module picorv32a (D = $procmux$2761_Y, Q = \instr_sltiu, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4467 ($sdff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:1021$282_Y, Q = \instr_sltiu).
Adding SRST signal on $procdff$3565 ($dff) from module picorv32a (D = $procmux$2765_Y, Q = \instr_slti, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4469 ($sdff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:1020$280_Y, Q = \instr_slti).
Adding SRST signal on $procdff$3564 ($dff) from module picorv32a (D = $procmux$2769_Y, Q = \instr_addi, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4471 ($sdff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:1019$278_Y, Q = \instr_addi).
Adding EN signal on $procdff$3563 ($dff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:1017$276_Y, Q = \instr_sw).
Adding EN signal on $procdff$3562 ($dff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:1016$274_Y, Q = \instr_sh).
Adding EN signal on $procdff$3561 ($dff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:1015$272_Y, Q = \instr_sb).
Adding EN signal on $procdff$3560 ($dff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:1013$270_Y, Q = \instr_lhu).
Adding EN signal on $procdff$3559 ($dff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:1012$268_Y, Q = \instr_lbu).
Adding EN signal on $procdff$3558 ($dff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:1011$266_Y, Q = \instr_lw).
Adding EN signal on $procdff$3557 ($dff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:1010$264_Y, Q = \instr_lh).
Adding EN signal on $procdff$3556 ($dff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:1009$262_Y, Q = \instr_lb).
Adding SRST signal on $procdff$3555 ($dff) from module picorv32a (D = $procmux$2789_Y, Q = \instr_bgeu, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4481 ($sdff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:1007$260_Y, Q = \instr_bgeu).
Adding SRST signal on $procdff$3554 ($dff) from module picorv32a (D = $procmux$2793_Y, Q = \instr_bltu, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4483 ($sdff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:1006$258_Y, Q = \instr_bltu).
Adding SRST signal on $procdff$3553 ($dff) from module picorv32a (D = $procmux$2797_Y, Q = \instr_bge, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4485 ($sdff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:1005$256_Y, Q = \instr_bge).
Adding SRST signal on $procdff$3552 ($dff) from module picorv32a (D = $procmux$2801_Y, Q = \instr_blt, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4487 ($sdff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:1004$254_Y, Q = \instr_blt).
Adding SRST signal on $procdff$3551 ($dff) from module picorv32a (D = $procmux$2805_Y, Q = \instr_bne, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4489 ($sdff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:1003$252_Y, Q = \instr_bne).
Adding SRST signal on $procdff$3550 ($dff) from module picorv32a (D = $procmux$2809_Y, Q = \instr_beq, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4491 ($sdff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:1002$250_Y, Q = \instr_beq).
Adding EN signal on $procdff$3549 ($dff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:832$182_Y, Q = \instr_jalr).
Adding EN signal on $procdff$3548 ($dff) from module picorv32a (D = $eq$/openlane/designs/current/src/picorv32a.v:831$179_Y, Q = \instr_jal).
Adding EN signal on $procdff$3547 ($dff) from module picorv32a (D = $eq$/openlane/designs/current/src/picorv32a.v:830$178_Y, Q = \instr_auipc).
Adding EN signal on $procdff$3546 ($dff) from module picorv32a (D = $eq$/openlane/designs/current/src/picorv32a.v:829$177_Y, Q = \instr_lui).
Adding EN signal on $procdff$3545 ($dff) from module picorv32a (D = \mem_rdata_q, Q = \pcpi_insn).
Adding SRST signal on $procdff$3539 ($dff) from module picorv32a (D = $procmux$1407_Y, Q = \alu_wait, rval = 1'0).
Adding SRST signal on $procdff$3536 ($dff) from module picorv32a (D = $procmux$1326_Y, Q = \do_waitirq, rval = 1'0).
Adding SRST signal on $procdff$3534 ($dff) from module picorv32a (D = $logic_not$/openlane/designs/current/src/picorv32a.v:1382$511_Y, Q = \pcpi_timeout, rval = 1'0).
Adding SRST signal on $procdff$3533 ($dff) from module picorv32a (D = $procmux$1518_Y, Q = \pcpi_timeout_counter, rval = 4'1111).
Adding EN signal on $auto$ff.cc:262:slice$4509 ($sdff) from module picorv32a (D = $sub$/openlane/designs/current/src/picorv32a.v:1379$510_Y [3:0], Q = \pcpi_timeout_counter).
Adding EN signal on $procdff$3531 ($dff) from module picorv32a (D = $procmux$1533_Y, Q = \latched_rd).
Adding SRST signal on $procdff$3530 ($dff) from module picorv32a (D = $procmux$1559_Y, Q = \latched_is_lb, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4522 ($sdff) from module picorv32a (D = $procmux$1559_Y, Q = \latched_is_lb).
Adding SRST signal on $procdff$3529 ($dff) from module picorv32a (D = $procmux$1572_Y, Q = \latched_is_lh, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4532 ($sdff) from module picorv32a (D = $procmux$1572_Y, Q = \latched_is_lh).
Adding SRST signal on $procdff$3528 ($dff) from module picorv32a (D = $procmux$1585_Y, Q = \latched_is_lu, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4542 ($sdff) from module picorv32a (D = $procmux$1585_Y, Q = \latched_is_lu).
Adding EN signal on $procdff$3526 ($dff) from module picorv32a (D = \compressed_instr, Q = \latched_compr).
Adding SRST signal on $procdff$3525 ($dff) from module picorv32a (D = $procmux$1630_Y, Q = \latched_branch, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4557 ($sdff) from module picorv32a (D = $procmux$1630_Y, Q = \latched_branch).
Adding SRST signal on $procdff$3524 ($dff) from module picorv32a (D = $procmux$1666_Y, Q = \latched_stalu, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4567 ($sdff) from module picorv32a (D = $procmux$1666_Y, Q = \latched_stalu).
Adding SRST signal on $procdff$3523 ($dff) from module picorv32a (D = $procmux$1673_Y, Q = \latched_store, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4577 ($sdff) from module picorv32a (D = $procmux$1673_Y, Q = \latched_store).
Adding SRST signal on $procdff$3519 ($dff) from module picorv32a (D = $procmux$1727_Y, Q = \irq_state, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$4591 ($sdff) from module picorv32a (D = $ternary$/openlane/designs/current/src/picorv32a.v:1499$559_Y, Q = \irq_state).
Adding SRST signal on $procdff$3512 ($dff) from module picorv32a (D = $procmux$1340_Y, Q = \decoder_pseudo_trigger, rval = 1'0).
Adding SRST signal on $procdff$3509 ($dff) from module picorv32a (D = $procmux$1899_Y, Q = \mem_do_wdata, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$4598 ($sdff) from module picorv32a (D = 1'0, Q = \mem_do_wdata).
Adding SRST signal on $procdff$3508 ($dff) from module picorv32a (D = $procmux$1903_Y, Q = \mem_do_rdata, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$4600 ($sdff) from module picorv32a (D = 1'0, Q = \mem_do_rdata).
Adding SRST signal on $procdff$3507 ($dff) from module picorv32a (D = $procmux$1959_Y, Q = \mem_do_rinst, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$4602 ($sdff) from module picorv32a (D = $procmux$1959_Y, Q = \mem_do_rinst).
Adding SRST signal on $procdff$3506 ($dff) from module picorv32a (D = $procmux$1984_Y, Q = \mem_do_prefetch, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4618 ($sdff) from module picorv32a (D = $logic_and$/openlane/designs/current/src/picorv32a.v:1532$573_Y, Q = \mem_do_prefetch).
Adding SRST signal on $procdff$3504 ($dff) from module picorv32a (D = $procmux$2033_Y, Q = \timer, rval = 0).
Adding SRST signal on $procdff$3502 ($dff) from module picorv32a (D = $procmux$2051_Y, Q = \irq_mask, rval = 32'11111111111111111111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$4629 ($sdff) from module picorv32a (D = \cpuregs_rs1, Q = \irq_mask).
Adding SRST signal on $procdff$3501 ($dff) from module picorv32a (D = $procmux$2070_Y, Q = \irq_active, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4633 ($sdff) from module picorv32a (D = $procmux$2070_Y, Q = \irq_active).
Adding SRST signal on $procdff$3500 ($dff) from module picorv32a (D = $procmux$2095_Y, Q = \irq_delay, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4643 ($sdff) from module picorv32a (D = \irq_active, Q = \irq_delay).
Adding EN signal on $procdff$3497 ($dff) from module picorv32a (D = $procmux$2105_Y, Q = \reg_op2).
Adding EN signal on $procdff$3496 ($dff) from module picorv32a (D = $procmux$2122_Y, Q = \reg_op1).
Adding SRST signal on $procdff$3495 ($dff) from module picorv32a (D = $procmux$2185_Y, Q = \reg_next_pc, rval = 0).
Adding EN signal on $auto$ff.cc:262:slice$4669 ($sdff) from module picorv32a (D = $procmux$2183_Y, Q = \reg_next_pc).
Adding SRST signal on $procdff$3494 ($dff) from module picorv32a (D = $procmux$2197_Y, Q = \reg_pc, rval = 0).
Adding EN signal on $auto$ff.cc:262:slice$4671 ($sdff) from module picorv32a (D = $3\current_pc[31:0], Q = \reg_pc).
Adding SRST signal on $procdff$3493 ($dff) from module picorv32a (D = $procmux$2217_Y, Q = \count_instr, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$4673 ($sdff) from module picorv32a (D = $add$/openlane/designs/current/src/picorv32a.v:1523$569_Y, Q = \count_instr).
Adding SRST signal on $procdff$3492 ($dff) from module picorv32a (D = $add$/openlane/designs/current/src/picorv32a.v:1386$512_Y, Q = \count_cycle, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$3489 ($dff) from module picorv32a (D = $procmux$2236_Y, Q = \eoi, rval = 0).
Adding EN signal on $auto$ff.cc:262:slice$4682 ($sdff) from module picorv32a (D = $procmux$2236_Y, Q = \eoi).
Adding SRST signal on $procdff$3488 ($dff) from module picorv32a (D = $procmux$2261_Y, Q = \pcpi_valid, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4692 ($sdff) from module picorv32a (D = $procmux$2257_Y, Q = \pcpi_valid).
Adding SRST signal on $procdff$3487 ($dff) from module picorv32a (D = $procmux$1512_Y, Q = \trap, rval = 1'0).
Adding SRST signal on $flatten\genblk1.pcpi_mul.$procdff$3481 ($dff) from module picorv32a (D = { \genblk1.pcpi_mul.active [2:0] $flatten\genblk1.pcpi_mul.$procmux$857_Y }, Q = \genblk1.pcpi_mul.active, rval = 4'0000).
Adding EN signal on $flatten\genblk1.pcpi_mul.$procdff$3479 ($dff) from module picorv32a (D = $flatten\genblk1.pcpi_mul.$procmux$863_Y, Q = \genblk1.pcpi_mul.rs2).
Adding SRST signal on $auto$ff.cc:262:slice$4698 ($dffe) from module picorv32a (D = \reg_op2 [31], Q = \genblk1.pcpi_mul.rs2 [32], rval = 1'0).
Adding EN signal on $flatten\genblk1.pcpi_mul.$procdff$3478 ($dff) from module picorv32a (D = $flatten\genblk1.pcpi_mul.$procmux$869_Y, Q = \genblk1.pcpi_mul.rs1).
Adding SRST signal on $auto$ff.cc:262:slice$4701 ($dffe) from module picorv32a (D = \reg_op1 [31], Q = \genblk1.pcpi_mul.rs1 [32], rval = 1'0).

5.9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 192 unused cells and 230 unused wires.
<suppressed ~194 debug messages>

5.9.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.
<suppressed ~16 debug messages>

5.9.9. Rerunning OPT passes. (Maybe there is more to do..)

5.9.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32a..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~64 debug messages>

5.9.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32a.
Performed a total of 0 changes.

5.9.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
<suppressed ~90 debug messages>
Removed a total of 30 cells.

5.9.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4552 ($dffe) from module picorv32a.

5.9.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 1 unused cells and 32 unused wires.
<suppressed ~2 debug messages>

5.9.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.
<suppressed ~2 debug messages>

5.9.16. Rerunning OPT passes. (Maybe there is more to do..)

5.9.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32a..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~64 debug messages>

5.9.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32a.
Performed a total of 0 changes.

5.9.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
Removed a total of 0 cells.

5.9.20. Executing OPT_DFF pass (perform DFF optimizations).

5.9.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 0 unused cells and 2 unused wires.
<suppressed ~2 debug messages>

5.9.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.

5.9.23. Rerunning OPT passes. (Maybe there is more to do..)

5.9.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32a..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~64 debug messages>

5.9.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32a.
Performed a total of 0 changes.

5.9.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
Removed a total of 0 cells.

5.9.27. Executing OPT_DFF pass (perform DFF optimizations).

5.9.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..

5.9.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.

5.9.30. Finished OPT passes. (There is nothing left to do.)

5.10. Executing WREDUCE pass (reducing word size of cells).
Removed top 2 bits (of 8) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3872 ($eq).
Removed top 3 bits (of 4) from port A of cell picorv32a.$shl$/openlane/designs/current/src/picorv32a.v:383$99 ($shl).
Removed top 2 bits (of 5) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3884 ($eq).
Removed top 30 bits (of 32) from mux cell picorv32a.$ternary$/openlane/designs/current/src/picorv32a.v:581$158 ($mux).
Removed top 1 bits (of 7) from port B of cell picorv32a.$eq$/openlane/designs/current/src/picorv32a.v:829$177 ($eq).
Removed top 2 bits (of 7) from port B of cell picorv32a.$eq$/openlane/designs/current/src/picorv32a.v:830$178 ($eq).
Removed top 3 bits (of 7) from port B of cell picorv32a.$eq$/openlane/designs/current/src/picorv32a.v:833$183 ($eq).
Removed top 5 bits (of 7) from port B of cell picorv32a.$eq$/openlane/designs/current/src/picorv32a.v:833$184 ($eq).
Removed top 4 bits (of 7) from port B of cell picorv32a.$eq$/openlane/designs/current/src/picorv32a.v:834$188 ($eq).
Removed top 5 bits (of 7) from port B of cell picorv32a.$eq$/openlane/designs/current/src/picorv32a.v:837$192 ($eq).
Removed top 1 bits (of 7) from port B of cell picorv32a.$eq$/openlane/designs/current/src/picorv32a.v:838$193 ($eq).
Removed top 2 bits (of 7) from port B of cell picorv32a.$eq$/openlane/designs/current/src/picorv32a.v:839$194 ($eq).
Removed top 1 bits (of 7) from port B of cell picorv32a.$eq$/openlane/designs/current/src/picorv32a.v:840$195 ($eq).
Removed top 3 bits (of 8) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3848 ($eq).
Removed top 4 bits (of 5) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3864 ($eq).
Removed top 2 bits (of 3) from port B of cell picorv32a.$eq$/openlane/designs/current/src/picorv32a.v:1003$251 ($eq).
Removed top 1 bits (of 3) from port B of cell picorv32a.$eq$/openlane/designs/current/src/picorv32a.v:1011$265 ($eq).
Removed top 2 bits (of 10) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3792 ($eq).
Removed top 1 bits (of 9) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3796 ($eq).
Removed top 1 bits (of 3) from port B of cell picorv32a.$eq$/openlane/designs/current/src/picorv32a.v:1021$281 ($eq).
Removed top 3 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3804 ($eq).
Removed top 1 bits (of 7) from port B of cell picorv32a.$eq$/openlane/designs/current/src/picorv32a.v:1028$299 ($eq).
Removed top 1 bits (of 2) from port B of cell picorv32a.$auto$opt_dff.cc:198:make_patterns_logic$4529 ($ne).
Removed top 1 bits (of 8) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3856 ($eq).
Removed top 4 bits (of 9) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3808 ($eq).
Removed top 3 bits (of 10) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3812 ($eq).
Removed top 2 bits (of 9) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3816 ($eq).
Removed top 1 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3820 ($eq).
Removed top 3 bits (of 7) from port B of cell picorv32a.$eq$/openlane/designs/current/src/picorv32a.v:1051$375 ($eq).
Removed top 6 bits (of 7) from port B of cell picorv32a.$eq$/openlane/designs/current/src/picorv32a.v:1052$381 ($eq).
Removed top 5 bits (of 7) from port B of cell picorv32a.$eq$/openlane/designs/current/src/picorv32a.v:1053$386 ($eq).
Removed top 4 bits (of 7) from port B of cell picorv32a.$eq$/openlane/designs/current/src/picorv32a.v:1054$390 ($eq).
Removed top 3 bits (of 4) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4344 ($eq).
Removed top 5 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3844 ($eq).
Removed top 29 bits (of 32) from port B of cell picorv32a.$add$/openlane/designs/current/src/picorv32a.v:1276$472 ($add).
Removed top 31 bits (of 32) from port B of cell picorv32a.$sub$/openlane/designs/current/src/picorv32a.v:1379$510 ($sub).
Removed top 28 bits (of 32) from port Y of cell picorv32a.$sub$/openlane/designs/current/src/picorv32a.v:1379$510 ($sub).
Removed top 31 bits (of 32) from port B of cell picorv32a.$add$/openlane/designs/current/src/picorv32a.v:1386$512 ($add).
Removed top 31 bits (of 32) from port B of cell picorv32a.$sub$/openlane/designs/current/src/picorv32a.v:1396$517 ($sub).
Removed top 1 bits (of 2) from port B of cell picorv32a.$auto$opt_dff.cc:198:make_patterns_logic$4399 ($ne).
Removed top 3 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3888 ($eq).
Removed top 1 bits (of 2) from port B of cell picorv32a.$eq$/openlane/designs/current/src/picorv32a.v:1500$557 ($eq).
Removed top 27 bits (of 32) from port A of cell picorv32a.$or$/openlane/designs/current/src/picorv32a.v:1503$560 ($or).
Removed top 27 bits (of 32) from port Y of cell picorv32a.$or$/openlane/designs/current/src/picorv32a.v:1503$560 ($or).
Removed top 29 bits (of 32) from port B of cell picorv32a.$add$/openlane/designs/current/src/picorv32a.v:1511$566 ($add).
Removed top 31 bits (of 32) from port B of cell picorv32a.$add$/openlane/designs/current/src/picorv32a.v:1523$569 ($add).
Removed top 27 bits (of 32) from port B of cell picorv32a.$or$/openlane/designs/current/src/picorv32a.v:1622$581 ($or).
Removed top 27 bits (of 32) from port Y of cell picorv32a.$or$/openlane/designs/current/src/picorv32a.v:1622$581 ($or).
Removed top 4 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3707 ($eq).
Removed top 4 bits (of 9) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3711 ($eq).
Removed top 1 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3876 ($eq).
Removed top 3 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3868 ($eq).
Removed top 3 bits (of 9) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3788 ($eq).
Removed top 1 bits (of 33) from port Y of cell picorv32a.$sshr$/openlane/designs/current/src/picorv32a.v:1195$684 ($sshr).
Removed top 3 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4081 ($eq).
Removed top 2 bits (of 4) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4077 ($eq).
Removed top 1 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4089 ($eq).
Removed top 2 bits (of 8) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3892 ($eq).
Removed top 2 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4085 ($eq).
Removed top 3 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3908 ($eq).
Removed top 1 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4130 ($eq).
Removed top 2 bits (of 4) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3904 ($eq).
Removed top 1 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3916 ($eq).
Removed top 1 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3896 ($eq).
Removed top 4 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3784 ($eq).
Removed top 2 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3912 ($eq).
Removed top 2 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4126 ($eq).
Removed top 2 bits (of 5) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3924 ($eq).
Removed cell picorv32a.$procmux$1198 ($mux).
Removed top 2 bits (of 8) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3936 ($eq).
Removed top 3 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4122 ($eq).
Removed top 3 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3930 ($eq).
Removed cell picorv32a.$procmux$1201 ($mux).
Removed top 1 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3942 ($eq).
Removed top 31 bits (of 64) from port A of cell picorv32a.$flatten\genblk1.pcpi_mul.$mul$/openlane/designs/current/src/picorv32a.v:2280$771 ($mul).
Removed top 31 bits (of 64) from port B of cell picorv32a.$flatten\genblk1.pcpi_mul.$mul$/openlane/designs/current/src/picorv32a.v:2280$771 ($mul).
Removed top 4 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3975 ($eq).
Removed top 2 bits (of 4) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4118 ($eq).
Removed top 32 bits (of 64) from mux cell picorv32a.$flatten\genblk1.pcpi_mul.$ternary$/openlane/designs/current/src/picorv32a.v:2320$778 ($mux).
Removed top 3 bits (of 9) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3979 ($eq).
Removed cell picorv32a.$flatten\genblk1.pcpi_mul.$procmux$863 ($mux).
Removed cell picorv32a.$flatten\genblk1.pcpi_mul.$procmux$869 ($mux).
Removed cell picorv32a.$procmux$1433 ($mux).
Removed cell picorv32a.$procmux$1435 ($mux).
Removed top 2 bits (of 10) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3983 ($eq).
Removed cell picorv32a.$procmux$1448 ($mux).
Removed cell picorv32a.$procmux$1450 ($mux).
Removed top 1 bits (of 3) from port B of cell picorv32a.$flatten\genblk1.pcpi_mul.$procmux$893_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell picorv32a.$flatten\genblk1.pcpi_mul.$procmux$900_CMP0 ($eq).
Removed cell picorv32a.$procmux$1473 ($mux).
Removed cell picorv32a.$procmux$1475 ($mux).
Removed cell picorv32a.$procmux$1478 ($mux).
Removed cell picorv32a.$procmux$1482 ($mux).
Removed top 2 bits (of 4) from port B of cell picorv32a.$auto$opt_dff.cc:198:make_patterns_logic$4363 ($ne).
Removed top 1 bits (of 9) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3987 ($eq).
Removed cell picorv32a.$procmux$1528 ($mux).
Removed cell picorv32a.$procmux$1531 ($mux).
Removed cell picorv32a.$procmux$1542 ($mux).
Removed cell picorv32a.$procmux$1555 ($mux).
Removed cell picorv32a.$procmux$1557 ($mux).
Removed cell picorv32a.$procmux$1568 ($mux).
Removed cell picorv32a.$procmux$1570 ($mux).
Removed top 4 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3996 ($eq).
Removed cell picorv32a.$procmux$1581 ($mux).
Removed cell picorv32a.$procmux$1583 ($mux).
Removed top 2 bits (of 3) from port B of cell picorv32a.$flatten\genblk1.pcpi_mul.$procmux$908_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4000 ($eq).
Removed cell picorv32a.$procmux$1628 ($mux).
Removed cell picorv32a.$procmux$1638 ($mux).
Removed cell picorv32a.$procmux$1661 ($mux).
Removed cell picorv32a.$procmux$1664 ($mux).
Removed top 3 bits (of 9) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4004 ($eq).
Removed cell picorv32a.$procmux$1680 ($mux).
Removed top 2 bits (of 8) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4008 ($eq).
Removed top 1 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4231 ($eq).
Removed cell picorv32a.$procmux$1687 ($mux).
Removed cell picorv32a.$procmux$1689 ($mux).
Removed cell picorv32a.$procmux$1696 ($mux).
Removed top 1 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4012 ($eq).
Removed top 2 bits (of 8) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4227 ($eq).
Removed top 3 bits (of 10) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3715 ($eq).
Removed top 5 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4016 ($eq).
Removed top 2 bits (of 9) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3719 ($eq).
Removed top 1 bits (of 8) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3776 ($eq).
Removed top 3 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4223 ($eq).
Removed top 1 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3723 ($eq).
Removed top 2 bits (of 9) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3772 ($eq).
Removed top 5 bits (of 8) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4020 ($eq).
Removed top 2 bits (of 3) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3727 ($eq).
Removed top 3 bits (of 8) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3768 ($eq).
Removed top 3 bits (of 5) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4219 ($eq).
Removed top 3 bits (of 5) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3731 ($eq).
Removed top 3 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3764 ($eq).
Removed top 2 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3735 ($eq).
Removed top 1 bits (of 5) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3760 ($eq).
Removed top 2 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3758 ($eq).
Removed cell picorv32a.$procmux$1916 ($mux).
Removed top 4 bits (of 9) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4024 ($eq).
Removed cell picorv32a.$procmux$1923 ($pmux).
Removed cell picorv32a.$procmux$1934 ($mux).
Removed top 3 bits (of 8) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4028 ($eq).
Removed cell picorv32a.$procmux$1957 ($mux).
Removed top 3 bits (of 5) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3756 ($eq).
Removed top 1 bits (of 5) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3739 ($eq).
Removed top 1 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4211 ($eq).
Removed top 2 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4032 ($eq).
Removed top 1 bits (of 4) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3749 ($eq).
Removed cell picorv32a.$procmux$2068 ($mux).
Removed top 2 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4207 ($eq).
Removed cell picorv32a.$procmux$2074 ($mux).
Removed top 3 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4037 ($eq).
Removed top 3 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4203 ($eq).
Removed cell picorv32a.$procmux$2118 ($mux).
Removed cell picorv32a.$procmux$2120 ($mux).
Removed top 3 bits (of 8) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4041 ($eq).
Removed cell picorv32a.$procmux$2126 ($mux).
Removed cell picorv32a.$procmux$2128 ($mux).
Removed top 3 bits (of 4) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4199 ($eq).
Removed top 2 bits (of 9) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4045 ($eq).
Removed cell picorv32a.$procmux$2234 ($mux).
Removed cell picorv32a.$procmux$2239 ($mux).
Removed top 1 bits (of 8) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4049 ($eq).
Removed cell picorv32a.$procmux$2270 ($mux).
Removed cell picorv32a.$procmux$2273 ($mux).
Removed cell picorv32a.$procmux$2294 ($mux).
Removed top 1 bits (of 7) from port B of cell picorv32a.$flatten\genblk1.pcpi_mul.$eq$/openlane/designs/current/src/picorv32a.v:2254$762 ($eq).
Removed top 6 bits (of 7) from port B of cell picorv32a.$flatten\genblk1.pcpi_mul.$eq$/openlane/designs/current/src/picorv32a.v:2254$764 ($eq).
Removed top 1 bits (of 3) from port B of cell picorv32a.$auto$opt_dff.cc:198:make_patterns_logic$4582 ($ne).
Removed top 1 bits (of 2) from port B of cell picorv32a.$auto$opt_dff.cc:198:make_patterns_logic$4588 ($ne).
Removed top 1 bits (of 5) from port B of cell picorv32a.$auto$opt_dff.cc:198:make_patterns_logic$4607 ($ne).
Removed top 2 bits (of 5) from port B of cell picorv32a.$auto$opt_dff.cc:198:make_patterns_logic$4609 ($ne).
Removed top 1 bits (of 4) from port B of cell picorv32a.$auto$opt_dff.cc:198:make_patterns_logic$4611 ($ne).
Removed top 5 bits (of 6) from port B of cell picorv32a.$auto$opt_dff.cc:198:make_patterns_logic$4613 ($ne).
Removed top 2 bits (of 4) from port B of cell picorv32a.$auto$opt_dff.cc:198:make_patterns_logic$4615 ($ne).
Removed cell picorv32a.$procmux$3136 ($mux).
Removed cell picorv32a.$procmux$3140 ($mux).
Removed top 2 bits (of 9) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3852 ($eq).
Removed cell picorv32a.$procmux$3146 ($mux).
Removed top 1 bits (of 2) from port B of cell picorv32a.$procmux$3148_CMP0 ($eq).
Removed cell picorv32a.$procmux$3149 ($mux).
Removed top 1 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4191 ($eq).
Removed cell picorv32a.$procmux$3155 ($mux).
Removed cell picorv32a.$procmux$3184 ($mux).
Removed cell picorv32a.$procmux$3194 ($mux).
Removed top 4 bits (of 5) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4057 ($eq).
Removed top 2 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4187 ($eq).
Removed cell picorv32a.$procmux$3204 ($mux).
Removed cell picorv32a.$procmux$3206 ($mux).
Removed cell picorv32a.$procmux$3210 ($mux).
Removed top 1 bits (of 2) from port B of cell picorv32a.$auto$opt_dff.cc:198:make_patterns_logic$4664 ($ne).
Removed top 24 bits (of 32) from mux cell picorv32a.$procmux$3432 ($pmux).
Removed top 1 bits (of 2) from port B of cell picorv32a.$procmux$3435_CMP0 ($eq).
Removed top 3 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4061 ($eq).
Removed top 16 bits (of 32) from mux cell picorv32a.$procmux$3441 ($pmux).
Removed top 3 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4183 ($eq).
Removed top 2 bits (of 8) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4065 ($eq).
Removed top 2 bits (of 4) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4179 ($eq).
Removed top 1 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4069 ($eq).
Removed top 1 bits (of 4) from FF cell picorv32a.$auto$ff.cc:262:slice$4697 ($sdff).
Removed top 3 bits (of 5) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3747 ($eq).
Removed top 11 bits (of 31) from FF cell picorv32a.$auto$ff.cc:262:slice$4418 ($dffe).
Removed top 1 bits (of 3) from FF cell picorv32a.$auto$ff.cc:262:slice$4697 ($sdff).
Removed top 16 bits (of 32) from wire picorv32a.$2\mem_rdata_word[31:0].
Removed top 24 bits (of 32) from wire picorv32a.$3\mem_rdata_word[31:0].
Removed top 27 bits (of 32) from wire picorv32a.$or$/openlane/designs/current/src/picorv32a.v:1503$560_Y.
Removed top 28 bits (of 32) from wire picorv32a.$sub$/openlane/designs/current/src/picorv32a.v:1379$510_Y.

5.11. Executing PEEPOPT pass (run peephole optimizers).

5.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 0 unused cells and 61 unused wires.
<suppressed ~1 debug messages>

5.13. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module picorv32a:
  creating $macc model for $add$/openlane/designs/current/src/picorv32a.v:1190$676 ($add).
  creating $macc model for $add$/openlane/designs/current/src/picorv32a.v:1276$472 ($add).
  creating $macc model for $add$/openlane/designs/current/src/picorv32a.v:1386$512 ($add).
  creating $macc model for $add$/openlane/designs/current/src/picorv32a.v:1511$566 ($add).
  creating $macc model for $add$/openlane/designs/current/src/picorv32a.v:1523$569 ($add).
  creating $macc model for $add$/openlane/designs/current/src/picorv32a.v:1528$570 ($add).
  creating $macc model for $add$/openlane/designs/current/src/picorv32a.v:1765$606 ($add).
  creating $macc model for $add$/openlane/designs/current/src/picorv32a.v:1828$631 ($add).
  creating $macc model for $flatten\genblk1.pcpi_mul.$mul$/openlane/designs/current/src/picorv32a.v:2280$771 ($mul).
  creating $macc model for $sub$/openlane/designs/current/src/picorv32a.v:1190$675 ($sub).
  creating $macc model for $sub$/openlane/designs/current/src/picorv32a.v:1379$510 ($sub).
  creating $macc model for $sub$/openlane/designs/current/src/picorv32a.v:1396$517 ($sub).
  creating $alu model for $macc $sub$/openlane/designs/current/src/picorv32a.v:1396$517.
  creating $alu model for $macc $sub$/openlane/designs/current/src/picorv32a.v:1379$510.
  creating $alu model for $macc $sub$/openlane/designs/current/src/picorv32a.v:1190$675.
  creating $alu model for $macc $add$/openlane/designs/current/src/picorv32a.v:1828$631.
  creating $alu model for $macc $add$/openlane/designs/current/src/picorv32a.v:1765$606.
  creating $alu model for $macc $add$/openlane/designs/current/src/picorv32a.v:1528$570.
  creating $alu model for $macc $add$/openlane/designs/current/src/picorv32a.v:1523$569.
  creating $alu model for $macc $add$/openlane/designs/current/src/picorv32a.v:1511$566.
  creating $alu model for $macc $add$/openlane/designs/current/src/picorv32a.v:1386$512.
  creating $alu model for $macc $add$/openlane/designs/current/src/picorv32a.v:1276$472.
  creating $alu model for $macc $add$/openlane/designs/current/src/picorv32a.v:1190$676.
  creating $macc cell for $flatten\genblk1.pcpi_mul.$mul$/openlane/designs/current/src/picorv32a.v:2280$771: $auto$alumacc.cc:365:replace_macc$4708
  creating $alu model for $lt$/openlane/designs/current/src/picorv32a.v:1192$679 ($lt): new $alu
  creating $alu model for $lt$/openlane/designs/current/src/picorv32a.v:1193$680 ($lt): new $alu
  creating $alu model for $eq$/openlane/designs/current/src/picorv32a.v:1191$678 ($eq): merged with $lt$/openlane/designs/current/src/picorv32a.v:1193$680.
  creating $alu cell for $lt$/openlane/designs/current/src/picorv32a.v:1193$680, $eq$/openlane/designs/current/src/picorv32a.v:1191$678: $auto$alumacc.cc:485:replace_alu$4711
  creating $alu cell for $lt$/openlane/designs/current/src/picorv32a.v:1192$679: $auto$alumacc.cc:485:replace_alu$4722
  creating $alu cell for $add$/openlane/designs/current/src/picorv32a.v:1190$676: $auto$alumacc.cc:485:replace_alu$4735
  creating $alu cell for $add$/openlane/designs/current/src/picorv32a.v:1276$472: $auto$alumacc.cc:485:replace_alu$4738
  creating $alu cell for $add$/openlane/designs/current/src/picorv32a.v:1386$512: $auto$alumacc.cc:485:replace_alu$4741
  creating $alu cell for $add$/openlane/designs/current/src/picorv32a.v:1511$566: $auto$alumacc.cc:485:replace_alu$4744
  creating $alu cell for $add$/openlane/designs/current/src/picorv32a.v:1523$569: $auto$alumacc.cc:485:replace_alu$4747
  creating $alu cell for $add$/openlane/designs/current/src/picorv32a.v:1528$570: $auto$alumacc.cc:485:replace_alu$4750
  creating $alu cell for $add$/openlane/designs/current/src/picorv32a.v:1765$606: $auto$alumacc.cc:485:replace_alu$4753
  creating $alu cell for $add$/openlane/designs/current/src/picorv32a.v:1828$631: $auto$alumacc.cc:485:replace_alu$4756
  creating $alu cell for $sub$/openlane/designs/current/src/picorv32a.v:1190$675: $auto$alumacc.cc:485:replace_alu$4759
  creating $alu cell for $sub$/openlane/designs/current/src/picorv32a.v:1379$510: $auto$alumacc.cc:485:replace_alu$4762
  creating $alu cell for $sub$/openlane/designs/current/src/picorv32a.v:1396$517: $auto$alumacc.cc:485:replace_alu$4765
  created 13 $alu and 1 $macc cells.

5.14. Executing SHARE pass (SAT-based resource sharing).

5.15. Executing OPT pass (performing simple optimizations).

5.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.

5.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
Removed a total of 0 cells.

5.15.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32a..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~59 debug messages>

5.15.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32a.
    New ctrl vector for $pmux cell $procmux$1673: { \cpu_state [1] \cpu_state [4] $auto$opt_reduce.cc:134:opt_mux$4769 }
    New ctrl vector for $pmux cell $procmux$1913: { \cpu_state [1] $auto$opt_reduce.cc:134:opt_mux$4771 \cpu_state [4] }
    New ctrl vector for $pmux cell $procmux$2122: { \cpu_state [2] $auto$opt_reduce.cc:134:opt_mux$4773 }
    New ctrl vector for $pmux cell $procmux$3138: { $logic_and$/openlane/designs/current/src/picorv32a.v:344$67_Y $procmux$3148_CMP $auto$opt_reduce.cc:134:opt_mux$4775 }
  Optimizing cells in module \picorv32a.
Performed a total of 4 changes.

5.15.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

5.15.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:262:slice$4391 ($dffe) from module picorv32a (D = $procmux$3196_Y, Q = \mem_valid, rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$4357 ($dffe) from module picorv32a (D = $procmux$3138_Y, Q = \mem_state, rval = 2'00).

5.15.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 2 unused cells and 6 unused wires.
<suppressed ~3 debug messages>

5.15.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.

5.15.9. Rerunning OPT passes. (Maybe there is more to do..)

5.15.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32a..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~59 debug messages>

5.15.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32a.
Performed a total of 0 changes.

5.15.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
Removed a total of 0 cells.

5.15.13. Executing OPT_DFF pass (perform DFF optimizations).

5.15.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..

5.15.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.

5.15.16. Finished OPT passes. (There is nothing left to do.)

5.16. Executing MEMORY pass.

5.16.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

5.16.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

5.16.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing picorv32a.cpuregs write port 0.

5.16.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `\cpuregs'[0] in module `\picorv32a': no output FF found.
Checking read port address `\cpuregs'[0] in module `\picorv32a': no address FF found.

5.16.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..

5.16.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

5.16.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

5.16.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..

5.16.9. Executing MEMORY_COLLECT pass (generating $mem cells).

5.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..

5.18. Executing OPT pass (performing simple optimizations).

5.18.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.
<suppressed ~115 debug messages>

5.18.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
Removed a total of 0 cells.

5.18.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$4511 ($dffe) from module picorv32a (D = $procmux$1533_Y [3:0], Q = \latched_rd [3:0]).

5.18.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 10 unused cells and 38 unused wires.
<suppressed ~15 debug messages>

5.18.5. Rerunning OPT passes. (Removed registers in this run.)

5.18.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.
<suppressed ~1 debug messages>

5.18.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

5.18.8. Executing OPT_DFF pass (perform DFF optimizations).

5.18.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

5.18.10. Finished fast OPT passes.

5.19. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory \cpuregs in module \picorv32a:
  created 20 $dff cells and 0 static cells of width 32.
  read interface: 0 $dff and 31 $mux cells.
  write interface: 20 write mux blocks.

5.20. Executing OPT pass (performing simple optimizations).

5.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.
<suppressed ~37 debug messages>

5.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
Removed a total of 0 cells.

5.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32a..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~59 debug messages>

5.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32a.
    New input vector for $reduce_and cell $auto$opt_dff.cc:223:make_patterns_logic$4799: { $auto$opt_dff.cc:197:make_patterns_logic$4796 $auto$opt_dff.cc:197:make_patterns_logic$4512 $auto$opt_dff.cc:197:make_patterns_logic$4514 $auto$opt_dff.cc:197:make_patterns_logic$4516 $auto$opt_dff.cc:197:make_patterns_logic$4518 \resetn }
    Consolidated identical input bits for $pmux cell $procmux$1429:
      Old ports: A=\mem_rdata_word, B={ \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15:0] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7:0] }, Y=$procmux$1429_Y
      New ports: A=\mem_rdata_word [31:8], B={ \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15:7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] }, Y=$procmux$1429_Y [31:8]
      New connections: $procmux$1429_Y [7:0] = \mem_rdata_word [7:0]
    Consolidated identical input bits for $mux cell $procmux$2172:
      Old ports: A={ $add$/openlane/designs/current/src/picorv32a.v:1511$566_Y [31:2] $3\current_pc[31:0] [1:0] }, B={ $add$/openlane/designs/current/src/picorv32a.v:1528$570_Y [31:1] $3\current_pc[31:0] [0] }, Y=$procmux$2172_Y
      New ports: A={ $add$/openlane/designs/current/src/picorv32a.v:1511$566_Y [31:2] $3\current_pc[31:0] [1] }, B=$add$/openlane/designs/current/src/picorv32a.v:1528$570_Y [31:1], Y=$procmux$2172_Y [31:1]
      New connections: $procmux$2172_Y [0] = $3\current_pc[31:0] [0]
    Consolidated identical input bits for $mux cell $procmux$2178:
      Old ports: A=$3\current_pc[31:0], B={ $add$/openlane/designs/current/src/picorv32a.v:1511$566_Y [31:2] $3\current_pc[31:0] [1:0] }, Y=$procmux$2178_Y
      New ports: A=$3\current_pc[31:0] [31:2], B=$add$/openlane/designs/current/src/picorv32a.v:1511$566_Y [31:2], Y=$procmux$2178_Y [31:2]
      New connections: $procmux$2178_Y [1:0] = $3\current_pc[31:0] [1:0]
    Consolidated identical input bits for $pmux cell $procmux$3457:
      Old ports: A=\reg_op2, B={ \reg_op2 [15:0] \reg_op2 [15:0] \reg_op2 [7:0] \reg_op2 [7:0] \reg_op2 [7:0] \reg_op2 [7:0] }, Y=\mem_la_wdata
      New ports: A=\reg_op2 [31:8], B={ \reg_op2 [15:0] \reg_op2 [15:0] \reg_op2 [7:0] \reg_op2 [7:0] }, Y=\mem_la_wdata [31:8]
      New connections: \mem_la_wdata [7:0] = \reg_op2 [7:0]
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/current/src/picorv32a.v:1500$558:
      Old ports: A=2'00, B=2'10, Y=$ternary$/openlane/designs/current/src/picorv32a.v:1500$558_Y
      New ports: A=1'0, B=1'1, Y=$ternary$/openlane/designs/current/src/picorv32a.v:1500$558_Y [1]
      New connections: $ternary$/openlane/designs/current/src/picorv32a.v:1500$558_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/current/src/picorv32a.v:346$83:
      Old ports: A={ \reg_op1 [31:2] 2'00 }, B={ \next_pc [31:2] 2'00 }, Y=\mem_la_addr
      New ports: A=\reg_op1 [31:2], B=\next_pc [31:2], Y=\mem_la_addr [31:2]
      New connections: \mem_la_addr [1:0] = 2'00
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/current/src/picorv32a.v:375$98:
      Old ports: A=4'0011, B=4'1100, Y=$ternary$/openlane/designs/current/src/picorv32a.v:375$98_Y
      New ports: A=2'01, B=2'10, Y={ $ternary$/openlane/designs/current/src/picorv32a.v:375$98_Y [2] $ternary$/openlane/designs/current/src/picorv32a.v:375$98_Y [0] }
      New connections: { $ternary$/openlane/designs/current/src/picorv32a.v:375$98_Y [3] $ternary$/openlane/designs/current/src/picorv32a.v:375$98_Y [1] } = { $ternary$/openlane/designs/current/src/picorv32a.v:375$98_Y [2] $ternary$/openlane/designs/current/src/picorv32a.v:375$98_Y [0] }
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/current/src/picorv32a.v:581$158:
      Old ports: A=2'11, B=2'00, Y=$procmux$3144_Y
      New ports: A=1'1, B=1'0, Y=$procmux$3144_Y [0]
      New connections: $procmux$3144_Y [1] = $procmux$3144_Y [0]
  Optimizing cells in module \picorv32a.
    Consolidated identical input bits for $mux cell $procmux$2174:
      Old ports: A=$3\current_pc[31:0], B=$procmux$2172_Y, Y=$procmux$2174_Y
      New ports: A=$3\current_pc[31:0] [31:1], B=$procmux$2172_Y [31:1], Y=$procmux$2174_Y [31:1]
      New connections: $procmux$2174_Y [0] = $3\current_pc[31:0] [0]
  Optimizing cells in module \picorv32a.
    Consolidated identical input bits for $mux cell $procmux$2180:
      Old ports: A=$procmux$2174_Y, B={ $procmux$2178_Y [31:2] $3\current_pc[31:0] [1:0] }, Y=$procmux$2180_Y
      New ports: A=$procmux$2174_Y [31:1], B={ $procmux$2178_Y [31:2] $3\current_pc[31:0] [1] }, Y=$procmux$2180_Y [31:1]
      New connections: $procmux$2180_Y [0] = $3\current_pc[31:0] [0]
  Optimizing cells in module \picorv32a.
    Consolidated identical input bits for $mux cell $procmux$2183:
      Old ports: A=$procmux$2180_Y, B=$3\current_pc[31:0], Y=$procmux$2183_Y
      New ports: A=$procmux$2180_Y [31:1], B=$3\current_pc[31:0] [31:1], Y=$procmux$2183_Y [31:1]
      New connections: $procmux$2183_Y [0] = $3\current_pc[31:0] [0]
  Optimizing cells in module \picorv32a.
Performed a total of 12 changes.

5.20.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
Removed a total of 0 cells.

5.20.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $ternary$/openlane/designs/current/src/picorv32a.v:1190$677 in front of them:
        $auto$alumacc.cc:485:replace_alu$4759
        $auto$alumacc.cc:485:replace_alu$4735

5.20.7. Executing OPT_DFF pass (perform DFF optimizations).

5.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 0 unused cells and 73 unused wires.
<suppressed ~1 debug messages>

5.20.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.
<suppressed ~5 debug messages>

5.20.10. Rerunning OPT passes. (Maybe there is more to do..)

5.20.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32a..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~60 debug messages>

5.20.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32a.
Performed a total of 0 changes.

5.20.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
Removed a total of 0 cells.

5.20.14. Executing OPT_SHARE pass.

5.20.15. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $memory\cpuregs[9]$4819 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[9]).
Adding EN signal on $memory\cpuregs[8]$4817 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[8]).
Adding EN signal on $memory\cpuregs[7]$4815 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[7]).
Adding EN signal on $memory\cpuregs[6]$4813 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[6]).
Adding EN signal on $memory\cpuregs[5]$4811 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[5]).
Adding EN signal on $memory\cpuregs[4]$4809 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[4]).
Adding EN signal on $memory\cpuregs[3]$4807 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[3]).
Adding EN signal on $memory\cpuregs[2]$4805 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[2]).
Adding EN signal on $memory\cpuregs[1]$4803 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[1]).
Adding EN signal on $memory\cpuregs[19]$4839 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[19]).
Adding EN signal on $memory\cpuregs[18]$4837 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[18]).
Adding EN signal on $memory\cpuregs[17]$4835 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[17]).
Adding EN signal on $memory\cpuregs[16]$4833 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[16]).
Adding EN signal on $memory\cpuregs[15]$4831 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[15]).
Adding EN signal on $memory\cpuregs[14]$4829 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[14]).
Adding EN signal on $memory\cpuregs[13]$4827 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[13]).
Adding EN signal on $memory\cpuregs[12]$4825 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[12]).
Adding EN signal on $memory\cpuregs[11]$4823 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[11]).
Adding EN signal on $memory\cpuregs[10]$4821 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[10]).
Adding EN signal on $memory\cpuregs[0]$4801 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[0]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4378 ($dffe) from module picorv32a.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4378 ($dffe) from module picorv32a.

5.20.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 20 unused cells and 24 unused wires.
<suppressed ~21 debug messages>

5.20.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.

5.20.18. Rerunning OPT passes. (Maybe there is more to do..)

5.20.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32a..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~40 debug messages>

5.20.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32a.
Performed a total of 0 changes.

5.20.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
Removed a total of 0 cells.

5.20.22. Executing OPT_SHARE pass.

5.20.23. Executing OPT_DFF pass (perform DFF optimizations).

5.20.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..

5.20.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.

5.20.26. Finished OPT passes. (There is nothing left to do.)

5.21. Executing TECHMAP pass (map to technology primitives).

5.21.1. Executing Verilog-2005 frontend: /build/bin/../share/yosys/techmap.v
Parsing Verilog input from `/build/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

5.21.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$constmap:66d421c313e4e958be776b99540ac2de3b59fdbc$paramod$77562a466236eb4a6d905351a0995599b75075cb\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $or.
Using template $paramod$cc80a4e89b0341cb117f5d28b0e7244620640141\_90_alu for cells of type $alu.
Using template $paramod$c04af8dbf0e5d1d69bbccb2c7bd8a93fc9ef54dc\_90_alu for cells of type $alu.
Using extmapper maccmap for cells of type $macc.
  add \genblk1.pcpi_mul.rs1 * \genblk1.pcpi_mul.rs2 (33x33 bits, signed)
Using template $paramod$8fabc56b80a569262acfc42757a02ca0b8e91278\_90_pmux for cells of type $pmux.
Using template $paramod$44a13d10af618e7fbe7b9aad2f6151ffcee1e2fa\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $dff.
Using template $paramod$ebf89ea36a793f0f77858f212141d47c833068ad\_90_alu for cells of type $alu.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_90_alu for cells of type $alu.
Using template $paramod$8742280fdebca84e1c87f2a86ed84f62d558f4cc\_90_alu for cells of type $alu.
Using template $paramod$2653f68ddb8eab7b1907b4a20767b72a824a7a36\_90_alu for cells of type $alu.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$335cfd09f1afa8139c4aafcbbe5f361887b79c5e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:87f69c0bea22f84de4bcd0314b57cb19e61b5eb7$paramod$455891ae50d34e43581a517459d55825f76fa58e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$c5c783b17ab1d780abfad8cfe6563a0a7b47a3b0\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $sdffce.
Using template $paramod$645fe0cc96ae5edb83bff90cc2c78f4a20ca3e3c\_90_pmux for cells of type $pmux.
Using template $paramod$cc1e387d9d5ac1d3f6e6bed180038d9c0ac48d0c\_90_pmux for cells of type $pmux.
Using template $paramod$54d740639e1393b22262823179ff783ea9f17a35\_90_pmux for cells of type $pmux.
Using template $paramod$b098bc6f249c0ac91c4d6e19d54b23c285914115\_90_pmux for cells of type $pmux.
Using template $paramod$70d30c21ff772b34d0d1da2801fbd781dc3c70e4\_90_pmux for cells of type $pmux.
Running "alumacc" on wrapper $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $paramod$2407ada40cc3dda6c6015be2b49b748cddb5a800\_90_pmux for cells of type $pmux.
Using template $paramod$c96def1cdcef2eee3c62e5dfb7ba2dd09c9f74dd\_90_pmux for cells of type $pmux.
Using template $paramod$59b03ae2620a41577de8da5f5c97b2919e82362b\_90_pmux for cells of type $pmux.
Using template $paramod$521ce43182eecb9f60c72393a788160d2c356bf5\_90_pmux for cells of type $pmux.
Using template $paramod$bf2533632d512eac76dd186c0da49367e29b8e98\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000001000000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011111 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011110 for cells of type $lcu.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000001000000 for cells of type $fa.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000111111 for cells of type $fa.
Using template $paramod$039520c137afc9cd69dd56c3fb11a4e1fbe5f664\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
Using template $paramod$c6baa65225090ac0a120feab1b920965244aa496\_90_alu for cells of type $alu.
No more expansions possible.
<suppressed ~5979 debug messages>

5.22. Executing OPT pass (performing simple optimizations).

5.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.
<suppressed ~6623 debug messages>

5.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
<suppressed ~10935 debug messages>
Removed a total of 3645 cells.

5.22.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:262:slice$15158 ($_DFF_P_) from module picorv32a (D = $techmap$shl$/openlane/designs/current/src/picorv32a.v:1194$681.$10\buffer[31:0] [16], Q = \alu_shl [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15159 ($_DFF_P_) from module picorv32a (D = $techmap$shl$/openlane/designs/current/src/picorv32a.v:1194$681.$10\buffer[31:0] [17], Q = \alu_shl [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15160 ($_DFF_P_) from module picorv32a (D = $techmap$shl$/openlane/designs/current/src/picorv32a.v:1194$681.$10\buffer[31:0] [18], Q = \alu_shl [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15161 ($_DFF_P_) from module picorv32a (D = $techmap$shl$/openlane/designs/current/src/picorv32a.v:1194$681.$10\buffer[31:0] [19], Q = \alu_shl [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15162 ($_DFF_P_) from module picorv32a (D = $techmap$shl$/openlane/designs/current/src/picorv32a.v:1194$681.$10\buffer[31:0] [20], Q = \alu_shl [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15163 ($_DFF_P_) from module picorv32a (D = $techmap$shl$/openlane/designs/current/src/picorv32a.v:1194$681.$10\buffer[31:0] [21], Q = \alu_shl [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15164 ($_DFF_P_) from module picorv32a (D = $techmap$shl$/openlane/designs/current/src/picorv32a.v:1194$681.$10\buffer[31:0] [22], Q = \alu_shl [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15165 ($_DFF_P_) from module picorv32a (D = $techmap$shl$/openlane/designs/current/src/picorv32a.v:1194$681.$10\buffer[31:0] [23], Q = \alu_shl [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15166 ($_DFF_P_) from module picorv32a (D = $techmap$shl$/openlane/designs/current/src/picorv32a.v:1194$681.$10\buffer[31:0] [24], Q = \alu_shl [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15167 ($_DFF_P_) from module picorv32a (D = $techmap$shl$/openlane/designs/current/src/picorv32a.v:1194$681.$10\buffer[31:0] [25], Q = \alu_shl [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15168 ($_DFF_P_) from module picorv32a (D = $techmap$shl$/openlane/designs/current/src/picorv32a.v:1194$681.$10\buffer[31:0] [26], Q = \alu_shl [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15169 ($_DFF_P_) from module picorv32a (D = $techmap$shl$/openlane/designs/current/src/picorv32a.v:1194$681.$10\buffer[31:0] [27], Q = \alu_shl [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15170 ($_DFF_P_) from module picorv32a (D = $techmap$shl$/openlane/designs/current/src/picorv32a.v:1194$681.$10\buffer[31:0] [28], Q = \alu_shl [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15171 ($_DFF_P_) from module picorv32a (D = $techmap$shl$/openlane/designs/current/src/picorv32a.v:1194$681.$10\buffer[31:0] [29], Q = \alu_shl [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15172 ($_DFF_P_) from module picorv32a (D = $techmap$shl$/openlane/designs/current/src/picorv32a.v:1194$681.$10\buffer[31:0] [30], Q = \alu_shl [14], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15173 ($_DFF_P_) from module picorv32a (D = $techmap$shl$/openlane/designs/current/src/picorv32a.v:1194$681.$10\buffer[31:0] [31], Q = \alu_shl [15], rval = 1'0).

5.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 529 unused cells and 4036 unused wires.
<suppressed ~530 debug messages>

5.22.5. Rerunning OPT passes. (Removed registers in this run.)

5.22.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.

5.22.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
Removed a total of 0 cells.

5.22.8. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:262:slice$15076 ($_DFFE_PP_) from module picorv32a (D = $procmux$2593.Y_B [31], Q = \decoded_imm [31], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15075 ($_DFFE_PP_) from module picorv32a (D = $procmux$2593.Y_B [30], Q = \decoded_imm [30], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15074 ($_DFFE_PP_) from module picorv32a (D = $procmux$2593.Y_B [29], Q = \decoded_imm [29], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15073 ($_DFFE_PP_) from module picorv32a (D = $procmux$2593.Y_B [28], Q = \decoded_imm [28], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15072 ($_DFFE_PP_) from module picorv32a (D = $procmux$2593.Y_B [27], Q = \decoded_imm [27], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15071 ($_DFFE_PP_) from module picorv32a (D = $procmux$2593.Y_B [26], Q = \decoded_imm [26], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15070 ($_DFFE_PP_) from module picorv32a (D = $procmux$2593.Y_B [25], Q = \decoded_imm [25], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15069 ($_DFFE_PP_) from module picorv32a (D = $procmux$2593.Y_B [24], Q = \decoded_imm [24], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15068 ($_DFFE_PP_) from module picorv32a (D = $procmux$2593.Y_B [23], Q = \decoded_imm [23], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15067 ($_DFFE_PP_) from module picorv32a (D = $procmux$2593.Y_B [22], Q = \decoded_imm [22], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15066 ($_DFFE_PP_) from module picorv32a (D = $procmux$2593.Y_B [21], Q = \decoded_imm [21], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15065 ($_DFFE_PP_) from module picorv32a (D = $procmux$2593.Y_B [20], Q = \decoded_imm [20], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15064 ($_DFFE_PP_) from module picorv32a (D = $procmux$2593.Y_B [19], Q = \decoded_imm [19], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15063 ($_DFFE_PP_) from module picorv32a (D = $procmux$2593.Y_B [18], Q = \decoded_imm [18], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15062 ($_DFFE_PP_) from module picorv32a (D = $procmux$2593.Y_B [17], Q = \decoded_imm [17], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15061 ($_DFFE_PP_) from module picorv32a (D = $procmux$2593.Y_B [16], Q = \decoded_imm [16], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15060 ($_DFFE_PP_) from module picorv32a (D = $procmux$2593.Y_B [15], Q = \decoded_imm [15], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15059 ($_DFFE_PP_) from module picorv32a (D = $procmux$2593.Y_B [14], Q = \decoded_imm [14], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15058 ($_DFFE_PP_) from module picorv32a (D = $procmux$2593.Y_B [13], Q = \decoded_imm [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15057 ($_DFFE_PP_) from module picorv32a (D = $procmux$2593.Y_B [12], Q = \decoded_imm [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15056 ($_DFFE_PP_) from module picorv32a (D = $procmux$2593.Y_B [11], Q = \decoded_imm [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15055 ($_DFFE_PP_) from module picorv32a (D = $procmux$2593.Y_B [10], Q = \decoded_imm [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15054 ($_DFFE_PP_) from module picorv32a (D = $procmux$2593.Y_B [9], Q = \decoded_imm [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15053 ($_DFFE_PP_) from module picorv32a (D = $procmux$2593.Y_B [8], Q = \decoded_imm [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15052 ($_DFFE_PP_) from module picorv32a (D = $procmux$2593.Y_B [7], Q = \decoded_imm [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15051 ($_DFFE_PP_) from module picorv32a (D = $procmux$2593.Y_B [6], Q = \decoded_imm [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15050 ($_DFFE_PP_) from module picorv32a (D = $procmux$2593.Y_B [5], Q = \decoded_imm [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15049 ($_DFFE_PP_) from module picorv32a (D = $procmux$2593.Y_B [4], Q = \decoded_imm [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15048 ($_DFFE_PP_) from module picorv32a (D = $procmux$2593.Y_B [3], Q = \decoded_imm [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15047 ($_DFFE_PP_) from module picorv32a (D = $procmux$2593.Y_B [2], Q = \decoded_imm [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15046 ($_DFFE_PP_) from module picorv32a (D = $procmux$2593.Y_B [1], Q = \decoded_imm [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$14928 ($_SDFF_PN0_) from module picorv32a (D = $procmux$1407.Y_B, Q = \alu_wait, rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$14738 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [31], Q = \irq_pending [31], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$14737 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [30], Q = \irq_pending [30], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$14736 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [29], Q = \irq_pending [29], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$14735 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [28], Q = \irq_pending [28], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$14734 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [27], Q = \irq_pending [27], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$14733 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [26], Q = \irq_pending [26], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$14732 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [25], Q = \irq_pending [25], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$14731 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [24], Q = \irq_pending [24], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$14730 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [23], Q = \irq_pending [23], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$14729 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [22], Q = \irq_pending [22], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$14728 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [21], Q = \irq_pending [21], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$14727 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [20], Q = \irq_pending [20], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$14726 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [19], Q = \irq_pending [19], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$14725 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [18], Q = \irq_pending [18], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$14724 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [17], Q = \irq_pending [17], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$14723 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [16], Q = \irq_pending [16], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$14722 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [15], Q = \irq_pending [15], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$14721 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [14], Q = \irq_pending [14], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$14720 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [13], Q = \irq_pending [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$14719 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [12], Q = \irq_pending [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$14718 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [11], Q = \irq_pending [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$14717 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [10], Q = \irq_pending [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$14716 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [9], Q = \irq_pending [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$14715 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [8], Q = \irq_pending [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$14714 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [7], Q = \irq_pending [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$14713 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [6], Q = \irq_pending [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$14712 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [5], Q = \irq_pending [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$14711 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [4], Q = \irq_pending [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$14710 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [3], Q = \irq_pending [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$14708 ($_DFF_P_) from module picorv32a (D = $procmux$988.Y, Q = \irq_pending [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$14707 ($_DFF_P_) from module picorv32a (D = $5\next_irq_pending[31:0] [0], Q = \irq_pending [0], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$14513 ($_SDFFE_PN0P_) from module picorv32a (D = $procmux$1195.B_AND_S [32], Q = \reg_next_pc [0]).
Adding SRST signal on $auto$ff.cc:262:slice$13577 ($_DFFE_PP_) from module picorv32a (D = \decoded_rd [3], Q = \latched_rd [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13576 ($_DFFE_PP_) from module picorv32a (D = \decoded_rd [2], Q = \latched_rd [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13575 ($_DFFE_PP_) from module picorv32a (D = \decoded_rd [1], Q = \latched_rd [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13574 ($_DFFE_PP_) from module picorv32a (D = $procmux$1533.A [0], Q = \latched_rd [0], rval = 1'0).

5.22.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 71 unused cells and 7 unused wires.
<suppressed ~72 debug messages>

5.22.10. Rerunning OPT passes. (Removed registers in this run.)

5.22.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.

5.22.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

5.22.13. Executing OPT_DFF pass (perform DFF optimizations).

5.22.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

5.22.15. Finished fast OPT passes.

5.23. Executing ABC pass (technology mapping using ABC).

5.23.1. Extracting gate netlist of module `\picorv32a' to `<abc-temp-dir>/input.blif'..
Extracted 14847 gates and 16416 wires to a netlist network with 1566 inputs and 920 outputs.

5.23.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.23.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:     1384
ABC RESULTS:            ANDNOT cells:     4044
ABC RESULTS:               MUX cells:     1883
ABC RESULTS:              NAND cells:      761
ABC RESULTS:               NOR cells:      605
ABC RESULTS:               NOT cells:      924
ABC RESULTS:                OR cells:     2313
ABC RESULTS:             ORNOT cells:      209
ABC RESULTS:              XNOR cells:      723
ABC RESULTS:               XOR cells:     2351
ABC RESULTS:        internal signals:    13930
ABC RESULTS:           input signals:     1566
ABC RESULTS:          output signals:      920
Removing temp directory.

5.24. Executing OPT pass (performing simple optimizations).

5.24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.
<suppressed ~652 debug messages>

5.24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
<suppressed ~54 debug messages>
Removed a total of 18 cells.

5.24.3. Executing OPT_DFF pass (perform DFF optimizations).

5.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 7 unused cells and 5004 unused wires.
<suppressed ~23 debug messages>

5.24.5. Finished fast OPT passes.

5.25. Executing HIERARCHY pass (managing design hierarchy).

5.25.1. Analyzing design hierarchy..
Top module:  \picorv32a

5.25.2. Analyzing design hierarchy..
Top module:  \picorv32a
Removed 0 unused modules.

5.26. Printing statistics.

=== picorv32a ===

   Number of wires:              14807
   Number of wire bits:          18166
   Number of public wires:         199
   Number of public wire bits:    2357
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              16785
     $_ANDNOT_                    4044
     $_AND_                       1384
     $_DFFE_PP_                    957
     $_DFF_P_                      227
     $_MUX_                       1883
     $_NAND_                       761
     $_NOR_                        588
     $_NOT_                        917
     $_ORNOT_                      209
     $_OR_                        2312
     $_SDFFCE_PN0P_                 36
     $_SDFFCE_PP0P_                  9
     $_SDFFCE_PP1P_                  1
     $_SDFFE_PN0P_                 192
     $_SDFFE_PN1N_                   4
     $_SDFFE_PN1P_                  32
     $_SDFFE_PP0P_                   1
     $_SDFFE_PP1P_                   3
     $_SDFF_PN0_                   133
     $_SDFF_PP0_                    18
     $_XNOR_                       723
     $_XOR_                       2351

5.27. Executing CHECK pass (checking for obvious problems).
Checking module picorv32a...
Found and reported 0 problems.

6. Generating Graphviz representation of design.
Writing dot description to `/openlane/designs/current/runs/RUN__2022_06_04__02_21_02/tmp/synthesis/post_techmap.dot'.
Dumping module picorv32a to page 1.

7. Executing SHARE pass (SAT-based resource sharing).

8. Executing OPT pass (performing simple optimizations).

8.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.

8.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
Removed a total of 0 cells.

8.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32a..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

8.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32a.
Performed a total of 0 changes.

8.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
Removed a total of 0 cells.

8.6. Executing OPT_DFF pass (perform DFF optimizations).

8.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..

8.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.

8.9. Finished OPT passes. (There is nothing left to do.)

9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 0 unused cells and 37 unused wires.
<suppressed ~37 debug messages>

10. Printing statistics.

=== picorv32a ===

   Number of wires:              14770
   Number of wire bits:          17781
   Number of public wires:         162
   Number of public wire bits:    1972
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              16785
     $_ANDNOT_                    4044
     $_AND_                       1384
     $_DFFE_PP_                    957
     $_DFF_P_                      227
     $_MUX_                       1883
     $_NAND_                       761
     $_NOR_                        588
     $_NOT_                        917
     $_ORNOT_                      209
     $_OR_                        2312
     $_SDFFCE_PN0P_                 36
     $_SDFFCE_PP0P_                  9
     $_SDFFCE_PP1P_                  1
     $_SDFFE_PN0P_                 192
     $_SDFFE_PN1N_                   4
     $_SDFFE_PN1P_                  32
     $_SDFFE_PP0P_                   1
     $_SDFFE_PP1P_                   3
     $_SDFF_PN0_                   133
     $_SDFF_PP0_                    18
     $_XNOR_                       723
     $_XOR_                       2351

mapping tbuf

11. Executing TECHMAP pass (map to technology primitives).

11.1. Executing Verilog-2005 frontend: /openlane/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v
Parsing Verilog input from `/openlane/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v' to AST representation.
Generating RTLIL representation for module `\$_TBUF_'.
Successfully finished Verilog frontend.

11.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

12. Executing SIMPLEMAP pass (map simple cells to gate primitives).

13. Executing TECHMAP pass (map to technology primitives).

13.1. Executing Verilog-2005 frontend: /openlane/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v
Parsing Verilog input from `/openlane/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Successfully finished Verilog frontend.

13.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

14. Executing SIMPLEMAP pass (map simple cells to gate primitives).

15. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell sky130_fd_sc_hd__dfxtp_2 (noninv, pins=3, area=21.27) is a direct match for cell type $_DFF_P_.
  cell sky130_fd_sc_hd__dfrtp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN0_.
  cell sky130_fd_sc_hd__dfstp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN1_.
  cell sky130_fd_sc_hd__dfbbn_2 (noninv, pins=6, area=35.03) is a direct match for cell type $_DFFSR_NNN_.
  final dff cell mappings:
    unmapped dff cell: $_DFF_N_
    \sky130_fd_sc_hd__dfxtp_2 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    unmapped dff cell: $_DFF_NN0_
    unmapped dff cell: $_DFF_NN1_
    unmapped dff cell: $_DFF_NP0_
    unmapped dff cell: $_DFF_NP1_
    \sky130_fd_sc_hd__dfrtp_2 _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .RESET_B( R));
    \sky130_fd_sc_hd__dfstp_2 _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .SET_B( R));
    unmapped dff cell: $_DFF_PP0_
    unmapped dff cell: $_DFF_PP1_
    \sky130_fd_sc_hd__dfbbn_2 _DFFSR_NNN_ (.CLK_N( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B( S));
    unmapped dff cell: $_DFFSR_NNP_
    unmapped dff cell: $_DFFSR_NPN_
    unmapped dff cell: $_DFFSR_NPP_
    unmapped dff cell: $_DFFSR_PNN_
    unmapped dff cell: $_DFFSR_PNP_
    unmapped dff cell: $_DFFSR_PPN_
    unmapped dff cell: $_DFFSR_PPP_

15.1. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).
Mapping DFF cells in module `\picorv32a':
  mapped 1613 $_DFF_P_ cells to \sky130_fd_sc_hd__dfxtp_2 cells.

16. Printing statistics.

=== picorv32a ===

   Number of wires:              16434
   Number of wire bits:          19445
   Number of public wires:         162
   Number of public wire bits:    1972
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              18449
     $_ANDNOT_                    4044
     $_AND_                       1384
     $_MUX_                       3547
     $_NAND_                       761
     $_NOR_                        588
     $_NOT_                        917
     $_ORNOT_                      209
     $_OR_                        2312
     $_XNOR_                       723
     $_XOR_                       2351
     sky130_fd_sc_hd__dfxtp_2     1613

[INFO]: USING STRATEGY AREA 0

17. Executing ABC pass (technology mapping using ABC).

17.1. Extracting gate netlist of module `\picorv32a' to `/tmp/yosys-abc-A0GDx1/input.blif'..
Extracted 16836 gates and 18517 wires to a netlist network with 1679 inputs and 1673 outputs.

17.1.1. Executing ABC.
Running ABC command: /build/bin/yosys-abc -s -f /tmp/yosys-abc-A0GDx1/abc.script 2>&1
ABC: ABC command line: "source /tmp/yosys-abc-A0GDx1/abc.script".
ABC: 
ABC: + read_blif /tmp/yosys-abc-A0GDx1/input.blif 
ABC: + read_lib -w /openlane/designs/current/runs/RUN__2022_06_04__02_21_02/tmp/synthesis/trimmed.lib 
ABC: Parsing finished successfully.  Parsing time =     0.07 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Library "sky130A_merged" from "/openlane/designs/current/runs/RUN__2022_06_04__02_21_02/tmp/synthesis/trimmed.lib" has 175 cells (17 skipped: 14 seq; 3 tri-state; 0 no func; 0 dont_use).  Time =     0.09 sec
ABC: Memory =    7.77 MB. Time =     0.09 sec
ABC: Warning: Detected 2 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + read_constr -v /openlane/designs/current/runs/RUN__2022_06_04__02_21_02/tmp/synthesis/synthesis.sdc 
ABC: Setting driving cell to be "sky130_fd_sc_hd__inv_2".
ABC: Setting output load to be 33.442001.
ABC: + read_constr /openlane/designs/current/runs/RUN__2022_06_04__02_21_02/tmp/synthesis/synthesis.sdc 
ABC: + fx 
ABC: + mfs 
ABC: + strash 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + retime -D -D 24000 -M 5 
ABC: + scleanup 
ABC: Error: The network is combinational.
ABC: + fraig_store 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + fraig_restore 
ABC: + amap -m -Q 0.1 -F 20 -A 20 -C 5000 
ABC: + retime -D -D 24000 
ABC: + &get -n 
ABC: + &st 
ABC: + &dch 
ABC: + &nf 
ABC: + &put 
ABC: + buffer -N 6 -S 750.0 
ABC: + upsize -D 24000 
ABC: Current delay (8668.82 ps) does not exceed the target delay (24000.00 ps). Upsizing is not performed.
ABC: + dnsize -D 24000 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =  15115 ( 21.9 %)   Cap = 10.3 ff (  5.5 %)   Area =   129007.48 ( 77.8 %)   Delay =  8948.90 ps  (  1.1 %)               
ABC: Path  0 --    1550 : 0    2 pi                        A =   0.00  Df =  15.8   -9.3 ps  S =  27.6 ps  Cin =  0.0 ff  Cout =   4.4 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --    6428 : 1    6 sky130_fd_sc_hd__buf_1    A =   3.75  Df = 157.0  -42.0 ps  S = 141.3 ps  Cin =  2.1 ff  Cout =  11.2 ff  Cmax = 130.0 ff  G =  515  
ABC: Path  2 --    6429 : 1    6 sky130_fd_sc_hd__buf_1    A =   3.75  Df = 416.6 -126.4 ps  S = 268.9 ps  Cin =  2.1 ff  Cout =  22.3 ff  Cmax = 130.0 ff  G = 1018  
ABC: Path  3 --    6813 : 1    6 sky130_fd_sc_hd__buf_1    A =   3.75  Df = 697.1 -205.3 ps  S = 271.8 ps  Cin =  2.1 ff  Cout =  22.6 ff  Cmax = 130.0 ff  G = 1039  
ABC: Path  4 --    8191 : 4    3 sky130_fd_sc_hd__a22oi_2  A =  12.51  Df = 845.0 -114.9 ps  S = 209.4 ps  Cin =  4.3 ff  Cout =  10.9 ff  Cmax = 170.3 ff  G =  238  
ABC: Path  5 --    8192 : 3    2 sky130_fd_sc_hd__or3_2    A =   7.51  Df =1288.4 -391.7 ps  S =  91.5 ps  Cin =  1.5 ff  Cout =   6.9 ff  Cmax = 310.4 ff  G =  441  
ABC: Path  6 --    8196 : 3    3 sky130_fd_sc_hd__a21o_2   A =   8.76  Df =1508.6 -333.7 ps  S =  61.7 ps  Cin =  2.4 ff  Cout =   9.6 ff  Cmax = 309.5 ff  G =  390  
ABC: Path  7 --    8355 : 3    2 sky130_fd_sc_hd__a21bo_2  A =  10.01  Df =1729.9 -365.9 ps  S =  55.9 ps  Cin =  2.0 ff  Cout =   7.3 ff  Cmax = 288.4 ff  G =  338  
ABC: Path  8 --    8357 : 3    3 sky130_fd_sc_hd__a21o_2   A =   8.76  Df =1936.3 -426.0 ps  S =  69.6 ps  Cin =  2.4 ff  Cout =  11.4 ff  Cmax = 309.5 ff  G =  461  
ABC: Path  9 --    8358 : 3    2 sky130_fd_sc_hd__and3_2   A =   7.51  Df =2155.5 -109.5 ps  S =  64.3 ps  Cin =  1.5 ff  Cout =   7.1 ff  Cmax = 309.5 ff  G =  454  
ABC: Path 10 --    8360 : 4    4 sky130_fd_sc_hd__a211o_2  A =  10.01  Df =2497.8 -249.5 ps  S =  79.0 ps  Cin =  2.4 ff  Cout =  13.9 ff  Cmax = 325.0 ff  G =  571  
ABC: Path 11 --    8363 : 4    2 sky130_fd_sc_hd__a211o_2  A =  10.01  Df =2812.1 -314.1 ps  S =  59.3 ps  Cin =  2.4 ff  Cout =   7.0 ff  Cmax = 325.0 ff  G =  285  
ABC: Path 12 --    8365 : 4    3 sky130_fd_sc_hd__a211o_2  A =  10.01  Df =3171.9 -274.6 ps  S =  69.9 ps  Cin =  2.4 ff  Cout =  11.4 ff  Cmax = 325.0 ff  G =  461  
ABC: Path 13 --    8366 : 3    2 sky130_fd_sc_hd__and3_2   A =   7.51  Df =3398.4 -228.0 ps  S =  65.2 ps  Cin =  1.5 ff  Cout =   7.1 ff  Cmax = 309.5 ff  G =  454  
ABC: Path 14 --    8368 : 4    4 sky130_fd_sc_hd__a211o_2  A =  10.01  Df =3740.4 -249.6 ps  S =  79.2 ps  Cin =  2.4 ff  Cout =  14.0 ff  Cmax = 325.0 ff  G =  569  
ABC: Path 15 --    8371 : 4    2 sky130_fd_sc_hd__a22o_2   A =  10.01  Df =3967.9 -218.6 ps  S =  55.3 ps  Cin =  2.3 ff  Cout =   7.0 ff  Cmax = 301.2 ff  G =  286  
ABC: Path 16 --    8373 : 4    2 sky130_fd_sc_hd__a211o_2  A =  10.01  Df =4306.5 -274.4 ps  S =  58.2 ps  Cin =  2.4 ff  Cout =   6.6 ff  Cmax = 325.0 ff  G =  270  
ABC: Path 17 --    8374 : 3    4 sky130_fd_sc_hd__and3_2   A =   7.51  Df =4548.4 -240.2 ps  S =  96.6 ps  Cin =  1.5 ff  Cout =  14.3 ff  Cmax = 309.5 ff  G =  902  
ABC: Path 18 --    8525 : 4    4 sky130_fd_sc_hd__o211a_2  A =  10.01  Df =4822.8 -292.3 ps  S = 102.9 ps  Cin =  2.4 ff  Cout =  14.3 ff  Cmax = 268.3 ff  G =  569  
ABC: Path 19 --    8528 : 3    1 sky130_fd_sc_hd__o21a_2   A =   8.76  Df =5025.2 -148.0 ps  S =  29.3 ps  Cin =  2.4 ff  Cout =   1.5 ff  Cmax = 294.8 ff  G =   59  
ABC: Path 20 --    8529 : 2    2 sky130_fd_sc_hd__or2_2    A =   6.26  Df =5331.4 -107.8 ps  S =  84.4 ps  Cin =  1.5 ff  Cout =  13.7 ff  Cmax = 299.4 ff  G =  901  
ABC: Path 21 --    8531 : 2    3 sky130_fd_sc_hd__xnor2_2  A =  16.27  Df =5570.8 -173.5 ps  S = 223.7 ps  Cin =  8.5 ff  Cout =  13.5 ff  Cmax = 121.8 ff  G =  152  
ABC: Path 22 --    8865 : 2    2 sky130_fd_sc_hd__and2b_2  A =   8.76  Df =5815.0 -199.7 ps  S =  38.4 ps  Cin =  1.6 ff  Cout =   3.3 ff  Cmax = 310.4 ff  G =  201  
ABC: Path 23 --    8868 : 4    2 sky130_fd_sc_hd__a2bb2o_2 A =  11.26  Df =6085.9 -301.6 ps  S =  67.1 ps  Cin =  1.7 ff  Cout =   9.3 ff  Cmax = 300.3 ff  G =  513  
ABC: Path 24 --    9638 : 2    1 sky130_fd_sc_hd__nand2_2  A =   6.26  Df =6272.4 -138.2 ps  S =  30.2 ps  Cin =  4.4 ff  Cout =   1.5 ff  Cmax = 295.7 ff  G =   34  
ABC: Path 25 --    9640 : 3    5 sky130_fd_sc_hd__and3_2   A =   7.51  Df =6780.6 -422.0 ps  S = 115.8 ps  Cin =  1.5 ff  Cout =  18.7 ff  Cmax = 309.5 ff  G = 1204  
ABC: Path 26 --   11021 : 3    3 sky130_fd_sc_hd__and3b_2  A =  10.01  Df =7028.6 -443.6 ps  S =  61.2 ps  Cin =  1.5 ff  Cout =   6.5 ff  Cmax = 309.5 ff  G =  420  
ABC: Path 27 --   12512 : 5    2 sky130_fd_sc_hd__o2111a_2 A =  12.51  Df =7248.3 -393.0 ps  S =  65.1 ps  Cin =  2.4 ff  Cout =   7.1 ff  Cmax = 299.4 ff  G =  280  
ABC: Path 28 --   12726 : 5    3 sky130_fd_sc_hd__o311a_2  A =  11.26  Df =7438.4 -182.1 ps  S =  65.4 ps  Cin =  2.4 ff  Cout =   6.6 ff  Cmax = 293.9 ff  G =  270  
ABC: Path 29 --   13111 : 5    3 sky130_fd_sc_hd__o2111a_2 A =  12.51  Df =7670.0 -127.8 ps  S =  76.8 ps  Cin =  2.4 ff  Cout =   9.6 ff  Cmax = 299.4 ff  G =  380  
ABC: Path 30 --   13271 : 5    3 sky130_fd_sc_hd__o311a_2  A =  11.26  Df =7964.9  -78.3 ps  S =  84.3 ps  Cin =  2.4 ff  Cout =  11.9 ff  Cmax = 293.9 ff  G =  476  
ABC: Path 31 --   13411 : 4    2 sky130_fd_sc_hd__o31a_2   A =  10.01  Df =8324.1 -265.9 ps  S =  76.5 ps  Cin =  2.3 ff  Cout =  10.9 ff  Cmax = 285.7 ff  G =  450  
ABC: Path 32 --   13413 : 3    1 sky130_fd_sc_hd__a21o_2   A =   8.76  Df =8557.7 -354.3 ps  S =  59.0 ps  Cin =  2.4 ff  Cout =   9.0 ff  Cmax = 309.5 ff  G =  369  
ABC: Path 33 --   13450 : 2    1 sky130_fd_sc_hd__xnor2_2  A =  16.27  Df =8948.9 -516.4 ps  S = 453.8 ps  Cin =  8.5 ff  Cout =  33.4 ff  Cmax = 121.8 ff  G =  394  
ABC: Start-point = pi1549 (\genblk1.pcpi_mul.rs2 [8]).  End-point = po237 ($auto$maccmap.cc:240:synth$7800.Y [63]).
ABC: + print_stats -m 
ABC: netlist                       : i/o = 1679/ 1673  lat =    0  nd = 15115  edge =  37623  area =129014.96  delay =35.00  lev = 35
ABC: + write_blif /tmp/yosys-abc-A0GDx1/output.blif 

17.1.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__a2111o_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__a2111oi_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a211o_2 cells:      309
ABC RESULTS:   sky130_fd_sc_hd__a211oi_2 cells:      106
ABC RESULTS:   sky130_fd_sc_hd__a21bo_2 cells:      151
ABC RESULTS:   sky130_fd_sc_hd__a21boi_2 cells:       48
ABC RESULTS:   sky130_fd_sc_hd__a21o_2 cells:      483
ABC RESULTS:   sky130_fd_sc_hd__a21oi_2 cells:      435
ABC RESULTS:   sky130_fd_sc_hd__a221o_2 cells:      244
ABC RESULTS:   sky130_fd_sc_hd__a221oi_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a22o_2 cells:      360
ABC RESULTS:   sky130_fd_sc_hd__a22oi_2 cells:      247
ABC RESULTS:   sky130_fd_sc_hd__a2bb2o_2 cells:       54
ABC RESULTS:   sky130_fd_sc_hd__a2bb2oi_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__a311o_2 cells:       16
ABC RESULTS:   sky130_fd_sc_hd__a311oi_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__a31o_2 cells:      231
ABC RESULTS:   sky130_fd_sc_hd__a31oi_2 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__a32o_2 cells:       69
ABC RESULTS:   sky130_fd_sc_hd__a32oi_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a41o_2 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__a41oi_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__and2_2 cells:      475
ABC RESULTS:   sky130_fd_sc_hd__and2b_2 cells:      242
ABC RESULTS:   sky130_fd_sc_hd__and3_2 cells:      391
ABC RESULTS:   sky130_fd_sc_hd__and3b_2 cells:       72
ABC RESULTS:   sky130_fd_sc_hd__and4_2 cells:      266
ABC RESULTS:   sky130_fd_sc_hd__and4b_2 cells:        9
ABC RESULTS:   sky130_fd_sc_hd__and4bb_2 cells:       22
ABC RESULTS:   sky130_fd_sc_hd__buf_1 cells:     3125
ABC RESULTS:   sky130_fd_sc_hd__inv_2 cells:      183
ABC RESULTS:   sky130_fd_sc_hd__mux2_2 cells:     1358
ABC RESULTS:   sky130_fd_sc_hd__mux4_2 cells:       48
ABC RESULTS:   sky130_fd_sc_hd__nand2_2 cells:      932
ABC RESULTS:   sky130_fd_sc_hd__nand2b_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__nand3_2 cells:      267
ABC RESULTS:   sky130_fd_sc_hd__nand3b_2 cells:       11
ABC RESULTS:   sky130_fd_sc_hd__nand4_2 cells:      103
ABC RESULTS:   sky130_fd_sc_hd__nand4b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nor2_2 cells:      826
ABC RESULTS:   sky130_fd_sc_hd__nor3_2 cells:       74
ABC RESULTS:   sky130_fd_sc_hd__nor3b_2 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__nor4_2 cells:       18
ABC RESULTS:   sky130_fd_sc_hd__o2111a_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__o2111ai_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o211a_2 cells:      304
ABC RESULTS:   sky130_fd_sc_hd__o211ai_2 cells:      143
ABC RESULTS:   sky130_fd_sc_hd__o21a_2 cells:      314
ABC RESULTS:   sky130_fd_sc_hd__o21ai_2 cells:      326
ABC RESULTS:   sky130_fd_sc_hd__o21ba_2 cells:      144
ABC RESULTS:   sky130_fd_sc_hd__o21bai_2 cells:       47
ABC RESULTS:   sky130_fd_sc_hd__o221a_2 cells:       60
ABC RESULTS:   sky130_fd_sc_hd__o221ai_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o22a_2 cells:       67
ABC RESULTS:   sky130_fd_sc_hd__o22ai_2 cells:       10
ABC RESULTS:   sky130_fd_sc_hd__o2bb2a_2 cells:       23
ABC RESULTS:   sky130_fd_sc_hd__o311a_2 cells:       42
ABC RESULTS:   sky130_fd_sc_hd__o31a_2 cells:       16
ABC RESULTS:   sky130_fd_sc_hd__o31ai_2 cells:       15
ABC RESULTS:   sky130_fd_sc_hd__o32a_2 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__o32ai_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o41ai_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or2_2 cells:      627
ABC RESULTS:   sky130_fd_sc_hd__or2b_2 cells:      221
ABC RESULTS:   sky130_fd_sc_hd__or3_2 cells:      143
ABC RESULTS:   sky130_fd_sc_hd__or3b_2 cells:       28
ABC RESULTS:   sky130_fd_sc_hd__or4_2 cells:       67
ABC RESULTS:   sky130_fd_sc_hd__or4b_2 cells:       18
ABC RESULTS:   sky130_fd_sc_hd__or4bb_2 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__xnor2_2 cells:      976
ABC RESULTS:   sky130_fd_sc_hd__xor2_2 cells:      286
ABC RESULTS:        internal signals:    15165
ABC RESULTS:           input signals:     1679
ABC RESULTS:          output signals:     1673
Removing temp directory.

18. Executing SETUNDEF pass (replace undef values with defined constants).

19. Executing HILOMAP pass (mapping to constant drivers).

20. Executing SPLITNETS pass (splitting up multi-bit signals).

21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 34 unused cells and 19435 unused wires.
<suppressed ~150 debug messages>

22. Executing INSBUF pass (insert buffer cells for connected wires).
Added picorv32a.$auto$insbuf.cc:79:execute$71467: \mem_la_wdata [0] -> \pcpi_rs2 [0]
Added picorv32a.$auto$insbuf.cc:79:execute$71468: \mem_la_wdata [1] -> \pcpi_rs2 [1]
Added picorv32a.$auto$insbuf.cc:79:execute$71469: \mem_la_wdata [2] -> \pcpi_rs2 [2]
Added picorv32a.$auto$insbuf.cc:79:execute$71470: \mem_la_wdata [3] -> \pcpi_rs2 [3]
Added picorv32a.$auto$insbuf.cc:79:execute$71471: \mem_la_wdata [4] -> \pcpi_rs2 [4]
Added picorv32a.$auto$insbuf.cc:79:execute$71472: \mem_la_wdata [5] -> \pcpi_rs2 [5]
Added picorv32a.$auto$insbuf.cc:79:execute$71473: \mem_la_wdata [6] -> \pcpi_rs2 [6]
Added picorv32a.$auto$insbuf.cc:79:execute$71474: \mem_la_wdata [7] -> \pcpi_rs2 [7]

23. Executing CHECK pass (checking for obvious problems).
Checking module picorv32a...
Warning: Wire picorv32a.\trap is used but has no driver.
Warning: Wire picorv32a.\trace_valid is used but has no driver.
Warning: Wire picorv32a.\trace_data [35] is used but has no driver.
Warning: Wire picorv32a.\trace_data [34] is used but has no driver.
Warning: Wire picorv32a.\trace_data [33] is used but has no driver.
Warning: Wire picorv32a.\trace_data [32] is used but has no driver.
Warning: Wire picorv32a.\trace_data [31] is used but has no driver.
Warning: Wire picorv32a.\trace_data [30] is used but has no driver.
Warning: Wire picorv32a.\trace_data [29] is used but has no driver.
Warning: Wire picorv32a.\trace_data [28] is used but has no driver.
Warning: Wire picorv32a.\trace_data [27] is used but has no driver.
Warning: Wire picorv32a.\trace_data [26] is used but has no driver.
Warning: Wire picorv32a.\trace_data [25] is used but has no driver.
Warning: Wire picorv32a.\trace_data [24] is used but has no driver.
Warning: Wire picorv32a.\trace_data [23] is used but has no driver.
Warning: Wire picorv32a.\trace_data [22] is used but has no driver.
Warning: Wire picorv32a.\trace_data [21] is used but has no driver.
Warning: Wire picorv32a.\trace_data [20] is used but has no driver.
Warning: Wire picorv32a.\trace_data [19] is used but has no driver.
Warning: Wire picorv32a.\trace_data [18] is used but has no driver.
Warning: Wire picorv32a.\trace_data [17] is used but has no driver.
Warning: Wire picorv32a.\trace_data [16] is used but has no driver.
Warning: Wire picorv32a.\trace_data [15] is used but has no driver.
Warning: Wire picorv32a.\trace_data [14] is used but has no driver.
Warning: Wire picorv32a.\trace_data [13] is used but has no driver.
Warning: Wire picorv32a.\trace_data [12] is used but has no driver.
Warning: Wire picorv32a.\trace_data [11] is used but has no driver.
Warning: Wire picorv32a.\trace_data [10] is used but has no driver.
Warning: Wire picorv32a.\trace_data [9] is used but has no driver.
Warning: Wire picorv32a.\trace_data [8] is used but has no driver.
Warning: Wire picorv32a.\trace_data [7] is used but has no driver.
Warning: Wire picorv32a.\trace_data [6] is used but has no driver.
Warning: Wire picorv32a.\trace_data [5] is used but has no driver.
Warning: Wire picorv32a.\trace_data [4] is used but has no driver.
Warning: Wire picorv32a.\trace_data [3] is used but has no driver.
Warning: Wire picorv32a.\trace_data [2] is used but has no driver.
Warning: Wire picorv32a.\trace_data [1] is used but has no driver.
Warning: Wire picorv32a.\trace_data [0] is used but has no driver.
Warning: Wire picorv32a.\pcpi_valid is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs2 [31] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs2 [30] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs2 [29] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs2 [28] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs2 [27] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs2 [26] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs2 [25] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs2 [24] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs2 [23] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs2 [22] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs2 [21] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs2 [20] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs2 [19] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs2 [18] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs2 [17] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs2 [16] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs2 [15] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs2 [14] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs2 [13] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs2 [12] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs2 [11] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs2 [10] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs2 [9] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs2 [8] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs2 [7] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs2 [6] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs2 [5] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs2 [4] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs2 [3] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs2 [2] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs2 [1] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs2 [0] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs1 [31] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs1 [30] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs1 [29] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs1 [28] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs1 [27] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs1 [26] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs1 [25] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs1 [24] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs1 [23] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs1 [22] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs1 [21] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs1 [20] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs1 [19] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs1 [18] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs1 [17] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs1 [16] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs1 [15] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs1 [14] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs1 [13] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs1 [12] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs1 [11] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs1 [10] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs1 [9] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs1 [8] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs1 [7] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs1 [6] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs1 [5] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs1 [4] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs1 [3] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs1 [2] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs1 [1] is used but has no driver.
Warning: Wire picorv32a.\pcpi_rs1 [0] is used but has no driver.
Warning: Wire picorv32a.\pcpi_insn [31] is used but has no driver.
Warning: Wire picorv32a.\pcpi_insn [30] is used but has no driver.
Warning: Wire picorv32a.\pcpi_insn [29] is used but has no driver.
Warning: Wire picorv32a.\pcpi_insn [28] is used but has no driver.
Warning: Wire picorv32a.\pcpi_insn [27] is used but has no driver.
Warning: Wire picorv32a.\pcpi_insn [26] is used but has no driver.
Warning: Wire picorv32a.\pcpi_insn [25] is used but has no driver.
Warning: Wire picorv32a.\pcpi_insn [24] is used but has no driver.
Warning: Wire picorv32a.\pcpi_insn [23] is used but has no driver.
Warning: Wire picorv32a.\pcpi_insn [22] is used but has no driver.
Warning: Wire picorv32a.\pcpi_insn [21] is used but has no driver.
Warning: Wire picorv32a.\pcpi_insn [20] is used but has no driver.
Warning: Wire picorv32a.\pcpi_insn [19] is used but has no driver.
Warning: Wire picorv32a.\pcpi_insn [18] is used but has no driver.
Warning: Wire picorv32a.\pcpi_insn [17] is used but has no driver.
Warning: Wire picorv32a.\pcpi_insn [16] is used but has no driver.
Warning: Wire picorv32a.\pcpi_insn [15] is used but has no driver.
Warning: Wire picorv32a.\pcpi_insn [14] is used but has no driver.
Warning: Wire picorv32a.\pcpi_insn [13] is used but has no driver.
Warning: Wire picorv32a.\pcpi_insn [12] is used but has no driver.
Warning: Wire picorv32a.\pcpi_insn [11] is used but has no driver.
Warning: Wire picorv32a.\pcpi_insn [10] is used but has no driver.
Warning: Wire picorv32a.\pcpi_insn [9] is used but has no driver.
Warning: Wire picorv32a.\pcpi_insn [8] is used but has no driver.
Warning: Wire picorv32a.\pcpi_insn [7] is used but has no driver.
Warning: Wire picorv32a.\pcpi_insn [6] is used but has no driver.
Warning: Wire picorv32a.\pcpi_insn [5] is used but has no driver.
Warning: Wire picorv32a.\pcpi_insn [4] is used but has no driver.
Warning: Wire picorv32a.\pcpi_insn [3] is used but has no driver.
Warning: Wire picorv32a.\pcpi_insn [2] is used but has no driver.
Warning: Wire picorv32a.\pcpi_insn [1] is used but has no driver.
Warning: Wire picorv32a.\pcpi_insn [0] is used but has no driver.
Warning: Wire picorv32a.\mem_wstrb [3] is used but has no driver.
Warning: Wire picorv32a.\mem_wstrb [2] is used but has no driver.
Warning: Wire picorv32a.\mem_wstrb [1] is used but has no driver.
Warning: Wire picorv32a.\mem_wstrb [0] is used but has no driver.
Warning: Wire picorv32a.\mem_wdata [31] is used but has no driver.
Warning: Wire picorv32a.\mem_wdata [30] is used but has no driver.
Warning: Wire picorv32a.\mem_wdata [29] is used but has no driver.
Warning: Wire picorv32a.\mem_wdata [28] is used but has no driver.
Warning: Wire picorv32a.\mem_wdata [27] is used but has no driver.
Warning: Wire picorv32a.\mem_wdata [26] is used but has no driver.
Warning: Wire picorv32a.\mem_wdata [25] is used but has no driver.
Warning: Wire picorv32a.\mem_wdata [24] is used but has no driver.
Warning: Wire picorv32a.\mem_wdata [23] is used but has no driver.
Warning: Wire picorv32a.\mem_wdata [22] is used but has no driver.
Warning: Wire picorv32a.\mem_wdata [21] is used but has no driver.
Warning: Wire picorv32a.\mem_wdata [20] is used but has no driver.
Warning: Wire picorv32a.\mem_wdata [19] is used but has no driver.
Warning: Wire picorv32a.\mem_wdata [18] is used but has no driver.
Warning: Wire picorv32a.\mem_wdata [17] is used but has no driver.
Warning: Wire picorv32a.\mem_wdata [16] is used but has no driver.
Warning: Wire picorv32a.\mem_wdata [15] is used but has no driver.
Warning: Wire picorv32a.\mem_wdata [14] is used but has no driver.
Warning: Wire picorv32a.\mem_wdata [13] is used but has no driver.
Warning: Wire picorv32a.\mem_wdata [12] is used but has no driver.
Warning: Wire picorv32a.\mem_wdata [11] is used but has no driver.
Warning: Wire picorv32a.\mem_wdata [10] is used but has no driver.
Warning: Wire picorv32a.\mem_wdata [9] is used but has no driver.
Warning: Wire picorv32a.\mem_wdata [8] is used but has no driver.
Warning: Wire picorv32a.\mem_wdata [7] is used but has no driver.
Warning: Wire picorv32a.\mem_wdata [6] is used but has no driver.
Warning: Wire picorv32a.\mem_wdata [5] is used but has no driver.
Warning: Wire picorv32a.\mem_wdata [4] is used but has no driver.
Warning: Wire picorv32a.\mem_wdata [3] is used but has no driver.
Warning: Wire picorv32a.\mem_wdata [2] is used but has no driver.
Warning: Wire picorv32a.\mem_wdata [1] is used but has no driver.
Warning: Wire picorv32a.\mem_wdata [0] is used but has no driver.
Warning: Wire picorv32a.\mem_valid is used but has no driver.
Warning: Wire picorv32a.\mem_la_wstrb [3] is used but has no driver.
Warning: Wire picorv32a.\mem_la_wstrb [2] is used but has no driver.
Warning: Wire picorv32a.\mem_la_wstrb [1] is used but has no driver.
Warning: Wire picorv32a.\mem_la_wstrb [0] is used but has no driver.
Warning: Wire picorv32a.\mem_la_write is used but has no driver.
Warning: Wire picorv32a.\mem_la_wdata [31] is used but has no driver.
Warning: Wire picorv32a.\mem_la_wdata [30] is used but has no driver.
Warning: Wire picorv32a.\mem_la_wdata [29] is used but has no driver.
Warning: Wire picorv32a.\mem_la_wdata [28] is used but has no driver.
Warning: Wire picorv32a.\mem_la_wdata [27] is used but has no driver.
Warning: Wire picorv32a.\mem_la_wdata [26] is used but has no driver.
Warning: Wire picorv32a.\mem_la_wdata [25] is used but has no driver.
Warning: Wire picorv32a.\mem_la_wdata [24] is used but has no driver.
Warning: Wire picorv32a.\mem_la_wdata [23] is used but has no driver.
Warning: Wire picorv32a.\mem_la_wdata [22] is used but has no driver.
Warning: Wire picorv32a.\mem_la_wdata [21] is used but has no driver.
Warning: Wire picorv32a.\mem_la_wdata [20] is used but has no driver.
Warning: Wire picorv32a.\mem_la_wdata [19] is used but has no driver.
Warning: Wire picorv32a.\mem_la_wdata [18] is used but has no driver.
Warning: Wire picorv32a.\mem_la_wdata [17] is used but has no driver.
Warning: Wire picorv32a.\mem_la_wdata [16] is used but has no driver.
Warning: Wire picorv32a.\mem_la_wdata [15] is used but has no driver.
Warning: Wire picorv32a.\mem_la_wdata [14] is used but has no driver.
Warning: Wire picorv32a.\mem_la_wdata [13] is used but has no driver.
Warning: Wire picorv32a.\mem_la_wdata [12] is used but has no driver.
Warning: Wire picorv32a.\mem_la_wdata [11] is used but has no driver.
Warning: Wire picorv32a.\mem_la_wdata [10] is used but has no driver.
Warning: Wire picorv32a.\mem_la_wdata [9] is used but has no driver.
Warning: Wire picorv32a.\mem_la_wdata [8] is used but has no driver.
Warning: Wire picorv32a.\mem_la_wdata [7] is used but has no driver.
Warning: Wire picorv32a.\mem_la_wdata [6] is used but has no driver.
Warning: Wire picorv32a.\mem_la_wdata [5] is used but has no driver.
Warning: Wire picorv32a.\mem_la_wdata [4] is used but has no driver.
Warning: Wire picorv32a.\mem_la_wdata [3] is used but has no driver.
Warning: Wire picorv32a.\mem_la_wdata [2] is used but has no driver.
Warning: Wire picorv32a.\mem_la_wdata [1] is used but has no driver.
Warning: Wire picorv32a.\mem_la_wdata [0] is used but has no driver.
Warning: Wire picorv32a.\mem_la_read is used but has no driver.
Warning: Wire picorv32a.\mem_la_addr [31] is used but has no driver.
Warning: Wire picorv32a.\mem_la_addr [30] is used but has no driver.
Warning: Wire picorv32a.\mem_la_addr [29] is used but has no driver.
Warning: Wire picorv32a.\mem_la_addr [28] is used but has no driver.
Warning: Wire picorv32a.\mem_la_addr [27] is used but has no driver.
Warning: Wire picorv32a.\mem_la_addr [26] is used but has no driver.
Warning: Wire picorv32a.\mem_la_addr [25] is used but has no driver.
Warning: Wire picorv32a.\mem_la_addr [24] is used but has no driver.
Warning: Wire picorv32a.\mem_la_addr [23] is used but has no driver.
Warning: Wire picorv32a.\mem_la_addr [22] is used but has no driver.
Warning: Wire picorv32a.\mem_la_addr [21] is used but has no driver.
Warning: Wire picorv32a.\mem_la_addr [20] is used but has no driver.
Warning: Wire picorv32a.\mem_la_addr [19] is used but has no driver.
Warning: Wire picorv32a.\mem_la_addr [18] is used but has no driver.
Warning: Wire picorv32a.\mem_la_addr [17] is used but has no driver.
Warning: Wire picorv32a.\mem_la_addr [16] is used but has no driver.
Warning: Wire picorv32a.\mem_la_addr [15] is used but has no driver.
Warning: Wire picorv32a.\mem_la_addr [14] is used but has no driver.
Warning: Wire picorv32a.\mem_la_addr [13] is used but has no driver.
Warning: Wire picorv32a.\mem_la_addr [12] is used but has no driver.
Warning: Wire picorv32a.\mem_la_addr [11] is used but has no driver.
Warning: Wire picorv32a.\mem_la_addr [10] is used but has no driver.
Warning: Wire picorv32a.\mem_la_addr [9] is used but has no driver.
Warning: Wire picorv32a.\mem_la_addr [8] is used but has no driver.
Warning: Wire picorv32a.\mem_la_addr [7] is used but has no driver.
Warning: Wire picorv32a.\mem_la_addr [6] is used but has no driver.
Warning: Wire picorv32a.\mem_la_addr [5] is used but has no driver.
Warning: Wire picorv32a.\mem_la_addr [4] is used but has no driver.
Warning: Wire picorv32a.\mem_la_addr [3] is used but has no driver.
Warning: Wire picorv32a.\mem_la_addr [2] is used but has no driver.
Warning: Wire picorv32a.\mem_la_addr [1] is used but has no driver.
Warning: Wire picorv32a.\mem_la_addr [0] is used but has no driver.
Warning: Wire picorv32a.\mem_instr is used but has no driver.
Warning: Wire picorv32a.\mem_addr [31] is used but has no driver.
Warning: Wire picorv32a.\mem_addr [30] is used but has no driver.
Warning: Wire picorv32a.\mem_addr [29] is used but has no driver.
Warning: Wire picorv32a.\mem_addr [28] is used but has no driver.
Warning: Wire picorv32a.\mem_addr [27] is used but has no driver.
Warning: Wire picorv32a.\mem_addr [26] is used but has no driver.
Warning: Wire picorv32a.\mem_addr [25] is used but has no driver.
Warning: Wire picorv32a.\mem_addr [24] is used but has no driver.
Warning: Wire picorv32a.\mem_addr [23] is used but has no driver.
Warning: Wire picorv32a.\mem_addr [22] is used but has no driver.
Warning: Wire picorv32a.\mem_addr [21] is used but has no driver.
Warning: Wire picorv32a.\mem_addr [20] is used but has no driver.
Warning: Wire picorv32a.\mem_addr [19] is used but has no driver.
Warning: Wire picorv32a.\mem_addr [18] is used but has no driver.
Warning: Wire picorv32a.\mem_addr [17] is used but has no driver.
Warning: Wire picorv32a.\mem_addr [16] is used but has no driver.
Warning: Wire picorv32a.\mem_addr [15] is used but has no driver.
Warning: Wire picorv32a.\mem_addr [14] is used but has no driver.
Warning: Wire picorv32a.\mem_addr [13] is used but has no driver.
Warning: Wire picorv32a.\mem_addr [12] is used but has no driver.
Warning: Wire picorv32a.\mem_addr [11] is used but has no driver.
Warning: Wire picorv32a.\mem_addr [10] is used but has no driver.
Warning: Wire picorv32a.\mem_addr [9] is used but has no driver.
Warning: Wire picorv32a.\mem_addr [8] is used but has no driver.
Warning: Wire picorv32a.\mem_addr [7] is used but has no driver.
Warning: Wire picorv32a.\mem_addr [6] is used but has no driver.
Warning: Wire picorv32a.\mem_addr [5] is used but has no driver.
Warning: Wire picorv32a.\mem_addr [4] is used but has no driver.
Warning: Wire picorv32a.\mem_addr [3] is used but has no driver.
Warning: Wire picorv32a.\mem_addr [2] is used but has no driver.
Warning: Wire picorv32a.\mem_addr [1] is used but has no driver.
Warning: Wire picorv32a.\mem_addr [0] is used but has no driver.
Warning: Wire picorv32a.\eoi [31] is used but has no driver.
Warning: Wire picorv32a.\eoi [30] is used but has no driver.
Warning: Wire picorv32a.\eoi [29] is used but has no driver.
Warning: Wire picorv32a.\eoi [28] is used but has no driver.
Warning: Wire picorv32a.\eoi [27] is used but has no driver.
Warning: Wire picorv32a.\eoi [26] is used but has no driver.
Warning: Wire picorv32a.\eoi [25] is used but has no driver.
Warning: Wire picorv32a.\eoi [24] is used but has no driver.
Warning: Wire picorv32a.\eoi [23] is used but has no driver.
Warning: Wire picorv32a.\eoi [22] is used but has no driver.
Warning: Wire picorv32a.\eoi [21] is used but has no driver.
Warning: Wire picorv32a.\eoi [20] is used but has no driver.
Warning: Wire picorv32a.\eoi [19] is used but has no driver.
Warning: Wire picorv32a.\eoi [18] is used but has no driver.
Warning: Wire picorv32a.\eoi [17] is used but has no driver.
Warning: Wire picorv32a.\eoi [16] is used but has no driver.
Warning: Wire picorv32a.\eoi [15] is used but has no driver.
Warning: Wire picorv32a.\eoi [14] is used but has no driver.
Warning: Wire picorv32a.\eoi [13] is used but has no driver.
Warning: Wire picorv32a.\eoi [12] is used but has no driver.
Warning: Wire picorv32a.\eoi [11] is used but has no driver.
Warning: Wire picorv32a.\eoi [10] is used but has no driver.
Warning: Wire picorv32a.\eoi [9] is used but has no driver.
Warning: Wire picorv32a.\eoi [8] is used but has no driver.
Warning: Wire picorv32a.\eoi [7] is used but has no driver.
Warning: Wire picorv32a.\eoi [6] is used but has no driver.
Warning: Wire picorv32a.\eoi [5] is used but has no driver.
Warning: Wire picorv32a.\eoi [4] is used but has no driver.
Warning: Wire picorv32a.\eoi [3] is used but has no driver.
Warning: Wire picorv32a.\eoi [2] is used but has no driver.
Warning: Wire picorv32a.\eoi [1] is used but has no driver.
Warning: Wire picorv32a.\eoi [0] is used but has no driver.
Found and reported 307 problems.

24. Printing statistics.

=== picorv32a ===

   Number of wires:              16497
   Number of wire bits:          16879
   Number of public wires:        1475
   Number of public wire bits:    1857
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              16777
     sky130_fd_sc_hd__a2111o_2       4
     sky130_fd_sc_hd__a2111oi_2      1
     sky130_fd_sc_hd__a211o_2      309
     sky130_fd_sc_hd__a211oi_2     106
     sky130_fd_sc_hd__a21bo_2      151
     sky130_fd_sc_hd__a21boi_2      48
     sky130_fd_sc_hd__a21o_2       483
     sky130_fd_sc_hd__a21oi_2      435
     sky130_fd_sc_hd__a221o_2      244
     sky130_fd_sc_hd__a221oi_2       2
     sky130_fd_sc_hd__a22o_2       360
     sky130_fd_sc_hd__a22oi_2      247
     sky130_fd_sc_hd__a2bb2o_2      54
     sky130_fd_sc_hd__a2bb2oi_2      4
     sky130_fd_sc_hd__a311o_2       16
     sky130_fd_sc_hd__a311oi_2       5
     sky130_fd_sc_hd__a31o_2       231
     sky130_fd_sc_hd__a31oi_2        6
     sky130_fd_sc_hd__a32o_2        69
     sky130_fd_sc_hd__a32oi_2        1
     sky130_fd_sc_hd__a41o_2         6
     sky130_fd_sc_hd__a41oi_2        1
     sky130_fd_sc_hd__and2_2       475
     sky130_fd_sc_hd__and2b_2      242
     sky130_fd_sc_hd__and3_2       391
     sky130_fd_sc_hd__and3b_2       72
     sky130_fd_sc_hd__and4_2       266
     sky130_fd_sc_hd__and4b_2        9
     sky130_fd_sc_hd__and4bb_2      22
     sky130_fd_sc_hd__buf_1       3125
     sky130_fd_sc_hd__buf_2          8
     sky130_fd_sc_hd__conb_1        41
     sky130_fd_sc_hd__dfxtp_2     1613
     sky130_fd_sc_hd__inv_2        183
     sky130_fd_sc_hd__mux2_2      1358
     sky130_fd_sc_hd__mux4_2        48
     sky130_fd_sc_hd__nand2_2      932
     sky130_fd_sc_hd__nand2b_2       4
     sky130_fd_sc_hd__nand3_2      267
     sky130_fd_sc_hd__nand3b_2      11
     sky130_fd_sc_hd__nand4_2      103
     sky130_fd_sc_hd__nand4b_2       1
     sky130_fd_sc_hd__nor2_2       826
     sky130_fd_sc_hd__nor3_2        74
     sky130_fd_sc_hd__nor3b_2        6
     sky130_fd_sc_hd__nor4_2        18
     sky130_fd_sc_hd__o2111a_2       4
     sky130_fd_sc_hd__o2111ai_2      2
     sky130_fd_sc_hd__o211a_2      304
     sky130_fd_sc_hd__o211ai_2     143
     sky130_fd_sc_hd__o21a_2       314
     sky130_fd_sc_hd__o21ai_2      326
     sky130_fd_sc_hd__o21ba_2      144
     sky130_fd_sc_hd__o21bai_2      47
     sky130_fd_sc_hd__o221a_2       60
     sky130_fd_sc_hd__o221ai_2       2
     sky130_fd_sc_hd__o22a_2        67
     sky130_fd_sc_hd__o22ai_2       10
     sky130_fd_sc_hd__o2bb2a_2      23
     sky130_fd_sc_hd__o311a_2       42
     sky130_fd_sc_hd__o31a_2        16
     sky130_fd_sc_hd__o31ai_2       15
     sky130_fd_sc_hd__o32a_2         6
     sky130_fd_sc_hd__o32ai_2        1
     sky130_fd_sc_hd__o41ai_2        1
     sky130_fd_sc_hd__or2_2        627
     sky130_fd_sc_hd__or2b_2       221
     sky130_fd_sc_hd__or3_2        143
     sky130_fd_sc_hd__or3b_2        28
     sky130_fd_sc_hd__or4_2         67
     sky130_fd_sc_hd__or4b_2        18
     sky130_fd_sc_hd__or4bb_2        6
     sky130_fd_sc_hd__xnor2_2      976
     sky130_fd_sc_hd__xor2_2       286

   Chip area for module '\picorv32a': 163510.569600

25. Executing Verilog backend.
Dumping module `\picorv32a'.

Warnings: 307 unique messages, 307 total
End of script. Logfile hash: 9b4033467e, CPU: user 11.84s system 0.07s, MEM: 102.61 MB peak
Yosys 0.12+45 (git sha1 UNKNOWN, gcc 8.3.1 -fPIC -Os)
Time spent: 70% 2x abc (27 sec), 8% 42x opt_expr (3 sec), ...
